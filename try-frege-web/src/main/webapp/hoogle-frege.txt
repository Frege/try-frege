-- | Print a value to the standard output writer. 
--   This will come out UTF8 encoded.  
@url http://www.frege-lang.org/doc/frege/Prelude#print
print ∷ Show α ⇒ α → IO ()

-- | Print a value to the standard output stream and append a platform typical new line character. 
--   This will come out UTF8 encoded.  
@url http://www.frege-lang.org/doc/frege/Prelude#println
println ∷ Show α ⇒ α → IO ()

-- | write a character to IO.stdout  
@url http://www.frege-lang.org/doc/frege/Prelude#putChar
putChar ∷ Char → IO ()

-- | write a String to standard output (Haskell compatibility)  
@url http://www.frege-lang.org/doc/frege/Prelude#putStr
putStr ∷ String → IO ()

-- | write a String and a new line to standard output (Haskell compatibility)  
@url http://www.frege-lang.org/doc/frege/Prelude#putStrLn
putStrLn ∷ String → IO ()

-- | read a character from the standard input reader  
@url http://www.frege-lang.org/doc/frege/Prelude#getChar
getChar ∷ IO Char

-- | read a line from the standard input reader, end of line characters are removed.  
@url http://www.frege-lang.org/doc/frege/Prelude#getLine
getLine ∷ IO String

-- | The getContents operation returns all user input as a single string  
@url http://www.frege-lang.org/doc/frege/Prelude#getContents
getContents ∷ IO String

-- | The getContentsOf operation returns all input from the supplied Reader as a single string. 
--   After completion, the Reader is closed.  
@url http://www.frege-lang.org/doc/frege/Prelude#getContentsOf
getContentsOf ∷ Reader → IO String

-- | The interact function takes a function of type String -> String as its argument. The entire input from the standard input device is passed to this function as its argument, and the resulting string is output on the standard output device. 
@url http://www.frege-lang.org/doc/frege/Prelude#interact
interact ∷ (String→String) → IO ()

-- | The readFile function reads a file and returns the contents of the file as a string. 
--   If the file doesn't exist, a FileNotFoundException will be thrown.  
@url http://www.frege-lang.org/doc/frege/Prelude#readFile
readFile ∷ String → IO String

-- | Writes the String given as second argument to the file whose name is given as the first argument. 
--   After completion, the file will be closed.  
@url http://www.frege-lang.org/doc/frege/Prelude#writeFile
writeFile ∷ String → String → IO ()

-- | Appends the String given as second argument to the file whose name is given as the first argument. 
--   After completion, the file will be closed.  
@url http://www.frege-lang.org/doc/frege/Prelude#appendFile
appendFile ∷ String → String → IO ()

-- | unsafe trace, returns always false and can thus be used like 
--   fun x y | trace ("x is " ++ show x) = undefined | traceLn ("y is " ++ show y) = undefined | otherwise = ...... 
--   Note that this imposes strictness on the traced data. 
@url http://www.frege-lang.org/doc/frege/Prelude#trace
trace ∷ String → Bool

-- | same as trace but appends a line break  
@url http://www.frege-lang.org/doc/frege/Prelude#traceLn
traceLn ∷ String → Bool

-- | Basic arrow definitions, based on Generalising Monads to Arrows, by John Hughes, Science of Computer Programming, pp67-111, May 2000. 
--   Known Instances
--  ----------------
--  -> 
--   Member Functions
--  ----------------
--  arr ∷ Arrow a ⇒ (b → c) → a b c 
--   Lift a function to an arrow.    
@url http://www.frege-lang.org/doc/frege/control/Arrow#Arrow
class (Semigroupoid.Semigroupoid a, Tensor.Tensor a, Second a, First a, CombineIn a, Category a) ⇒ Arrow a

-- | Lift a function to an arrow.  
@url http://www.frege-lang.org/doc/frege/control/Arrow#Arrow.arr
arr ∷ Arrow a ⇒ (b → c) → a b c

-- | A category is a Semigroupoid with the following additional properties: For every object A, there exists a mophism id(A): A -> A called the identity morphism for A, such that for every morphism f: A -> B we have 
--   id(B) • f = f = f • id(A) 
--   Known Instances
--  ----------------
--  -> 
--   Member Functions
--  ----------------
--  id ∷ Category f ⇒ f a a 
--   the identity morphism    
@url http://www.frege-lang.org/doc/frege/control/Category#Category
class Semigroupoid f ⇒ Category f

-- | the identity morphism  
@url http://www.frege-lang.org/doc/frege/control/Category#Category.id
id ∷ Category f ⇒ f a a

-- | Known Instances
--  ----------------
--  -> 
--   Member Functions
--  ----------------
--  &&& ∷ CombineIn f ⇒ f a b → f a c → f a (b, c) 
--  infixr  3 
--   Send the input to both argument semigroupoids and combine their output.   
@url http://www.frege-lang.org/doc/frege/control/CombineIn#CombineIn
class Semigroupoid f ⇒ CombineIn f

-- | Send the input to both argument semigroupoids and combine their output. 
@url http://www.frege-lang.org/doc/frege/control/CombineIn#CombineIn._amp_amp_amp
(&&&) ∷  CombineIn f ⇒ f a b → f a c → f a (b, c) 
infixr  3

-- | A thread safe, shared variable, that is either full or empty. 
--   Technically, this is just a BlockingQueue restricted to length 1.  
--   Constructors
--  ----------------
--  private MV (BlockingQueue a) 
--   Member Functions
--  ----------------
--  new ∷ α → IO (MVar α) 
--   create a MVar filled with a value   
--  newEmpty ∷ IO (MVar α) 
--   create an empty MVar   
--  offer ∷ MVar α → α → IO Bool 
--   put a value in a MVar, returns false if already full.   
--  poll ∷ MVar α → IO (Maybe α) 
--   get the value from a MVar, return Maybe.Nothing when empty   
--  put ∷ MVar α → α → IO () 
--   put a value in a MVar, blocks if full   
--  take ∷ MVar α → IO α 
--   take a value from a MVar, blocks if empty    
@url http://www.frege-lang.org/doc/frege/control/Concurrent#MVar
data MVar a


@url http://www.frege-lang.org/doc/frege/control/Concurrent#MVar.MV
private MV (BlockingQueue a)

-- | Alias for MVar.newEmpty 
@url http://www.frege-lang.org/doc/frege/control/Concurrent#newEmptyMVar
newEmptyMVar ∷ IO (MVar α)

-- | Alias for MVar.new 
@url http://www.frege-lang.org/doc/frege/control/Concurrent#newMVar
newMVar ∷ α → IO (MVar α)

-- | Alias for MVar.take 
@url http://www.frege-lang.org/doc/frege/control/Concurrent#takeMVar
takeMVar ∷ MVar α → IO α

-- | Alias for MVar.put 
@url http://www.frege-lang.org/doc/frege/control/Concurrent#putMVar
putMVar ∷ MVar α → α → IO ()

-- | Alias for MVar.poll 
@url http://www.frege-lang.org/doc/frege/control/Concurrent#tryTakeMVar
tryTakeMVar ∷ MVar α → IO (Maybe α)

-- | Alias for MVar.offer 
@url http://www.frege-lang.org/doc/frege/control/Concurrent#tryPutMVar
tryPutMVar ∷ MVar α → α → IO Bool

-- | Create and start a new OS Thread that runs an IO action.  
@url http://www.frege-lang.org/doc/frege/control/Concurrent#forkOS
forkOS ∷ IO () → IO Thread

-- | Run the IO action asynchronously in an ExecutorService 
--   This is not suitable for not-ending processes! 
--   The executor service may manage a fixed small number of concurrent threads only.  
@url http://www.frege-lang.org/doc/frege/control/Concurrent#forkIO
forkIO ∷ IO () → IO ()

-- | Shutdwon the ExecutorService  
@url http://www.frege-lang.org/doc/frege/control/Concurrent#shutdown
shutdown ∷ IO ()

-- | Run a IO action asynchronously and return the result in a MVar  
@url http://www.frege-lang.org/doc/frege/control/Concurrent#async
async ∷ IO a → IO (MVar (Exception | a))

-- | Known Instances
--  ----------------
--  -> 
--   Member Functions
--  ----------------
--  first ∷ First f ⇒ f a b → f (a, c) (b, c) 
--   Send the first component of the input through the argument tensor, and copy the rest unchanged to the output.   
@url http://www.frege-lang.org/doc/frege/control/First#First
class (Semigroupoid.Semigroupoid f, Tensor f) ⇒ First f

-- | Send the first component of the input through the argument tensor, and copy the rest unchanged to the output. 
@url http://www.frege-lang.org/doc/frege/control/First#First.first
first ∷ First f ⇒ f a b → f (a, c) (b, c)

-- | Known Instances
--  ----------------
--  -> 
--   Member Functions
--  ----------------
--  second ∷ Second f ⇒ f c d → f (a, c) (a, d) 
--   Send the second component of the input through the argument tensor, and copy the rest unchanged to the output.   
@url http://www.frege-lang.org/doc/frege/control/Second#Second
class (Semigroupoid.Semigroupoid f, Tensor f) ⇒ Second f

-- | Send the second component of the input through the argument tensor, and copy the rest unchanged to the output. 
@url http://www.frege-lang.org/doc/frege/control/Second#Second.second
second ∷ Second f ⇒ f c d → f (a, c) (a, d)

-- | Formally, a semigroupoid consists of a set of things called objects. for every two objects A and B a set Mor(A,B) of things called morphisms from A to B. If f is in Mor(A,B), we write f : A → B. for every three objects A, B and C a binary operation Mor(A,B) × Mor(B,C) → Mor(A,C) called composition of morphisms. The composition of f : A → B and g : B → C is written as g • f. 
--   such that the following axiom holds:  
--   associativity 
--  if f : A → B, g : B → C and h : C → D then h • (g • f) = (h • g) • f.    
--   Known Instances
--  ----------------
--  -> 
--   Member Functions
--  ----------------
--  • ∷ Semigroupoid f ⇒ f b c → f a b → f a c 
--  infixr  16 
--   morphism composition    
@url http://www.frege-lang.org/doc/frege/control/Semigroupoid#Semigroupoid
class Semigroupoid f

-- | morphism composition  
@url http://www.frege-lang.org/doc/frege/control/Semigroupoid#Semigroupoid._bullet
(•) ∷  Semigroupoid f ⇒ f b c → f a b → f a c 
infixr  16

-- | Right-to-left composition. This is the same a ordinary composition with Semigroupoid.•.  
@url http://www.frege-lang.org/doc/frege/control/Semigroupoid#_lt_lt_lt
(<<<) ∷  Semigroupoid f ⇒ f b c → f a b → f a c 
infixr  1

-- | Left-to-right composition  
@url http://www.frege-lang.org/doc/frege/control/Semigroupoid#_gt_gt_gt
(>>>) ∷  Semigroupoid f ⇒ f a b → f b c → f a c 
infixr  1

-- | Known Instances
--  ----------------
--  -> 
--   Member Functions
--  ----------------
--  *** ∷ Tensor f ⇒ f a b → f c d → f (a, c) (b, d) 
--  infixr  3 
--   Split the input between the two argument semigroupoids and combine their output. Note that this is in general not a functor.   
@url http://www.frege-lang.org/doc/frege/control/Tensor#Tensor
class Semigroupoid f ⇒ Tensor f

-- | Split the input between the two argument semigroupoids and combine their output. Note that this is in general not a functor. 
@url http://www.frege-lang.org/doc/frege/control/Tensor#Tensor._star_star_star
(***) ∷  Tensor f ⇒ f a b → f c d → f (a, c) (b, d) 
infixr  3

-- | Constructors
--  ----------------
--  Kleisli {run ∷ a → m b} 
--   Member Functions
--  ----------------
--  run ∷ Kleisli α γ β → γ → α β 
--   access field run   
@url http://www.frege-lang.org/doc/frege/control/arrow/Kleisli#Kleisli
data Kleisli m a b


@url http://www.frege-lang.org/doc/frege/control/arrow/Kleisli#Kleisli.Kleisli
Kleisli {run ∷ a → m b}


@url http://www.frege-lang.org/doc/frege/control/monad/Reader#Reader
type Reader a b = Kleisli Identity a b


@url http://www.frege-lang.org/doc/frege/control/monad/Reader#ReaderT
type ReaderT m a b = Kleisli m a b


@url http://www.frege-lang.org/doc/frege/control/monad/Reader#ask
ask ∷ Monad m ⇒ ReaderT m e e

-- |State s a is an abstract data type that resembles a stateful computation with State s and result a, i.e. functions of type s -> (a, s) where the State is immutable. 
--   Constructors
--  ----------------
--  private State (s → (a, s)) 
--   Member Functions
--  ----------------
--  get ∷ State α α 
--   return the state from the internals of the monad   
--  modify ∷ (α→α) → State α () 
--   modify the State   
--  put ∷ α → State α () 
--   replace the State inside the monad   
--  run ∷ State α β → α → (β, α) 
--   run a stateful computation    
@url http://www.frege-lang.org/doc/frege/control/monad/State#State
data State s a


@url http://www.frege-lang.org/doc/frege/control/monad/State#State.State
private State (s → (a, s))

-- | Alias for State.run 
@url http://www.frege-lang.org/doc/frege/control/monad/State#runState
runState ∷ State α β → α → (β, α)


@url http://www.frege-lang.org/doc/frege/control/monad/State#evalState
evalState ∷ State β α → β → α


@url http://www.frege-lang.org/doc/frege/control/monad/State#execState
execState ∷ State α β → α → α


@url http://www.frege-lang.org/doc/frege/control/monad/State#runStateT
runStateT ∷ Monad m ⇒ StateT s m v → s → m (v, s)


@url http://www.frege-lang.org/doc/frege/control/monad/State#evalStateT
evalStateT ∷ Monad m ⇒ StateT s m v → s → m v


@url http://www.frege-lang.org/doc/frege/control/monad/State#execStateT
execStateT ∷ Monad m ⇒ StateT s m v → s → m s

-- | StateT s m a 
--   A stateful computation that transforms an inner Monad m  
--   Constructors
--  ----------------
--  private StateT {run ∷ s → m (a, s)} 
--   Member Functions
--  ----------------
--  get ∷ Monad α ⇒ StateT β α β 
--  modify ∷ Monad α ⇒ (β→β) → StateT β α () 
--  put ∷ Monad α ⇒ β → StateT β α () 
--  run ∷ StateT γ α β → γ → α (β, γ) 
--   access field run   
@url http://www.frege-lang.org/doc/frege/control/monad/State#StateT
data StateT s m a


@url http://www.frege-lang.org/doc/frege/control/monad/State#StateT.StateT
private StateT {run ∷ s → m (a, s)}


@url http://www.frege-lang.org/doc/frege/control/monad/State#promote
promote ∷ Monad β ⇒ State α γ → StateT α β γ

-- | Constructors
--  ----------------
--  EitherT {run ∷ m (l | a)} 
--   Member Functions
--  ----------------
--  run ∷ EitherT α γ β → γ (α | β) 
--   access field run   
@url http://www.frege-lang.org/doc/frege/control/monad/trans/EitherT#EitherT
data EitherT l m a


@url http://www.frege-lang.org/doc/frege/control/monad/trans/EitherT#EitherT.EitherT
EitherT {run ∷ m (l | a)}


@url http://www.frege-lang.org/doc/frege/control/monad/trans/EitherT#left
left ∷ Monad m ⇒ l → EitherT l m a

-- | The parameterizable maybe monad, obtained by composing an arbitrary monad with the Maybe monad. 
--   Computations are actions that may produce a value or fail. 
--   The Monad.return function yields a successful computation, while (>>=) sequences two subcomputations, failing on the first error. 
--   Constructors
--  ----------------
--  MaybeT {run ∷ m (Maybe a)} 
--   Member Functions
--  ----------------
--  run ∷ MaybeT α β → α (Maybe β) 
--   access field run   
@url http://www.frege-lang.org/doc/frege/control/monad/trans/MaybeT#MaybeT
data MaybeT m a


@url http://www.frege-lang.org/doc/frege/control/monad/trans/MaybeT#MaybeT.MaybeT
MaybeT {run ∷ m (Maybe a)}

-- | Transform the computation inside a MaybeT.  
@url http://www.frege-lang.org/doc/frege/control/monad/trans/MaybeT#mapMaybeT
mapMaybeT ∷ (m (Maybe a) → n (Maybe b)) → MaybeT m a → MaybeT n b

-- | Monads in which IO computations may be embedded. 
--   Any monad built by applying a sequence of monad transformers to the IO monad will be an instance of this class. 
--   Instances should satisfy the following laws, which state that MonadIO.liftIO is a transformer of monads: 
--   liftIO . return = return 
--   liftIO (m >>= f) = liftIO m >>= (liftIO . f) 
--   Known Instances
--  ----------------
--  ST 
--   Member Functions
--  ----------------
--  liftIO ∷ MonadIO m ⇒ IO a → m a 
--   Lift a computation from the IO monad.    
@url http://www.frege-lang.org/doc/frege/control/monad/trans/MonadIO#MonadIO
class (Functor m, Apply m, Bind m, Applicative m, Monad m) ⇒ MonadIO m

-- | Lift a computation from the IO monad.  
@url http://www.frege-lang.org/doc/frege/control/monad/trans/MonadIO#MonadIO.liftIO
liftIO ∷ MonadIO m ⇒ IO a → m a

-- | Member Functions
--  ----------------
--  lift ∷ (MonadTrans t, Monad m) ⇒ m a → t m a 
--   Lift a computation from the argument monad to the constructed monad.    
@url http://www.frege-lang.org/doc/frege/control/monad/trans/MonadTrans#MonadTrans
class MonadTrans t

-- | Lift a computation from the argument monad to the constructed monad.  
@url http://www.frege-lang.org/doc/frege/control/monad/trans/MonadTrans#MonadTrans.lift
lift ∷ (MonadTrans t, Monad m) ⇒ m a → t m a

-- | Constructors
--  ----------------
--  BitSet {set ∷ Long} 
--   Member Functions
--  ----------------
--  difference ∷ BitSet α → BitSet α → BitSet α 
--  a `difference` b -- a set with all elements that are members of a and not members of b   
--  differenceE ∷ Enum α ⇒ BitSet α → α → BitSet α 
--  a `differenceE` e = a `difference` {e}   
--  fromList ∷ Enum α ⇒ [α] → BitSet α 
--   convert a list to a BitSet   
--  intersection ∷ BitSet α → BitSet α → BitSet α 
--  a `intersection` b -- a set with all elements that are members of a and members of b   
--  intersectionE ∷ Enum α ⇒ BitSet α → α → BitSet α 
--  a `intersectionE` e = a `intersection` {e}   
--  member ∷ Enum α ⇒ α → BitSet α → Bool 
--   Predicate to tell if an element is a member of a set   
--  set ∷ BitSet α → Long 
--   access field set  
--  singleton ∷ Enum α ⇒ α → BitSet α 
--   A set with one argument   
--  size ∷ BitSet α → Int 
--   tell the number of elements in a BitSet   
--  subset ∷ BitSet α → BitSet α → Bool 
--   Predicate that tells if one set is a subset of another   
--  toList ∷ Enum α ⇒ BitSet α → [α] 
--   convert a BitSet to a list   
--  union ∷ BitSet α → BitSet α → BitSet α 
--  a `union` b -- a set with all elements that are members of a or members of b   
--  unionE ∷ Enum α ⇒ BitSet α → α → BitSet α 
--  a `unionE` e = a `union` {e}   
--  universal ∷ (Enum α, Bounded α) ⇒ BitSet α 
--   The universal set    
@url http://www.frege-lang.org/doc/frege/data/Bits#BitSet
data BitSet e


@url http://www.frege-lang.org/doc/frege/data/Bits#BitSet.BitSet
BitSet {set ∷ Long}

-- | The Bits class defines bitwise operations over integral types. 
--   Bits are numbered from 0 with bit 0 being the least significant bit. 
--   Minimal complete definition: .&., .|., .^., Bits.complement, (Bits.shift or (Bits.shiftL and Bits.shiftR)), (Bits.rotate or (Bits.rotateL and Bits.rotateR)), Bits.bitSize and Bits.isSigned. 
--   Known Instances
--  ----------------
--  Long, Int, Integer 
--   Member Functions
--  ----------------
--  .&. ∷ Bits a ⇒ a → a → a 
--  infixl  11 
--   Bitwise \"and\"   
--  .^. ∷ Bits a ⇒ a → a → a 
--  infixl  10 
--   Bitwise \"xor\"   
--  .|. ∷ Bits a ⇒ a → a → a 
--  infixl  10 
--   Bitwise \"or\"   
--  bit ∷ Bits a ⇒ Int → a 
--  bit i is a value with the ith bit set   
--  bitCount ∷ Bits a ⇒ a → Int 
--   Returns the number of one-bits in the two's complement binary representation of the specified value. 
--   Also known as "population count" or "Hamming Weight" of a bit string. 
--   See also Hamming Weight.  
--  bitSize ∷ Bits a ⇒ a → Int 
--   Return the number of bits in the type of the argument. The actual value of the argument is ignored. The function Bits.bitSize is undefined for types that do not have a fixed bitsize, like Integer.  
--  clearBit ∷ Bits a ⇒ a → Int → a 
--  x \`clearBit\` i is the same as x .&. complement (bit i)   
--  complement ∷ Bits a ⇒ a → a 
--   Reverse all the bits in the argument   
--  complementBit ∷ Bits a ⇒ a → Int → a 
--  x \`complementBit\` i is the same as x \`.^.\` bit i   
--  isSigned ∷ Bits a ⇒ a → Bool 
--   Return true if the argument is a signed type. The actual value of the argument is ignored   
--  rotate ∷ Bits a ⇒ a → Int → a 
--  infixl  12 
--  Bits.rotate x i rotates x left by i bits if i is positive, or right by -i bits otherwise. 
--   For unbounded types like Integer, Bits.rotate is equivalent to Bits.shift. 
--   An instance can define either this unified Bits.rotate or Bits.rotateL and Bits.rotateR, depending on which is more convenient for the type in question.   
--  rotateL ∷ Bits a ⇒ a → Int → a 
--  infixl  12 
--   Rotate the argument left by the specified number of bits (which must be non-negative). 
--   An instance can define either this and Bits.rotateR or the unified Bits.rotate, depending on which is more convenient for the type in question.   
--  rotateR ∷ Bits a ⇒ a → Int → a 
--  infixl  12 
--   Rotate the argument right by the specified number of bits (which must be non-negative). 
--   An instance can define either this and Bits.rotateL or the unified Bits.rotate, depending on which is more convenient for the type in question.   
--  setBit ∷ Bits a ⇒ a → Int → a 
--  x \`setBit\` i is the same as x .|. bit i   
--  shift ∷ Bits a ⇒ a → Int → a 
--  infixl  12 
--  Bits.shift x i shifts x left by i bits if i is positive, or right by -i bits otherwise. Right shifts perform sign extension on signed number types; i.e. they fill the top bits with 1 if the x is negative and with 0 otherwise. 
--   An instance can define either this unified Bits.shift or Bits.shiftL and Bits.shiftR, depending on which is more convenient for the type in question.   
--  shiftL ∷ Bits a ⇒ a → Int → a 
--  infixl  12 
--   Shift the argument left by the specified number of bits (which must be non-negative). 
--   An instance can define either this and Bits.shiftR or the unified Bits.shift, depending on which is more convenient for the type in question.   
--  shiftR ∷ Bits a ⇒ a → Int → a 
--  infixl  12 
--   Shift the first argument right by the specified number of bits (which must be non-negative). Right shifts perform sign extension on signed number types; i.e. they fill the top bits with 1 if the x is negative and with 0 otherwise. 
--   An instance can define either this and Bits.shiftL or the unified Bits.shift, depending on which is more convenient for the type in question.   
--  testBit ∷ Bits a ⇒ a → Int → Bool 
--   Return true if the nth bit of the argument is 1   
--  ushiftR ∷ Bits a ⇒ a → Int → a 
--  infixl  12 
--   Unsigned shift right   
--  xor ∷ Bits a ⇒ a → a → a 
--  infixl  10 
--   Haskell compatibility. Same as `.^.`    
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits
class (Eq a, Ord a, Num a) ⇒ Bits a

-- | Bitwise \"and\"  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits._dot_amp_dot
(.&.) ∷  Bits a ⇒ a → a → a 
infixl  11

-- | Bitwise \"xor\"  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits._dot_caret_dot
(.^.) ∷  Bits a ⇒ a → a → a 
infixl  10

-- | Bitwise \"or\"  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits._dot_bar_dot
(.|.) ∷  Bits a ⇒ a → a → a 
infixl  10

-- |bit i is a value with the ith bit set  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.bit
bit ∷ Bits a ⇒ Int → a

-- | Returns the number of one-bits in the two's complement binary representation of the specified value. 
--   Also known as "population count" or "Hamming Weight" of a bit string. 
--   See also Hamming Weight. 
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.bitCount
bitCount ∷ Bits a ⇒ a → Int

-- | Return the number of bits in the type of the argument. The actual value of the argument is ignored. The function Bits.bitSize is undefined for types that do not have a fixed bitsize, like Integer. 
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.bitSize
bitSize ∷ Bits a ⇒ a → Int

-- |x \`clearBit\` i is the same as x .&. complement (bit i)  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.clearBit
clearBit ∷ Bits a ⇒ a → Int → a

-- | Reverse all the bits in the argument  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.complement
complement ∷ Bits a ⇒ a → a

-- |x \`complementBit\` i is the same as x \`.^.\` bit i  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.complementBit
complementBit ∷ Bits a ⇒ a → Int → a

-- | Return true if the argument is a signed type. The actual value of the argument is ignored  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.isSigned
isSigned ∷ Bits a ⇒ a → Bool

-- |Bits.rotate x i rotates x left by i bits if i is positive, or right by -i bits otherwise. 
--   For unbounded types like Integer, Bits.rotate is equivalent to Bits.shift. 
--   An instance can define either this unified Bits.rotate or Bits.rotateL and Bits.rotateR, depending on which is more convenient for the type in question.  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.rotate
rotate ∷ Bits a ⇒ a → Int → a 
infixl  12

-- | Rotate the argument left by the specified number of bits (which must be non-negative). 
--   An instance can define either this and Bits.rotateR or the unified Bits.rotate, depending on which is more convenient for the type in question.  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.rotateL
rotateL ∷ Bits a ⇒ a → Int → a 
infixl  12

-- | Rotate the argument right by the specified number of bits (which must be non-negative). 
--   An instance can define either this and Bits.rotateL or the unified Bits.rotate, depending on which is more convenient for the type in question.  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.rotateR
rotateR ∷ Bits a ⇒ a → Int → a 
infixl  12

-- |x \`setBit\` i is the same as x .|. bit i  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.setBit
setBit ∷ Bits a ⇒ a → Int → a

-- |Bits.shift x i shifts x left by i bits if i is positive, or right by -i bits otherwise. Right shifts perform sign extension on signed number types; i.e. they fill the top bits with 1 if the x is negative and with 0 otherwise. 
--   An instance can define either this unified Bits.shift or Bits.shiftL and Bits.shiftR, depending on which is more convenient for the type in question.  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.shift
shift ∷ Bits a ⇒ a → Int → a 
infixl  12

-- | Shift the argument left by the specified number of bits (which must be non-negative). 
--   An instance can define either this and Bits.shiftR or the unified Bits.shift, depending on which is more convenient for the type in question.  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.shiftL
shiftL ∷ Bits a ⇒ a → Int → a 
infixl  12

-- | Shift the first argument right by the specified number of bits (which must be non-negative). Right shifts perform sign extension on signed number types; i.e. they fill the top bits with 1 if the x is negative and with 0 otherwise. 
--   An instance can define either this and Bits.shiftL or the unified Bits.shift, depending on which is more convenient for the type in question.  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.shiftR
shiftR ∷ Bits a ⇒ a → Int → a 
infixl  12

-- | Return true if the nth bit of the argument is 1  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.testBit
testBit ∷ Bits a ⇒ a → Int → Bool

-- | Unsigned shift right  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.ushiftR
ushiftR ∷ Bits a ⇒ a → Int → a 
infixl  12

-- | Haskell compatibility. Same as `.^.`  
@url http://www.frege-lang.org/doc/frege/data/Bits#Bits.xor
xor ∷ Bits a ⇒ a → a → a 
infixl  10

-- | The general categories for unicode characters and code points.  
--   Constructors
--  ----------------
--  CATEGORY17 
--  COMBINING_SPACING_MARK 
--  CONNECTOR_PUNCTUATION 
--  CONTROL 
--  CURRENCY_SYMBOL 
--  DASH_PUNCTUATION 
--  DECIMAL_DIGIT_NUMBER 
--  ENCLOSING_MARK 
--  END_PUNCTUATION 
--  FINAL_QUOTE_PUNCTUATION 
--  FORMAT 
--  INITIAL_QUOTE_PUNCTUATION 
--  LETTER_NUMBER 
--  LINE_SEPARATOR 
--  LOWERCASE_LETTER 
--  MATH_SYMBOL 
--  MODIFIER_LETTER 
--  MODIFIER_SYMBOL 
--  NON_SPACING_MARK 
--  OTHER_LETTER 
--  OTHER_NUMBER 
--  OTHER_PUNCTUATION 
--  OTHER_SYMBOL 
--  PARAGRAPH_SEPARATOR 
--  PRIVATE_USE 
--  SPACE_SEPARATOR 
--  START_PUNCTUATION 
--  SURROGATE 
--  TITLECASE_LETTER 
--  UNASSIGNED 
--  UPPERCASE_LETTER 

@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory
data GeneralCategory


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.CATEGORY17
CATEGORY17


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.COMBINING_SPACING_MARK
COMBINING_SPACING_MARK


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.CONNECTOR_PUNCTUATION
CONNECTOR_PUNCTUATION


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.CONTROL
CONTROL


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.CURRENCY_SYMBOL
CURRENCY_SYMBOL


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.DASH_PUNCTUATION
DASH_PUNCTUATION


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.DECIMAL_DIGIT_NUMBER
DECIMAL_DIGIT_NUMBER


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.ENCLOSING_MARK
ENCLOSING_MARK


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.END_PUNCTUATION
END_PUNCTUATION


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.FINAL_QUOTE_PUNCTUATION
FINAL_QUOTE_PUNCTUATION


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.FORMAT
FORMAT


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.INITIAL_QUOTE_PUNCTUATION
INITIAL_QUOTE_PUNCTUATION


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.LETTER_NUMBER
LETTER_NUMBER


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.LINE_SEPARATOR
LINE_SEPARATOR


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.LOWERCASE_LETTER
LOWERCASE_LETTER


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.MATH_SYMBOL
MATH_SYMBOL


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.MODIFIER_LETTER
MODIFIER_LETTER


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.MODIFIER_SYMBOL
MODIFIER_SYMBOL


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.NON_SPACING_MARK
NON_SPACING_MARK


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.OTHER_LETTER
OTHER_LETTER


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.OTHER_NUMBER
OTHER_NUMBER


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.OTHER_PUNCTUATION
OTHER_PUNCTUATION


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.OTHER_SYMBOL
OTHER_SYMBOL


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.PARAGRAPH_SEPARATOR
PARAGRAPH_SEPARATOR


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.PRIVATE_USE
PRIVATE_USE


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.SPACE_SEPARATOR
SPACE_SEPARATOR


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.START_PUNCTUATION
START_PUNCTUATION


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.SURROGATE
SURROGATE


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.TITLECASE_LETTER
TITLECASE_LETTER


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.UNASSIGNED
UNASSIGNED


@url http://www.frege-lang.org/doc/frege/data/Char#GeneralCategory.UPPERCASE_LETTER
UPPERCASE_LETTER

-- | return the general category of a Char  
@url http://www.frege-lang.org/doc/frege/data/Char#generalCategory
generalCategory ∷ Char → GeneralCategory

-- | Check if the argument is a control character.  
@url http://www.frege-lang.org/doc/frege/data/Char#isControl
isControl ∷ Char → Bool

-- | Check if the argument is in the range '0'..'7'  
@url http://www.frege-lang.org/doc/frege/data/Char#isOctDigit
isOctDigit ∷ Char → Bool

-- | Check if the argument is a digit, in the range 'a'..'f' or in the range 'A'..'F'  
@url http://www.frege-lang.org/doc/frege/data/Char#isHexDigit
isHexDigit ∷ Char → Bool

-- | Check if the generalCategory of the argument is one of GeneralCategory.NON_SPACING_MARK, GeneralCategory.ENCLOSING_MARK or GeneralCategory.COMBINING_SPACING_MARK  
@url http://www.frege-lang.org/doc/frege/data/Char#isMark
isMark ∷ Char → Bool

-- | Check if the generalCategory of the argument is one of GeneralCategory.DECIMAL_DIGIT_NUMBER, GeneralCategory.LETTER_NUMBER or GeneralCategory.OTHER_NUMBER  
@url http://www.frege-lang.org/doc/frege/data/Char#isNumber
isNumber ∷ Char → Bool

-- | Check if the generalCategory of the argument is one of GeneralCategory.DASH_PUNCTUATION, GeneralCategory.START_PUNCTUATION, GeneralCategory.END_PUNCTUATION, GeneralCategory.CONNECTOR_PUNCTUATION or GeneralCategory.OTHER_PUNCTUATION. 
@url http://www.frege-lang.org/doc/frege/data/Char#isPunctuation
isPunctuation ∷ Char → Bool

-- | Check if the generalCategory of the argument is one of GeneralCategory.MATH_SYMBOL, GeneralCategory.CURRENCY_SYMBOL, GeneralCategory.MODIFIER_SYMBOL or GeneralCategory.OTHER_SYMBOL. 
@url http://www.frege-lang.org/doc/frege/data/Char#isSymbol
isSymbol ∷ Char → Bool

-- | Check if the generalCategory of the argument is one of GeneralCategory.SPACE_SEPARATOR, GeneralCategory.LINE_SEPARATOR or GeneralCategory.PARAGRAPH_SEPARATOR. 
@url http://www.frege-lang.org/doc/frege/data/Char#isSeparator
isSeparator ∷ Char → Bool

-- | Check if a character is printable. 
--   True for a defined character that is neither a surrogate character nor a control character.  
@url http://www.frege-lang.org/doc/frege/data/Char#isPrint
isPrint ∷ Char → Bool

-- | Check if the argument is from the ASCII character set.  
@url http://www.frege-lang.org/doc/frege/data/Char#isAscii
isAscii ∷ Char → Bool

-- | Check if the argument is from the Latin1 character set.  
@url http://www.frege-lang.org/doc/frege/data/Char#isLatin1
isLatin1 ∷ Char → Bool

-- | Check if the argument is an ASCII upper case letter.  
@url http://www.frege-lang.org/doc/frege/data/Char#isAsciiUpper
isAsciiUpper ∷ Char → Bool

-- | Check if the argument is an ASCII lower case letter.  
@url http://www.frege-lang.org/doc/frege/data/Char#isAsciiLower
isAsciiLower ∷ Char → Bool

-- | Convert a hexadecimal digit to its Int value. 
--   For different number bases, see Char.digit  
@url http://www.frege-lang.org/doc/frege/data/Char#digitToInt
digitToInt ∷ Char → Int

-- | Convert an Int in the range 0..15 to the corresponding hexadecimal digit. 
--   For other number bases than 16, see Char.forDigit  
@url http://www.frege-lang.org/doc/frege/data/Char#intToDigit
intToDigit ∷ Int → Char

-- | Constructors
--  ----------------
--  Compose {run ∷ f (g a)} 
--   Member Functions
--  ----------------
--  run ∷ Compose β α γ → β (α γ) 
--   access field run   
@url http://www.frege-lang.org/doc/frege/data/Compose#Compose
data Compose f g a


@url http://www.frege-lang.org/doc/frege/data/Compose#Compose.Compose
Compose {run ∷ f (g a)}


@url http://www.frege-lang.org/doc/frege/data/Compose#compose
compose ∷ f (g a) → Compose f g a

-- | Constructors
--  ----------------
--  Inl (f a) 
--  Inr (g a) 

@url http://www.frege-lang.org/doc/frege/data/Coproduct#Coproduct
data Coproduct f g a


@url http://www.frege-lang.org/doc/frege/data/Coproduct#Coproduct.Inl
Inl (f a)


@url http://www.frege-lang.org/doc/frege/data/Coproduct#Coproduct.Inr
Inr (g a)

-- | Data structures that can be folded. 
--   Minimal complete definition: Foldable.foldMap or Foldable.foldr. 
--   For example, given a data type 
--   data Tree a = Empty | Leaf a | Node (Tree a) a (Tree a) 
--   a suitable instance would be 
--   instance Foldable Tree where foldMap f Empty = mempty foldMap f (Leaf x) = f x foldMap f (Node l k r) = foldMap f l `mappend` f k `mappend` foldMap f r 
--   This is suitable even for abstract types, as the monoid is assumed to satisfy the monoid laws. Alternatively, one could define foldr: 
--   instance Foldable Tree where foldr f z Empty = z foldr f z (Leaf x) = f x z foldr f z (Node l k r) = foldr f (f k (foldr f z r)) l 
--   Known Instances
--  ----------------
--  Maybe, Identity.Identity, [] 
--   Member Functions
--  ----------------
--  fold ∷ (Foldable t, Monoid m) ⇒ t m → m 
--   Combine the elements of a structure using a monoid.   
--  fold1 ∷ (Foldable t, Semigroup m) ⇒ t m → m 
--   versions without base case 
--   A variant of fold that has no base case, and thus may only be applied to non-empty structures. 
--   (not in Haskell's Foldable, because they have no Semigroup)   
--  foldMap ∷ (Foldable t, Monoid m) ⇒ (a → m) → t a → m 
--   Map each element of the structure to a monoid, and combine the results.   
--  foldMap1 ∷ (Foldable t, Semigroup m) ⇒ (a → m) → t a → m 
--   A variant of foldMap that has no base case, and thus may only be applied to non-empty structures. 
--   (not in Haskell's Foldable, because they have no Semigroup)   
--  foldl ∷ Foldable t ⇒ (a → b → a) → a → t b → a 
--   Left-associative fold of a structure.   
--  foldl1 ∷ Foldable t ⇒ (a → a → a) → t a → a 
--   nowarn: not easy enough 
--   A variant of foldl that has no base case, and thus may only be applied to non-empty structures.   
--  foldr ∷ Foldable t ⇒ (a → b → b) → b → t a → b 
--   Right-associative fold of a structure.   
--  foldr1 ∷ Foldable t ⇒ (a → a → a) → t a → a 
--   nowarn: not easy enough 
--   A variant of foldr that has no base case, and thus may only be applied to non-empty structures.    
@url http://www.frege-lang.org/doc/frege/data/Foldable#Foldable
class Functor t ⇒ Foldable t

-- | Combine the elements of a structure using a monoid.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#Foldable.fold
fold ∷ (Foldable t, Monoid m) ⇒ t m → m

-- | versions without base case 
--   A variant of fold that has no base case, and thus may only be applied to non-empty structures. 
--   (not in Haskell's Foldable, because they have no Semigroup)  
@url http://www.frege-lang.org/doc/frege/data/Foldable#Foldable.fold1
fold1 ∷ (Foldable t, Semigroup m) ⇒ t m → m

-- | Map each element of the structure to a monoid, and combine the results.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#Foldable.foldMap
foldMap ∷ (Foldable t, Monoid m) ⇒ (a → m) → t a → m

-- | A variant of foldMap that has no base case, and thus may only be applied to non-empty structures. 
--   (not in Haskell's Foldable, because they have no Semigroup)  
@url http://www.frege-lang.org/doc/frege/data/Foldable#Foldable.foldMap1
foldMap1 ∷ (Foldable t, Semigroup m) ⇒ (a → m) → t a → m

-- | Left-associative fold of a structure.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#Foldable.foldl
foldl ∷ Foldable t ⇒ (a → b → a) → a → t b → a

-- | nowarn: not easy enough 
--   A variant of foldl that has no base case, and thus may only be applied to non-empty structures.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#Foldable.foldl1
foldl1 ∷ Foldable t ⇒ (a → a → a) → t a → a

-- | Right-associative fold of a structure.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#Foldable.foldr
foldr ∷ Foldable t ⇒ (a → b → b) → b → t a → b

-- | nowarn: not easy enough 
--   A variant of foldr that has no base case, and thus may only be applied to non-empty structures.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#Foldable.foldr1
foldr1 ∷ Foldable t ⇒ (a → a → a) → t a → a

-- | nowarn: not easy enough 
--   A variant of foldr that has no base case, and thus may only be applied to non-empty structures.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#foldr1α
foldr1α ∷ Foldable t ⇒ (a → a → a) → t a → a

-- | nowarn: not easy enough 
--   A variant of foldl that has no base case, and thus may only be applied to non-empty structures.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#foldl1α
foldl1α ∷ Foldable t ⇒ (a → a → a) → t a → a

-- | Fold over the elements of a structure, associating to the right, but strictly. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#foldr_tick
foldr' ∷ Foldable t ⇒ (a → b → b) → b → t a → b

-- | Monadic fold over the elements of a structure, associating to the right, i.e. from right to left. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#foldrM
foldrM ∷ (Foldable t, Monad m) ⇒ (a → b → m b) → b → t a → m b

-- | Fold over the elements of a structure, associating to the left, but strictly. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#foldl_tick
foldl' ∷ Foldable t ⇒ (a → b → a) → a → t b → a

-- | Monadic fold over the elements of a structure, associating to the left, i.e. from left to right. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#foldlM
foldlM ∷ (Foldable t, Monad m) ⇒ (a → b → m a) → a → t b → m a

-- | Map each element of a structure to an action, evaluate these actions from left to right, and ignore the results. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#traverse_
traverse_ ∷ (Foldable t, Applicative f) ⇒ (a → f b) → t a → f ()

-- |for_ is traverse_ with its arguments flipped.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#for_
for_ ∷ (Foldable t, Applicative f) ⇒ t a → (a → f b) → f ()

-- | Map each element of a structure to a monadic action, evaluate these actions from left to right, and ignore the results. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#mapM_
mapM_ ∷ (Foldable t, Monad m) ⇒ (a → m b) → t a → m ()

-- |forM_ is mapM_ with its arguments flipped.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#forM_
forM_ ∷ (Foldable t, Monad m) ⇒ t a → (a → m b) → m ()

-- | Evaluate each action in the structure from left to right, and ignore the results. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#sequenceA_
sequenceA_ ∷ (Foldable t, Applicative f) ⇒ t (f a) → f ()

-- | Evaluate each monadic action in the structure from left to right, and ignore the results. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#sequence_
sequence_ ∷ (Foldable t, Monad m) ⇒ t (m a) → m ()

-- | The sum of a collection of actions, generalizing concat.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#msum
msum ∷ (Foldable t, MonadPlus m) ⇒ t (m a) → m a

-- | The concatenation of all the elements of a container of lists.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#concat
concat ∷ Foldable t ⇒ t [a] → [a]

-- | Map a function over all the elements of a container and concatenate the resulting lists. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#concatMap
concatMap ∷ Foldable t ⇒ (a → [b]) → t a → [b]

-- |and returns the conjunction of a container of Bools. For the result to be true, the container must be finite; false, however, results from a false value finitely far from the left end. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#and
and ∷ Foldable t ⇒ t Bool → Bool

-- |or returns the disjunction of a container of Bools. For the result to be false, the container must be finite; true, however, results from a true value finitely far from the left end. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#or
or ∷ Foldable t ⇒ t Bool → Bool

-- | Determines whether any element of the structure satisfies the predicate.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#any
any ∷ Foldable t ⇒ (a → Bool) → t a → Bool

-- | Determines whether all elements of the structure satisfy the predicate.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#all
all ∷ Foldable t ⇒ (a → Bool) → t a → Bool

-- | The sum function computes the sum of the numbers of a structure.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#sum
sum ∷ (Foldable t, Num a) ⇒ t a → a

-- | The product function computes the product of the numbers of a structure.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#product
product ∷ (Foldable t, Num a) ⇒ t a → a

-- | The largest element of a non-empty structure.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#maximum
maximum ∷ (Foldable t, Ord a) ⇒ t a → a

-- | The largest element of a non-empty structure with respect to the given comparison function.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#maximumBy
maximumBy ∷ Foldable t ⇒ (a → a → Ordering) → t a → a

-- | The least element of a non-empty structure.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#minimum
minimum ∷ (Foldable t, Ord a) ⇒ t a → a

-- | The least element of a non-empty structure with respect to the given comparison function. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#minimumBy
minimumBy ∷ Foldable t ⇒ (a → a → Ordering) → t a → a

-- | Does the element occur in the structure?  
@url http://www.frege-lang.org/doc/frege/data/Foldable#elem
elem ∷ (Foldable t, Eq a) ⇒ a → t a → Bool

-- |notElem is the negation of elem.  
@url http://www.frege-lang.org/doc/frege/data/Foldable#notElem
notElem ∷ (Foldable t, Eq a) ⇒ a → t a → Bool

-- | The find function takes a predicate and a structure and returns the leftmost element of the structure matching the predicate, or Maybe.Nothing if there is no such element. 
@url http://www.frege-lang.org/doc/frege/data/Foldable#find
find ∷ Foldable t ⇒ (a → Bool) → t a → Maybe a

-- | Strongly connected component.  
--   Constructors
--  ----------------
--  AcyclicSCC vertex 
--   A single vertex that is not in any cycle.   
--  CyclicSCC [vertex] 
--   A maximal set of mutually reachable vertices.    
@url http://www.frege-lang.org/doc/frege/data/Graph#SCC
data SCC vertex

-- | A single vertex that is not in any cycle.  
@url http://www.frege-lang.org/doc/frege/data/Graph#SCC.AcyclicSCC
AcyclicSCC vertex

-- | A maximal set of mutually reachable vertices.  
@url http://www.frege-lang.org/doc/frege/data/Graph#SCC.CyclicSCC
CyclicSCC [vertex]

-- | The vertices of a list of strongly connected components.  
@url http://www.frege-lang.org/doc/frege/data/Graph#flattenSCCs
flattenSCCs ∷ [SCC a] → [a]

-- | The vertices of a strongly connected component.  
@url http://www.frege-lang.org/doc/frege/data/Graph#flattenSCC
flattenSCC ∷ SCC vertex → [vertex]

-- | Make a (key, [key]) list into one that is accepted by stronglyConnComp  
@url http://www.frege-lang.org/doc/frege/data/Graph#edgeFromTuple
edgeFromTuple ∷ (α, β) → (α, α, β)

-- | Convenience function to compute topologically sorted strongly connected components of an adjacency list of the form: 
--   [(key, [key])] 
--   The result will be a list of lists of keys, where a singleton indicates no mutual dependency with other keys and a list consisting of several keys means that those are mutually dependend on each other. 
--   In addition, earlier elements will not depend on later ones. 
--   If the result contains only singletons, then the input was an acyclic graph. 
@url http://www.frege-lang.org/doc/frege/data/Graph#stronglyConnectedComponents
stronglyConnectedComponents ∷ Ord key ⇒ [(key, [key])] → [[key]]

-- | The strongly connected components of a directed graph, topologically sorted. 
--   The graph is a list of nodes uniquely identified by keys, with a list of keys of nodes this node has edges to. The latter one may contain keys that don't correspond to nodes of the graph; such edges are ignored. 
@url http://www.frege-lang.org/doc/frege/data/Graph#stronglyConnComp
stronglyConnComp ∷ Ord key ⇒ [(node, key, [key])] → [SCC node]

-- | The strongly connected components of a directed graph, topologically sorted. The function is the same as stronglyConnComp, except that all the information about each node retained. 
--   This interface is used when you expect to apply SCC to (some of) the result of SCC, so you don't want to lose the dependency information. 
@url http://www.frege-lang.org/doc/frege/data/Graph#stronglyConnCompR
stronglyConnCompR ∷ Ord key ⇒ [(node, key, [key])] → [SCC (node, key, [key])]


@url http://www.frege-lang.org/doc/frege/data/Graph#size
size ∷ (Int, Int) → Int


@url http://www.frege-lang.org/doc/frege/data/Graph#bounds
bounds ∷ JArray a → (Int, Int)

-- | All vertices of a graph.  
@url http://www.frege-lang.org/doc/frege/data/Graph#vertices
vertices ∷ JArray [Int] → [Int]

-- | All edges of a graph.  
@url http://www.frege-lang.org/doc/frege/data/Graph#edges
edges ∷ JArray [Int] → [(Int, Int)]


@url http://www.frege-lang.org/doc/frege/data/Graph#mapT
mapT ∷ (ArrayElem a, ArrayElem b) ⇒ (Int → a → b) → JArray a → JArray b

-- | Build a graph from a list of edges.  
@url http://www.frege-lang.org/doc/frege/data/Graph#buildG
buildG ∷ (Int, Int) → [(Int, Int)] → JArray [Int]

-- | The graph obtained by reversing all edges.  
@url http://www.frege-lang.org/doc/frege/data/Graph#transposeG
transposeG ∷ JArray [Int] → JArray [Int]


@url http://www.frege-lang.org/doc/frege/data/Graph#reverseE
reverseE ∷ JArray [Int] → [(Int, Int)]

-- | A table of the count of edges from each node.  
@url http://www.frege-lang.org/doc/frege/data/Graph#outdegree
outdegree ∷ JArray [Int] → JArray Int

-- | A table of the count of edges into each node.  
@url http://www.frege-lang.org/doc/frege/data/Graph#indegree
indegree ∷ JArray [Int] → JArray Int

-- | Identical to graphFromEdges, except that the return value does not include the function which maps keys to vertices. This version of graphFromEdges is for backwards compatibility. 
@url http://www.frege-lang.org/doc/frege/data/Graph#graphFromEdges_tick
graphFromEdges' ∷ Ord key ⇒ [(node, key, [key])] → (JArray [Int], Int→(node, key, [key]))

-- | Build a graph from a list of nodes uniquely identified by keys, with a list of keys of nodes this node should have edges to. The out-list may contain keys that don't correspond to nodes of the graph; they are ignored.  
@url http://www.frege-lang.org/doc/frege/data/Graph#graphFromEdges
graphFromEdges ∷ Ord key ⇒ [(node, key, [key])] → (JArray [Int], Int→(node, key, [key]), key→Maybe Int)

-- | A spanning forest of the graph, obtained from a depth-first search of the graph starting from each vertex in an unspecified order. 
@url http://www.frege-lang.org/doc/frege/data/Graph#dff
dff ∷ JArray [Int] → Forest Int

-- | A spanning forest of the part of the graph reachable from the listed vertices, obtained from a depth-first search of the graph starting at each of the listed vertices in order. 
@url http://www.frege-lang.org/doc/frege/data/Graph#dfs
dfs ∷ JArray [Int] → [Int] → Forest Int


@url http://www.frege-lang.org/doc/frege/data/Graph#generate
generate ∷ JArray [Int] → Int → Tree Int


@url http://www.frege-lang.org/doc/frege/data/Graph#prune
prune ∷ (Int, Int) → Forest Int → Forest Int


@url http://www.frege-lang.org/doc/frege/data/Graph#chop
chop ∷ Forest Int → ArrayOf s Bool → ST s (Forest Int)


@url http://www.frege-lang.org/doc/frege/data/Graph#preorder
preorder ∷ Tree a → [a]


@url http://www.frege-lang.org/doc/frege/data/Graph#preorderF
preorderF ∷ Forest a → [a]


@url http://www.frege-lang.org/doc/frege/data/Graph#tabulate
tabulate ∷ (Int, Int) → [Int] → JArray Int


@url http://www.frege-lang.org/doc/frege/data/Graph#preArr
preArr ∷ (Int, Int) → Forest Int → JArray Int


@url http://www.frege-lang.org/doc/frege/data/Graph#postorder
postorder ∷ Tree a → [a]


@url http://www.frege-lang.org/doc/frege/data/Graph#postorderF
postorderF ∷ Forest a → [a]


@url http://www.frege-lang.org/doc/frege/data/Graph#postOrd
postOrd ∷ JArray [Int] → [Int]

-- | A topological sort of the graph. 
--   The order is partially specified by the condition that a vertex i precedes j whenever j is reachable from i but not vice versa.  
@url http://www.frege-lang.org/doc/frege/data/Graph#topSort
topSort ∷ JArray [Int] → [Int]

-- | The connected components of a graph. 
--   Two vertices are connected if there is a path between them, traversing edges in either direction.  
@url http://www.frege-lang.org/doc/frege/data/Graph#components
components ∷ JArray [Int] → Forest Int


@url http://www.frege-lang.org/doc/frege/data/Graph#undirected
undirected ∷ JArray [Int] → JArray [Int]

-- | The strongly connected components of a graph.  
@url http://www.frege-lang.org/doc/frege/data/Graph#scc
scc ∷ JArray [Int] → Forest Int

-- | A list of vertices reachable from a given vertex.  
@url http://www.frege-lang.org/doc/frege/data/Graph#reachable
reachable ∷ JArray [Int] → Int → [Int]

-- | Is the second vertex reachable from the first?  
@url http://www.frege-lang.org/doc/frege/data/Graph#path
path ∷ JArray [Int] → Int → Int → Bool

-- | The biconnected components of a graph. 
--   An undirected graph is biconnected if the deletion of any vertex leaves it connected.  
@url http://www.frege-lang.org/doc/frege/data/Graph#bcc
bcc ∷ JArray [Int] → Forest [Int]


@url http://www.frege-lang.org/doc/frege/data/Graph#do_label
do_label ∷ JArray [Int] → JArray Int → Tree Int → Tree (Int, Int, Int)


@url http://www.frege-lang.org/doc/frege/data/Graph#bicomps
bicomps ∷ Tree (Int, Int, Int) → Forest [Int]


@url http://www.frege-lang.org/doc/frege/data/Graph#collect
collect ∷ Tree (Int, Int, Int) → (Int, Tree [Int])

-- |O(1) Create a singleton map  
@url http://www.frege-lang.org/doc/frege/data/HashMap#singleton
singleton ∷ Eq k ⇒ k → v → HashMap k v

-- |O(n) Compute the size of the map  
@url http://www.frege-lang.org/doc/frege/data/HashMap#size
size ∷ HashMap k v → Int

-- |O(n) Retrieve a list of the values in the map  
@url http://www.frege-lang.org/doc/frege/data/HashMap#values
values ∷ HashMap k v → [v]

-- |O(n) Retrieve a list of the keys in the map  
@url http://www.frege-lang.org/doc/frege/data/HashMap#keys
keys ∷ HashMap k v → [k]

-- |O(n) Retrieve a list of the associations in the map  
@url http://www.frege-lang.org/doc/frege/data/HashMap#each
each ∷ HashMap k v → [(k, v)]

-- |O(log n) 
--   insert k v m 
--   is a HashMap h such that 
--   lookup k h = Just v 
--   and lookup for any other key o 
--   lookup o h = lookup o m 
--   Less formally said, k is associated with v in the resulting map, updating a previously existing association of k if it exists, while all other associations are left untouched. 
--   In the case of an update, the new value will get forced, see insertWith for details. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#insert
insert ∷ Eq k ⇒ k → v → HashMap k v → HashMap k v

-- |O(log n) 
--   insertWith f k v m 
--   If m does not contain k, this works like insert. Otherwise, the existing association of k with some value v' is replaced by an association of k with the result of evaluating 
--   f v v' 
--   in the resulting map. 
--   Strict evaluation is necessary to prevent building up of large thunks of the form 
--   f v3 (f v2 (f v1 v0)) 
--   Note that 
--   insert = insertWith const 
--   and that this will evaluate the new value in case of an update. If you want to prevent this, use 
--   replace k v = insert k v . delete k 
--   The replaced value will be evaluated only if the given function is strict in the second argument. Since const is lazy in the second argument, the following will be fine: 
--   insert "foo" 7 (insert "foo" undefined (delete "foo" m)) 
--   That is, the value that is inserted for a given key first is not evaluated on insertion, and only evaluated on update if the update function demands it, which is not the case for a plain insert. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#insertWith
insertWith ∷ Eq k ⇒ (v → v → v) → k → v → HashMap k v → HashMap k v

-- |O(log n) 
--   delete k m 
--   is a HashMap h such that 
--   lookup k h = Nothing 
--   and for any other key o 
--   lookup o h = lookup o m 
--   Less formally, the association of k with some value, if any, is removed in the result, while all other associations are retained. 
--   If m didn't contain k in the first place, 
--   delete k m = m 
@url http://www.frege-lang.org/doc/frege/data/HashMap#delete
delete ∷ Eq k ⇒ k → HashMap k v → HashMap k v

-- |O(log n) 
--   lookup k m 
--   If k is associated with some value v in map m, it returns 
--   Just v 
--   and otherwise 
--   Nothing 
@url http://www.frege-lang.org/doc/frege/data/HashMap#lookup
lookup ∷ Eq k ⇒ k → HashMap k v → Maybe v

-- |O(log n) 
--   Checks whether the key is present in the map  
@url http://www.frege-lang.org/doc/frege/data/HashMap#member
member ∷ Eq k ⇒ k → HashMap k v → Bool

-- |O(log n) 
--   Return the value to which the specified key is mapped, or the default value if this map contains no mapping for the key. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#lookupDefault
lookupDefault ∷ Eq k ⇒ v → k → HashMap k v → v

-- |O(log n) 
--   Return the value associated with the given key in the map. Fails with error if the key is not present. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#_excl_excl
(!!) ∷  Eq k ⇒ HashMap k v → k → v 
infixl  16

-- |O(log n) 
--   Adjust the value tied to a given key in this map only if it is present. Otherwise, leave the map alone. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#adjust
adjust ∷ Eq k ⇒ (v → v) → k → HashMap k v → HashMap k v

-- |O(log n) 
--   replace k v m = insert k v . delete k $ m 
--   Insert or update the association of k with v in m but avoid evaluation of v even if m already contains k. 
--   See also notes concerning updates on function insertWith. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#replace
replace ∷ Eq k ⇒ k → v → HashMap k v → HashMap k v

-- |O(m*log n) 
--   Computes the union of two hash maps. 
--   If a key occurs in both maps, the function provided in the first argument will be used to compute the result in the same way as insertWith would do it, that is, the value from the left hash map will be evaluated while the value from the right map may be evaluated only if the function demands it. However, values associated with keys that are member of only one map are left alone. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#unionWith
unionWith ∷ Eq k ⇒ (v → v → v) → HashMap k v → HashMap k v → HashMap k v

-- |O(m*log n) 
--   Computes the union of two hash maps. 
--   If a key occurs in both maps, the value from the left map will be evaluated and taken over to the new map. 
--   Because 
--   union = unionWith const 
--   the considerations concerning strictness apply for union in the same way as for unionWith. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#union
union ∷ Eq k ⇒ HashMap k v → HashMap k v → HashMap k v

-- | The union of all HashMaps in a list. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#unions
unions ∷ Eq k ⇒ [HashMap k v] → HashMap k v

-- |O(n) 
--   Reduce this map by applying a function to all associations, using the given starting value (typically the left-identity of the operator). Each application of the function is evaluated before using the result in the next application. 
--   This function is strict in the starting value. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#foldWithKey
foldWithKey ∷ (a → k → v → a) → a → HashMap k v → a

-- |O(n) 
--   Reduce this map by applying a binary operator to all values, using the given starting value (typically the left-identity of the operator). Each application of the operator is evaluated before using the result in the next application. 
--   This function is strict in the starting value. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#foldValues
foldValues ∷ (a → v → a) → a → HashMap k v → a

-- |O(n) 
--   Reduce this map by applying a binary operator to all values, using the given starting value (typically the right-identity of the operator). 
--  Warning: this function exists for Haskell compatibility only. Please be aware that right folds suffer from the danger of stack overflows, while left folds don't and are also faster because of tail recursion. Since the order of values is arbitrary anyway, there is often no good reason to insist on a right fold, so please use foldValues instead. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#foldrValues
foldrValues ∷ (v → a → a) → a → HashMap k v → a

-- |O(n) 
--   Reduce this map by applying a binary operator to all mappings, using the given starting value (typically the right-identity of the operator). 
--  Warning: this function exists for Haskell compatibility only. Please be aware that right folds suffer from the danger of stack overflows, while left folds don't and are also faster because of tail recursion. Since the order of values is arbitrary anyway, there is often no good reason to insist on a right fold, so please use foldWithKey instead. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#foldrWithKey
foldrWithKey ∷ (k → v → a → a) → a → HashMap k v → a

-- |O(n) 
--   Transform a map by applying a function to every value. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#mapValues
mapValues ∷ (v → u) → HashMap k v → HashMap k u

-- |O(n) 
--   Transform a map by applying a function to every key and its associated value. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#mapWithKey
mapWithKey ∷ (k → v → u) → HashMap k v → HashMap k u

-- |O(n) 
--   Transform a map by applying an applicative functor to every key and its associated value. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#traverseWithKey
traverseWithKey ∷ Applicative a ⇒ (k → v → a u) → HashMap k v → a (HashMap k u)

-- |O(n) 
--   Filter a map, retaining only mappings whose key and value satisfy a given predicate. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#filterWithKey
filterWithKey ∷ (k → v → Bool) → HashMap k v → HashMap k v

-- |O(n) 
--   Filter a map, retaining only mappings whose value satisfies a given predicate. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#filterValues
filterValues ∷ (v → Bool) → HashMap k v → HashMap k v

-- |O(n*log m) 
--   Computes the difference of two maps. 
--   Returns a map that contains the mappings of the first map whose keys do not exist in the second. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#difference
difference ∷ Eq k ⇒ HashMap k v → HashMap k u → HashMap k v

-- |O(n*log m) 
--   Computes the intersection of two maps. 
--   Return a map that contains the mappings of the first map for keys that also exist in the second. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#intersection
intersection ∷ Eq k ⇒ HashMap k v → HashMap k u → HashMap k v

-- |O(n*log m) 
--   Computes the intersection of two maps, combining the values with a given function. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#intersectionWith
intersectionWith ∷ Eq k ⇒ (v → u → w) → HashMap k v → HashMap k u → HashMap k w

-- |O(n) 
--   Build a map from an association list. If the list contains duplicate mappings, the later mappings take precedence. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#fromList
fromList ∷ Eq k ⇒ [(k, v)] → HashMap k v

-- |O(n) 
--   Build a map from an association list. Uses the provided function to merge values associated with duplicate keys. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#fromListWith
fromListWith ∷ Eq k ⇒ (v → v → v) → [(k, v)] → HashMap k v

-- | A map from hashable keys to values based on a Hash Mapped Array Trie. 
--   A map cannot contain duplicate keys; each key can map to at most one value. A HashMap makes no guarantees as to the order of its elements. 
--   A node of the HashMap is either a key/value pair a list of key/value tuples with pair-wise different keys, where the hash code for all keys is identical (collisions). In the (hopefully) unlikely case of such collisions, the performance of operations using the affected keys degrades to that of similar operations on lists. However, collision lists should be short, if occurring at all. a bitmapped node with a bitmap of size 32 to indicate absence or presence of sub-nodes, followed by an array of up to 32 (sub)nodes. 
--   This implementation of a persistent hash array mapped trie uses 32 bit hash values as provided by Java and the Frege Eq type class. 
--   To find a value, the search starts with the root node. If the node is a key/value pair, the node's key is compared to the search key. When the keys are equal, the value is returned, otherwise the key is not in the map. 
--   If the node is a bitmapped node, the hash code of the lookup key is computed and the presence of the index provided by the last five bits is checked in the bitmap. If it is there, the search continues with the corresponding node from the node array, otherwise the key is not in the map. With every recursion, the next five bits of the hash code will be used for indexing. 
--   It remains the case that the node is a collision list. The searched key's hashcode either is the same as the one of the keys in the collision list, in which case the search degrades to a sequential search in that list, or it is different, and in the latter case we know that the key is not in the map without even touching the list. 
--   Hence, the worst case in searching must do the following: 1 time: compute the hash code of the key 7 times: find the next node through the sub-node array. This is in essence computation of an index with bit operations, followed by a memory read. The reason this is done at max 7 times is that it consumes 5 bits of the hash code every time. With 32 bit hash codes, we have 6 5-bit quantities that can range from 0 to 31, while the last 5-bit quantity has only 2 significant bits, the other ones are always zero. The hashmapped nodes at the 7th level of the map will consequently have at most 4 sub-nodes. (Note that this is an intrinsic limit that is determined by the hash code bit size, not by the algorithm. Should later Java versions choose to provide Long bitcodes, for example, this code will still work with marginal adjustments, just that there would be 13 levels of bitmapped nodes instead of 7.) n times: comparison with the keys in the collision list, where n is the number of elements of the collision list, or comparison with the key of a key/value node (this is equivalent to a collision list of length 1). 
--   It turns out that - absent hash collisions - lookups will be done almost in constant time. And so will be inserts and deletes, although with a slightly larger constant factor due to the house-keeping necessary for a persistent data structure. However, even this are in the worst case 7 array copies, where 6 of them may be of size 32 and one of size 4. Assuming that the pointers are 4 bytes long, this amounts to copying at most 196*4 bytes of memory. 
--   The map can have at most 2^32 non-bitmapped nodes maintained in 1+32+1024+32768+1048576+33554432+1073741824 bitmapped nodes. But because collision lists can be arbitrary long, the total number of key/value pairs is not limited. 
--   Constructors
--  ----------------
--  private BM {subnodes ∷ JArray (HashMap k v), bitmap ∷ Int} 
--   Bitmapped node. It has a bitmap of 32 bits that indicate presence or absence of a sub node for a given index which is in the range [0..31], and an array of sub nodes. The size of the array is equal to the number of 1-bits in the bitmap. An index is mapped to an actual array index like so: If the corresponding Bits.bit is set in the bitmap, the number of less significant 1-bits in the bitmap is counted with Bits.bitCount and this is then the index in the array. Otherwise there is no sub node for that index.  
--   Invariant 1 
--  The length of subnodes equals the number of set bits in bitmap.  
--   Invariant 2 
--  There is no null pointer in subnodes.  
--   Invariant 3 
--  No subnode is the empty node.    
--  private CO {hash ∷ Int, list ∷ [(k, v)]} 
--   Collision node, holding a list of key/value tuples as well as the Eq.hashCode all keys have in common. This helps us avoid touching the list when the sought key has a different hash code.  
--   Invariant 1 
--  length of list is at least 2.  
--   Invariant 2 
--  all keys in list are different.    
--  private KV {hash ∷ Int, key ∷ k, value ∷ v} 
--   Singleton node holding a key with a value. Also caches the Eq.hashCode of the key to avoid possibly expensive recomputation.   
--   Member Functions
--  ----------------
--  bitmap ∷ HashMap α β → Int 
--   access field bitmap  
--  collisions ∷ HashMap β α → (Int, Int, [[β]]) 
--  O(n) Compute a 3-tuple of the number of collision nodes the total number of keys that have a collision a list of lists of colliding keys  
--  delete ∷ Eq k ⇒ HashMap k v → k → HashMap k v 
--  O(log n) 
--   hm.delete k 
--   Variant of delete that is better suited for left folds and supports dot-notation.   
--  hash ∷ HashMap β α → Int 
--   access field hash  
--  indexMap ∷ Int → Int → Int → Int 
--   transform an index into an actual array index 
--   indexMap bmap nodes inx 
--  bmap is the bitmap 
--  nodes is the number of actual subnodes 
--  inx is a hash code or part of a hash code, whose least significant 5 bits are the index 
--   returns a number in the range 0..nodes, where nodes means "no corresponding node"   
--  insert ∷ Eq k ⇒ HashMap k v → k → v → HashMap k v 
--  O(log n) 
--   hm.insert k v 
--   Variant of insert that is better suited for left folds and supports dot-notation.   
--  invariants ∷ Eq k ⇒ HashMap k v → Bool 
--   this checks the invariants for a node   
--  key ∷ HashMap β α → β 
--   access field key  
--  list ∷ HashMap β α → [(β, α)] 
--   access field list  
--  lookup ∷ Eq k ⇒ HashMap k v → k → Maybe v 
--  O(log n) 
--   hm.lookup k 
--   Variant of lookup that supports dot-notation.   
--  subnodes ∷ HashMap β α → JArray (HashMap β α) 
--   access field subnodes  
--  value ∷ HashMap β α → α 
--   access field value   
@url http://www.frege-lang.org/doc/frege/data/HashMap#HashMap
data HashMap k v

-- | Bitmapped node. It has a bitmap of 32 bits that indicate presence or absence of a sub node for a given index which is in the range [0..31], and an array of sub nodes. The size of the array is equal to the number of 1-bits in the bitmap. An index is mapped to an actual array index like so: If the corresponding Bits.bit is set in the bitmap, the number of less significant 1-bits in the bitmap is counted with Bits.bitCount and this is then the index in the array. Otherwise there is no sub node for that index.  
--   Invariant 1 
--  The length of subnodes equals the number of set bits in bitmap.  
--   Invariant 2 
--  There is no null pointer in subnodes.  
--   Invariant 3 
--  No subnode is the empty node.   
@url http://www.frege-lang.org/doc/frege/data/HashMap#HashMap.BM
private BM {subnodes ∷ JArray (HashMap k v), bitmap ∷ Int}

-- | Collision node, holding a list of key/value tuples as well as the Eq.hashCode all keys have in common. This helps us avoid touching the list when the sought key has a different hash code.  
--   Invariant 1 
--  length of list is at least 2.  
--   Invariant 2 
--  all keys in list are different.   
@url http://www.frege-lang.org/doc/frege/data/HashMap#HashMap.CO
private CO {hash ∷ Int, list ∷ [(k, v)]}

-- | Singleton node holding a key with a value. Also caches the Eq.hashCode of the key to avoid possibly expensive recomputation. 
@url http://www.frege-lang.org/doc/frege/data/HashMap#HashMap.KV
private KV {hash ∷ Int, key ∷ k, value ∷ v}

-- | A StringIterator is a data structure that lets us view a part of a String as a list. 
--   With large Strings, performing list work on Strings can be expensive, because more recent JVMs implement the substring operation via copying. 
--   Construction, ListView.drop, ListView.take, ListView.head and ListView.tail on a StringIterator are O(1) operations. The drawback is that it holds on to the underlying String. 
--   Constructors
--  ----------------
--  private SI {string ∷ StringJ a, at ∷ Int, limit ∷ Int} 
--   Member Functions
--  ----------------
--  at ∷ StringIterator α → Int 
--   access field at  
--  from ∷ StringJ α → StringIterator α 
--   Construct a StringIterator from a String   
--  limit ∷ StringIterator α → Int 
--   access field limit  
--  string ∷ StringIterator α → StringJ α 
--   access field string  
--  to ∷ StringIterator α → StringJ α 
--   realize the substring indicated by this iterator    
@url http://www.frege-lang.org/doc/frege/data/Iterators#StringIterator
data StringIterator a


@url http://www.frege-lang.org/doc/frege/data/Iterators#StringIterator.SI
private SI {string ∷ StringJ a, at ∷ Int, limit ∷ Int}

-- | A ArrayIterator is a data structure that lets us view a part of a JArray as a list. 
--   With large JArrays, doing ListSource.toList and iterating through the list can get expensive memory-wise. 
--   Construction, ListView.drop, ListView.take, ListView.head and ListView.tail on a ArrayIterator are O(1) operations with a minimal memory overhead. The drawback is that it holds on to the underlying JArray. 
--   Constructors
--  ----------------
--  private AI {array ∷ JArray a, at ∷ Int, limit ∷ Int} 
--   Member Functions
--  ----------------
--  array ∷ ArrayIterator α → JArray α 
--   access field array  
--  at ∷ ArrayIterator α → Int 
--   access field at  
--  from ∷ JArray α → ArrayIterator α 
--   make iterator from JArray   
--  limit ∷ ArrayIterator α → Int 
--   access field limit  
--  to ∷ ArrayElem a ⇒ ArrayIterator a → JArray a 
--   realize the subarray indicated by this iterator    
@url http://www.frege-lang.org/doc/frege/data/Iterators#ArrayIterator
data ArrayIterator a


@url http://www.frege-lang.org/doc/frege/data/Iterators#ArrayIterator.AI
private AI {array ∷ JArray a, at ∷ Int, limit ∷ Int}

-- | The Ix class is used to map a contiguous subrange of values in a type onto integers. It is used primarily for array indexing. (see the array package). 
--   The first argument (l,u) of each of these operations is a pair specifying the lower and upper bounds of a contiguous subrange of values. An implementation is entitled to assume the following laws about these operations: 
--   inRange (l,u) i == elem i (range (l,u)) 
--   range (l,u) !! index (l,u) i == i 
--   , when 
--   inRange (l,u) i 
--   map (index (l,u)) (range (l,u)) == [0..rangeSize (l,u)-1] 
--   rangeSize (l,u) == length (range (l,u)) 
--   Known Instances
--  ----------------
--  Bool, (,), (), (,,,), (,,), (,,,,), Integer, Int, Char, Ordering 
--   Member Functions
--  ----------------
--  inRange ∷ Ix a ⇒ (a, a) → a → Bool 
--   Returns HaskellBool.True the given subscript lies in the range defined the bounding pair.   
--  index ∷ Ix a ⇒ (a, a) → a → Int 
--   The position of a subscript in the subrange. 
--   Must specify one of index, unsafeIndex 
--  Ix.index is typically over-ridden in instances, with essentially the same code, but using indexError instead of error Reason: we have Show at the instances  
--  range ∷ Ix a ⇒ (a, a) → [a] 
--   The list of values in the subrange defined by a bounding pair.   
--  rangeSize ∷ Ix a ⇒ (a, a) → Int 
--   The size of the subrange defined by a bounding pair.   
--  unsafeIndex ∷ Ix a ⇒ (a, a) → a → Int 
--   Like Ix.index, but without checking that the value is in range.   
--  unsafeRangeSize ∷ Ix a ⇒ (a, a) → Int 
--   like Ix.rangeSize, but without checking that the upper bound is in range.    
@url http://www.frege-lang.org/doc/frege/data/Ix#Ix
class (Eq a, Ord a) ⇒ Ix a

-- | Returns HaskellBool.True the given subscript lies in the range defined the bounding pair.  
@url http://www.frege-lang.org/doc/frege/data/Ix#Ix.inRange
inRange ∷ Ix a ⇒ (a, a) → a → Bool

-- | The position of a subscript in the subrange. 
--   Must specify one of index, unsafeIndex 
--  Ix.index is typically over-ridden in instances, with essentially the same code, but using indexError instead of error Reason: we have Show at the instances 
@url http://www.frege-lang.org/doc/frege/data/Ix#Ix.index
index ∷ Ix a ⇒ (a, a) → a → Int

-- | The list of values in the subrange defined by a bounding pair.  
@url http://www.frege-lang.org/doc/frege/data/Ix#Ix.range
range ∷ Ix a ⇒ (a, a) → [a]

-- | The size of the subrange defined by a bounding pair.  
@url http://www.frege-lang.org/doc/frege/data/Ix#Ix.rangeSize
rangeSize ∷ Ix a ⇒ (a, a) → Int

-- | Like Ix.index, but without checking that the value is in range.  
@url http://www.frege-lang.org/doc/frege/data/Ix#Ix.unsafeIndex
unsafeIndex ∷ Ix a ⇒ (a, a) → a → Int

-- | like Ix.rangeSize, but without checking that the upper bound is in range.  
@url http://www.frege-lang.org/doc/frege/data/Ix#Ix.unsafeRangeSize
unsafeRangeSize ∷ Ix a ⇒ (a, a) → Int


@url http://www.frege-lang.org/doc/frege/data/Ix#indexError
indexError ∷ Show a ⇒ (a, a) → a → String → b

-- | lexical entities that can appear in a JSON String  
--   Constructors
--  ----------------
--  protected BRACEL 
--   left brace {   
--  protected BRACER 
--   right brace }   
--  protected BRACKL 
--   left bracket [   
--  protected BRACKR 
--   right bracket ]   
--  protected COLON 
--   colon :   
--  protected COMMA 
--   comma ,   
--  protected ERROR {offset ∷ Int, text ∷ String} 
--   lexical error indicator   
--  protected FALSE 
--  false   
--  protected N {nval ∷ String} 
--   a JSON number, atod will work   
--  protected NULL 
--  null (o noes!!!)   
--  protected S {sval ∷ String} 
--   a JSON string, escapes already decoded   
--  protected TRUE 
--  true    
--   Member Functions
--  ----------------
--  nval ∷ Token → String 
--   access field nval  
--  offset ∷ Token → Int 
--   access field offset  
--  sval ∷ Token → String 
--   access field sval  
--  text ∷ Token → String 
--   access field text   
@url http://www.frege-lang.org/doc/frege/data/JSON#Token
data Token

-- | left brace {  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.BRACEL
protected BRACEL

-- | right brace }  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.BRACER
protected BRACER

-- | left bracket [  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.BRACKL
protected BRACKL

-- | right bracket ]  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.BRACKR
protected BRACKR

-- | colon :  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.COLON
protected COLON

-- | comma ,  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.COMMA
protected COMMA

-- | lexical error indicator  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.ERROR
protected ERROR {offset ∷ Int, text ∷ String}

-- |false  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.FALSE
protected FALSE

-- | a JSON number, atod will work  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.N
protected N {nval ∷ String}

-- |null (o noes!!!)  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.NULL
protected NULL

-- | a JSON string, escapes already decoded  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.S
protected S {sval ∷ String}

-- |true  
@url http://www.frege-lang.org/doc/frege/data/JSON#Token.TRUE
protected TRUE

-- | Translate a String into a lazy list of Tokens. 
--   There will be at most one Token.ERROR token in the result, and it will be the last in the list. This is, the lexer will stop on the first lexical error. 
--   Absence of lexical errors does not mean valid JSON, for example 
--   "null, true," 
--   is lexed as 
--   [NULL, COMMA, TRUE, COMMA] 
--   but is, of course invalid. 
@url http://www.frege-lang.org/doc/frege/data/JSON#lexer
lexer ∷ String → [Token]

-- | Internal representation of JSON data  
--   Constructors
--  ----------------
--  Array [Value] 
--   [ value, ... ]   
--  Bool Bool 
--  true or false   
--  Null 
--   just null   
--  Number (String) 
--   a number   
--  String (String) 
--   a string   
--  Struct [(String, Value)] 
--   { "name":value, ... }    
--   Member Functions
--  ----------------
--  jFalse ∷ Value 
--   singleton JSON false constant   
--  jTrue ∷ Value 
--   singleton JSON true constant    
@url http://www.frege-lang.org/doc/frege/data/JSON#Value
data Value

-- | [ value, ... ]  
@url http://www.frege-lang.org/doc/frege/data/JSON#Value.Array
Array [Value]

-- |true or false  
@url http://www.frege-lang.org/doc/frege/data/JSON#Value.Bool
Bool Bool

-- | just null  
@url http://www.frege-lang.org/doc/frege/data/JSON#Value.Null
Null

-- | a number  
@url http://www.frege-lang.org/doc/frege/data/JSON#Value.Number
Number (String)

-- | a string  
@url http://www.frege-lang.org/doc/frege/data/JSON#Value.String
String (String)

-- | { "name":value, ... }  
@url http://www.frege-lang.org/doc/frege/data/JSON#Value.Struct
Struct [(String, Value)]

-- | Make a single association  
@url http://www.frege-lang.org/doc/frege/data/JSON#assoc
assoc ∷ ToJSON b ⇒ String → b → (String, Value)

-- | Make a Value.Struct with just a single association, suitable for variants  
@url http://www.frege-lang.org/doc/frege/data/JSON#struct
struct ∷ ToJSON a ⇒ String → a → Value

-- | Extract a required field from an association list or MonadFail.fail with an appropriate message.  
@url http://www.frege-lang.org/doc/frege/data/JSON#field
field ∷ (FromJSON b, MonadFail m) ⇒ String → [(String, Value)] → m b

-- | Convenience function to do FromJSON.fromJSON in the Maybe monad.  
@url http://www.frege-lang.org/doc/frege/data/JSON#fromJSONMaybe
fromJSONMaybe ∷ FromJSON b ⇒ Value → Maybe b

-- | Convenience function to do FromJSON.fromJSON in the Either monad.  
@url http://www.frege-lang.org/doc/frege/data/JSON#fromJSONEither
fromJSONEither ∷ FromJSON b ⇒ Value → (String | b)

-- | A JSON parser processes a list of Tokens.  
@url http://www.frege-lang.org/doc/frege/data/JSON#Parser
type Parser = MP.Parser [] Token

-- | run a Parser and extract the result  
@url http://www.frege-lang.org/doc/frege/data/JSON#runParser
runParser ∷ Parser a → [Token] → (String | a)

-- | Parses an Value.Array or a Value.Struct 
--   This is the parser that will be used in type class FromJSON by default. 
--   This parser fails unless it could consume all input.  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseObject
parseObject ∷ Parser Value

-- | parse any JSON value  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseValue
parseValue ∷ Parser Value

-- | Parse a JSON number  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseNumber
parseNumber ∷ Parser Value

-- | Parse a JSON boolean  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseBoolean
parseBoolean ∷ Parser Value

-- | Parse JSON null  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseNull
parseNull ∷ Parser Value

-- | Parse a JSON array  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseArray
parseArray ∷ Parser Value

-- | Parse a JSON struct 
--   If one and the same key appears multiple times, only the last one will be taken into account.  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseStruct
parseStruct ∷ Parser Value

-- | parse a left bracket  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseLbrack
parseLbrack ∷ Parser Token

-- | parse a left brace  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseLbrace
parseLbrace ∷ Parser Token

-- | parse a right bracket  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseRbrack
parseRbrack ∷ Parser Token

-- | parse a right brace  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseRbrace
parseRbrace ∷ Parser Token

-- | parse a comma  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseComma
parseComma ∷ Parser Token

-- | parse a colon  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseColon
parseColon ∷ Parser Token

-- | parse a String  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseString
parseString ∷ Parser String

-- | parse an Int  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseInt
parseInt ∷ Parser Int

-- | parse a Long  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseLong
parseLong ∷ Parser Long

-- | parse an Integer  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseInteger
parseInteger ∷ Parser Integer

-- | parse a raw Double  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseDouble
parseDouble ∷ Parser Double

-- | parse a raw Float  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseFloat
parseFloat ∷ Parser Float

-- | parse a Bool  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseBool
parseBool ∷ Parser Bool

-- | parse a pair "string" : v  
@url http://www.frege-lang.org/doc/frege/data/JSON#parsePair
parsePair ∷ Parser v → Parser (String, v)

-- | parse a list 
--   For example, 
--   parseList parseFloat 
--   produces a [Float] directly  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseList
parseList ∷ Parser a → Parser [a]

-- | parse a raw tuple 
--   Use like 
--   parseTuple (parseFloat, parseString) 
--   This would produce (Float, String)  
@url http://www.frege-lang.org/doc/frege/data/JSON#parseTuple
parseTuple ∷ (Parser a, Parser b) → Parser (a, b)

-- | Pretty print a Value. 
--   This is used in the Show instance for Value, but can be useful otherwise. For example, to print a large Value directly to IO.stdout without realizing the full intermediate String in memory with a line width of 120 use: 
--   import Lib.PP(prettyIO) prettyIO stdout 120 . valDoc 
@url http://www.frege-lang.org/doc/frege/data/JSON#valDoc
valDoc ∷ Value → DOCUMENT

-- | Class of types whose values can be reconstructed from JSON. 
--   There are two ways to accomplish this: take a JSON Value and try to reconstruct a value of the desired type, that is, implement function FromJSON.fromJSON write a Parser that produces the desired value directly and use this to implement FromJSON.parseJSON 
--   The usual way is to implement FromJSON.fromJSON and keep the default for FromJSON.parseJSON, which parses a String to a Value and passes that value to FromJSON.fromJSON. 
--   Minimal complete definition: FromJSON.fromJSON 
--   The instances of all standard types that are not encoded as objects will have an implementation of FromJSON.parseJSON that fails immediately. This behaviour is in line with the JSON standard which allows only objects (that is, maps or arrays) to appear on the top level. 
--   Known Instances
--  ----------------
--  Bool, (,,,,,,,,,,,,), (,,,,), (,,), (), (,), (,,,), (,,,,,,,,), (,,,,,,), (,,,,,), (,,,,,,,), (,,,,,,,,,,), (,,,,,,,,,), (,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,), (,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,,,,,,), Long, Double, Lang.Byte, Char, Int, Float, Either, Integer, JArray, Value, Lang.Short, Maybe, StringJ, [] 
--   Member Functions
--  ----------------
--  fromJSON ∷ (FromJSON a, MonadFail m) ⇒ Value → m a 
--   Interpret a JSON value as a value of the instance type, or MonadFail.fail. 
--   This function must be implemented by all instances. 
--   If one has a non-standard implementation of FromJSON.parseJSON that does not use FromJSON.fromJSON, a conforming, but inefficient implementation would be 
--   fromJSON = parseJSON . show  
--  parseJSON ∷ (FromJSON a, MonadFail m) ⇒ String → m a 
--   Parse a String which must contain valid JSON, and interpret as value of the instance type. 
--   The standard implementation uses parseObject to make a JSON Value that is passed on to FromJSON.fromJSON.   
@url http://www.frege-lang.org/doc/frege/data/JSON#FromJSON
class FromJSON a

-- | Interpret a JSON value as a value of the instance type, or MonadFail.fail. 
--   This function must be implemented by all instances. 
--   If one has a non-standard implementation of FromJSON.parseJSON that does not use FromJSON.fromJSON, a conforming, but inefficient implementation would be 
--   fromJSON = parseJSON . show 
@url http://www.frege-lang.org/doc/frege/data/JSON#FromJSON.fromJSON
fromJSON ∷ (FromJSON a, MonadFail m) ⇒ Value → m a

-- | Parse a String which must contain valid JSON, and interpret as value of the instance type. 
--   The standard implementation uses parseObject to make a JSON Value that is passed on to FromJSON.fromJSON. 
@url http://www.frege-lang.org/doc/frege/data/JSON#FromJSON.parseJSON
parseJSON ∷ (FromJSON a, MonadFail m) ⇒ String → m a

-- | The class of types that support their serialization to JSON. 
--   Note that the JSON value for primitive types and Strings yields no valid JSON document when printed. 
--   Known Instances
--  ----------------
--  Lang.Byte, (,,,,,,,,), (,,,,), (), (,,), (,), (,,,), (,,,,,,), (,,,,,), (,,,,,,,), (,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,), (,,,,,,,,,,), (,,,,,,,,,), (,,,,,,,,,,,), (,,,,,,,,,,,,,,), (,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,,), (,,,,,,,,,,,,,,,,,,,,,,,), Bool, (,,,,,,,,,,,,,,,,,,,,,,,,,), Int, Double, Char, Float, Either, Value, Long, Integer, JArray, Lang.Short, Maybe, StringJ, [] 
--   Member Functions
--  ----------------
--  toJSON ∷ ToJSON a ⇒ a → Value 

@url http://www.frege-lang.org/doc/frege/data/JSON#ToJSON
class ToJSON a


@url http://www.frege-lang.org/doc/frege/data/JSON#ToJSON.toJSON
toJSON ∷ ToJSON a ⇒ a → Value

-- | The short encoding for Maybe values. 
--   Produces Value.Null for Maybe.Nothing and the jsonized value for Maybe.Just value. 
--   The FromJSON instance for Maybe is prepared to deal with the different encodings.  
@url http://www.frege-lang.org/doc/frege/data/JSON#maybeToJSON
maybeToJSON ∷ ToJSON a ⇒ Maybe a → Value

-- | The maximumBy function takes a comparison function and a list and returns the greatest element of the list by the comparison function. The list must be finite and non-empty. 
@url http://www.frege-lang.org/doc/frege/data/List#maximumBy
maximumBy ∷ (α→α→Ordering) → [α] → α

-- | The minimumBy function takes a comparison function and a list and returns the least element of the list by the comparison function. The list must be finite and non-empty. 
@url http://www.frege-lang.org/doc/frege/data/List#minimumBy
minimumBy ∷ (α→α→Ordering) → [α] → α

-- | The unfoldr function is a dual to foldr: while foldr reduces a list to a summary value, unfoldr builds a list from a seed value. The function takes the element and returns Maybe.Nothing if it is done producing the list or returns Maybe.Just (a,b), in which case, a is a prepended to the list and b is used as the next element in a recursive call. For example, 
--   iterate f == unfoldr (\x -> Just (x, f x)) 
--   In some cases, unfoldr can undo a foldr operation: 
--   unfoldr f' (foldr f z xs) == xs 
--   if the following holds: 
--   f' (f x y) = Just (x,y) f' z = Nothing 
--   A simple use of unfoldr: 
--   unfoldr (\b -> if b == 0 then Nothing else Just (b, b-1)) 10 [10,9,8,7,6,5,4,3,2,1] 
@url http://www.frege-lang.org/doc/frege/data/List#unfoldr
unfoldr ∷ (b → Maybe (a, b)) → b → [a]

-- | The inits function returns all initial segments of the argument, shortest first. For example, 
--   inits "abc" == ["","a","ab","abc"] 
@url http://www.frege-lang.org/doc/frege/data/List#inits
inits ∷ [α] → [[α]]

-- | The tails function returns all final segments of the argument, longest first. For example, 
--   tails "abc" == ["abc", "bc", "c",""] 
@url http://www.frege-lang.org/doc/frege/data/List#tails
tails ∷ [α] → [[α]]

-- |takeUntil p xs is the same as takeWhile (not • p) xs 
@url http://www.frege-lang.org/doc/frege/data/List#takeUntil
takeUntil ∷ (α→Bool) → [α] → [α]

-- |dropUntil p xs is the same as dropWhile (not • p) xs 
--   Consequently, for all lists /xs/ 
--   takeUntil p xs ++ dropUntil p xs == xs 
@url http://www.frege-lang.org/doc/frege/data/List#dropUntil
dropUntil ∷ (α→Bool) → [α] → [α]

-- |group xs returns a list of sub-lists made of adjacent equal elements in xs. All sublist are not empty and their concatenation yields again xs. 
@url http://www.frege-lang.org/doc/frege/data/List#group
group ∷ Eq α ⇒ [α] → [[α]]

-- |groupBy f xs groups by function f instead of (==) that is used by group 
@url http://www.frege-lang.org/doc/frege/data/List#groupBy
groupBy ∷ (α→α→Bool) → [α] → [[α]]

-- |elemBy f is a more general version of elem that uses /f/ instead of Eq.==. 
--   See also: using  
@url http://www.frege-lang.org/doc/frege/data/List#elemBy
elemBy ∷ (β→α→Bool) → β → [α] → Bool

-- | lookup a key in an association list  
@url http://www.frege-lang.org/doc/frege/data/List#lookup
lookup ∷ Eq α ⇒ α → [(α, β)] → Maybe β

-- |delete x removes the first occurrence of x from its list argument. For example, 
--   delete ’a’ "banana" == "bnana" 
--   It is a special case of deleteBy, which allows the programmer to supply their own equality test. 
@url http://www.frege-lang.org/doc/frege/data/List#delete
delete ∷ Eq α ⇒ α → [α] → [α]

-- | The deleteBy function behaves like delete, but takes a user-supplied equality predicate.  
@url http://www.frege-lang.org/doc/frege/data/List#deleteBy
deleteBy ∷ (β→α→Bool) → β → [α] → [α]

-- | The deleteFirstsBy function takes a predicate and two lists and returns the first list with the first occurrence of each element of the second list removed. 
@url http://www.frege-lang.org/doc/frege/data/List#deleteFirstsBy
deleteFirstsBy ∷ (β→α→Bool) → [α] → [β] → [α]


@url http://www.frege-lang.org/doc/frege/data/List#insert
insert ∷ Ord a ⇒ a → [a] → [a]

-- | The non-overloaded version of insert.  
@url http://www.frege-lang.org/doc/frege/data/List#insertBy
insertBy ∷ (α→α→Ordering) → α → [α] → [α]

-- | The \\ function is list difference (non-associative). In the result of xs \\ ys, the first occurrence of each element of ys in turn (if any) has been removed from xs. Thus 
--   (xs ++ ys) \\ xs == ys. 
--   It is a special case of deleteFirstsBy, which allows the programmer to supply their own equality test. 
@url http://www.frege-lang.org/doc/frege/data/List#_back_back
(\\) ∷  Eq a ⇒ [a] → [a] → [a] 
infix  14

-- | The union function returns the list union of the two lists. For example, 
--   "dog" `union` "cow" == "dogcw" 
--   Duplicates, and elements of the first list, are removed from the the second list, but if the first list contains duplicates, so will the result. 
--   It is a special case of unionBy, which allows the programmer to supply their own equality test. 
@url http://www.frege-lang.org/doc/frege/data/List#union
union ∷ Eq a ⇒ [a] → [a] → [a]

-- | The unionBy function is the non-overloaded version of union.  
@url http://www.frege-lang.org/doc/frege/data/List#unionBy
unionBy ∷ (α→α→Bool) → [α] → [α] → [α]

-- | The intersect function takes the list intersection of two lists. For example, 
--   [1,2,3,4] `intersect` [2,4,6,8] == [2,4] 
--   If the first list contains duplicates, so will the result. 
--   [1,2,2,3,4] `intersect` [6,4,4,2] == [2,2,4] 
--   It is a special case of intersectBy, which allows the programmer to supply their own equality test. 
@url http://www.frege-lang.org/doc/frege/data/List#intersect
intersect ∷ Eq a ⇒ [a] → [a] → [a]

-- | The intersectBy function is the non-overloaded version of intersect.  
@url http://www.frege-lang.org/doc/frege/data/List#intersectBy
intersectBy ∷ ListSource β ⇒ (γ→α→Bool) → β γ → [α] → [γ]

-- |unique removes duplicate elements from an unsorted list, which may or may not be faster than using (uniq • sort) 
--   This function is known as nub in Haskell and Prelude provides this as alias. 
--   However, the following holds 
--   sort (unique xs) == uniq (sort xs) 
@url http://www.frege-lang.org/doc/frege/data/List#unique
unique ∷ Eq α ⇒ [α] → [α]

-- | Alias for unique 
@url http://www.frege-lang.org/doc/frege/data/List#nub
nub ∷ Eq α ⇒ [α] → [α]

-- | Alias for uniqueBy 
@url http://www.frege-lang.org/doc/frege/data/List#nubBy
nubBy ∷ (α→α→Bool) → [α] → [α]

-- |uniqueBy f is a more general form of unique, but uses f instead of Eq.== to decide whether equal elements are contained in the list. 
--   The following holds: 
--   sortBy (comparing f) (uniqueBy (using f) xs) == uniqBy (using f) (sortBy (comparing f) xs) 
@url http://www.frege-lang.org/doc/frege/data/List#uniqueBy
uniqueBy ∷ (α→α→Bool) → [α] → [α]

-- |uniq removes adjacent equal elements from a list 
--   uniq [1, 2, 2, 3, 2] = [1, 2, 3, 2] 
--   This is most useful on sorted lists to remove duplicates. For unsorted lists use unique 
@url http://www.frege-lang.org/doc/frege/data/List#uniq
uniq ∷ Eq α ⇒ [α] → [α]

-- |uniqBy f is a variant of uniq that uses f instead of Eq.==. In the result, there are no two adjacent elements x and y where the relation y `f` x holds. 
--   This is most useful on sorted lists with projection functions that compare parts of the value for equality. See also using. 
--   uniqBy (using fst) [(1, 1), (2, 2), (2, 3), (3, 4), (2, 5)] = uniqBy (\a\b -> fst a == fst b) [(1, 1), (2, 2), (2, 3), (3, 4), (2, 5)] = [(1, 1), (2, 2), (3, 4), (2, 5)] 
--   The example shows that the first of adjacent, equal comparing elements is retained. 
@url http://www.frege-lang.org/doc/frege/data/List#uniqBy
uniqBy ∷ (α→α→Bool) → [α] → [α]

-- |partitioned p xs splits xs in 2 lists and returns them as a tuple (xs1, xs2), such that xs1 contains all elements of xs that satisfy predicate p and xs2 contains those that do not. 
--   The order of the elements of xs is reversed in the results. The argument must be finite, it is processed in a tail recursive loop. 
--   See also partition, which is lazy and works on infinite lists, but may be slower on finite lists because it processes the argument twice. 
--   The following is true for all finite lists xs 
--   let ps = partitionR p xs in all p (fst ps) && (not • any p) (snd ps) && length (fst ps) + length (snd ps) == length xs && all (`elem` xs) (fst ps) && all (`elem` xs) (snd ps) && all (\x -> x `elem` fst ps || x `elem` snd ps) xs 
@url http://www.frege-lang.org/doc/frege/data/List#partitioned
partitioned ∷ (α→Bool) → [α] → ([α], [α])

-- | A variant of partition that satisfies the Haskell 2010 specification. When the order of the results is irrelevant or one actually wants the results reversed, consider the more efficient partitioned. 
@url http://www.frege-lang.org/doc/frege/data/List#partition
partition ∷ (α→Bool) → [α] → ([α], [α])

-- |intercalate xs xss is equivalent to concat (intersperse xs xss) 
@url http://www.frege-lang.org/doc/frege/data/List#intercalate
intercalate ∷ (ListEmpty α, ListSemigroup α) ⇒ α β → [α β] → α β

-- |zip4 zips 4 lists in the same way as zip does it.  
@url http://www.frege-lang.org/doc/frege/data/List#zip4
zip4 ∷ [β] → [δ] → [γ] → [α] → [(β, δ, γ, α)]

-- |unzip4 unzips a list of quadrupels and returns a quadrupel of lists.  
@url http://www.frege-lang.org/doc/frege/data/List#unzip4
unzip4 ∷ [(α, β, δ, γ)] → ([α], [β], [δ], [γ])

-- |zipWith4 /f/ zips 4 lists with function /f/ instead of the standard (,,,) that is used by zip4  
@url http://www.frege-lang.org/doc/frege/data/List#zipWith4
zipWith4 ∷ (γ→δ→α→β→ε) → [γ] → [δ] → [α] → [β] → [ε]

-- |zip5 zips 5 lists in the same way as zip does it.  
@url http://www.frege-lang.org/doc/frege/data/List#zip5
zip5 ∷ [β] → [α] → [δ] → [γ] → [ε] → [(β, α, δ, γ, ε)]

-- |unzip5 unzips a list of quintupels and returns a quintupel of lists.  
@url http://www.frege-lang.org/doc/frege/data/List#unzip5
unzip5 ∷ [(δ, ε, γ, β, α)] → ([δ], [ε], [γ], [β], [α])

-- |zipWith5 /f/ zips 5 lists with function /f/ instead of the standard (,,,,) that is used by zip5  
@url http://www.frege-lang.org/doc/frege/data/List#zipWith5
zipWith5 ∷ (α→β→δ→ε→γ→ζ) → [α] → [β] → [δ] → [ε] → [γ] → [ζ]

-- |zip6 zips 6 lists in the same way as zip does it.  
@url http://www.frege-lang.org/doc/frege/data/List#zip6
zip6 ∷ [ζ] → [ε] → [β] → [α] → [δ] → [γ] → [(ζ, ε, β, α, δ, γ)]

-- |unzip6 unzips a list of sextupels and returns a sextupel of lists.  
@url http://www.frege-lang.org/doc/frege/data/List#unzip6
unzip6 ∷ [(ζ, ε, β, γ, α, δ)] → ([ζ], [ε], [β], [γ], [α], [δ])

-- |zipWith6 /f/ zips 6 lists with function /f/ instead of the standard (,,,,,) that is used by zip6  
@url http://www.frege-lang.org/doc/frege/data/List#zipWith6
zipWith6 ∷ (γ→α→β→ε→ζ→δ→η) → [γ] → [α] → [β] → [ε] → [ζ] → [δ] → [η]

-- |zip7 zips 7 lists in the same way as zip does it.  
@url http://www.frege-lang.org/doc/frege/data/List#zip7
zip7 ∷ [η] → [δ] → [γ] → [ζ] → [ε] → [β] → [α] → [(η, δ, γ, ζ, ε, β, α)]

-- |unzip7 unzips a list of septupels and returns a septupel of lists.  
@url http://www.frege-lang.org/doc/frege/data/List#unzip7
unzip7 ∷ [(δ, γ, ζ, η, ε, β, α)] → ([δ], [γ], [ζ], [η], [ε], [β], [α])

-- |zipWith7 /f/ zips 7 lists with function /f/ instead of the standard (,,,,,,) that is used by zip7  
@url http://www.frege-lang.org/doc/frege/data/List#zipWith7
zipWith7 ∷ (γ→ζ→η→δ→ε→α→β→θ) → [γ] → [ζ] → [η] → [δ] → [ε] → [α] → [β] → [θ]

-- |sortBy f xs is a stable sort (merge sort), it uses /f/ to decide the order of elements. If a `f` b is Ordering.Lt or Eq, then /a/ comes before /b/, otherwise /b/ comes before /a/. 
--   see also comparing, descending 
@url http://www.frege-lang.org/doc/frege/data/List#sortBy
sortBy ∷ ListSource α ⇒ (β→β→Ordering) → α β → [β]

-- | Merge two lists, taking elements from the left as long as they are not Ordering.Gt (according to the passed comparison function) than the head element from the right. 
--   Makes most sense when the lists are sorted by the same criteria. 
@url http://www.frege-lang.org/doc/frege/data/List#merge
merge ∷ (α→α→Ordering) → [α] → [α] → [α]

-- | Standard sort uses operator Ord.<=> and demands that the type of the list elements is an instance of Ord 
@url http://www.frege-lang.org/doc/frege/data/List#sort
sort ∷ (Ord β, ListSource α) ⇒ α β → [β]

-- | The transpose function transposes the rows and columns of its argument. 
--   For example, 
--   transpose [[1,2,3],[4,5,6]] == [[1,4],[2,5],[3,6]]  
@url http://www.frege-lang.org/doc/frege/data/List#transpose
transpose ∷ [[a]] → [[a]]

-- | The subsequences function returns the list of all subsequences of the argument. 
--   subsequences "abc" == ["","a","b","ab","c","ac","bc","abc"]  
@url http://www.frege-lang.org/doc/frege/data/List#subsequences
subsequences ∷ [α] → [[α]]

-- | The nonEmptySubsequences function returns the list of all subsequences of the argument, except for the empty list. 
--   nonEmptySubsequences "abc" == ["a","b","ab","c","ac","bc","abc"] 
@url http://www.frege-lang.org/doc/frege/data/List#nonEmptySubsequences
nonEmptySubsequences ∷ [α] → [[α]]

-- | The permutations function returns the list of all permutations of the argument. 
--   permutations "abc" == ["abc","bac","cba","bca","cab","acb"]  
@url http://www.frege-lang.org/doc/frege/data/List#permutations
permutations ∷ [α] → [[α]]

-- | The mapAccumL function behaves like a combination of map and fold; it applies a function to each element of a list, passing an accumulating parameter from left to right, and returning a final value of this accumulator together with the new list. 
@url http://www.frege-lang.org/doc/frege/data/List#mapAccumL
mapAccumL ∷ (acc → x → (acc, y)) → acc → [x] → (acc, [y])

-- | The mapAccumR function behaves like a combination of map and foldr; it applies a function to each element of a list, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new list. 
@url http://www.frege-lang.org/doc/frege/data/List#mapAccumR
mapAccumR ∷ (acc → x → (acc, y)) → acc → [x] → (acc, [y])

-- | The stripPrefix function drops the given prefix from a list. It returns Maybe.Nothing if the list did not start with the prefix given, or Maybe.Just the list after the prefix, if it does. 
--   stripPrefix "foo" "foobar" -> Just "bar" stripPrefix "foo" "foo" -> Just "" stripPrefix "foo" "barfoo" -> Nothing stripPrefix "foo" "barfoobaz" -> Nothing 
@url http://www.frege-lang.org/doc/frege/data/List#stripPrefix
stripPrefix ∷ Eq α ⇒ [α] → [α] → Maybe [α]

-- | The isPrefixOf function takes two lists and returns true iff the first list is a prefix of the second. 
@url http://www.frege-lang.org/doc/frege/data/List#isPrefixOf
isPrefixOf ∷ Eq α ⇒ [α] → [α] → Bool

-- | The isSuffixOf function takes two lists and returns true iff the first list is a suffix of the second. Both lists must be finite. 
@url http://www.frege-lang.org/doc/frege/data/List#isSuffixOf
isSuffixOf ∷ Eq a ⇒ [a] → [a] → Bool

-- | The isInfixOf function takes two lists and returns true iff the first list is contained, wholly and intact, anywhere within the second. 
--   Example: 
--   isInfixOf "Haskell" "I really like Haskell." == true isInfixOf "Ial" "I really like Haskell." == false 
@url http://www.frege-lang.org/doc/frege/data/List#isInfixOf
isInfixOf ∷ Eq a ⇒ [a] → [a] → Bool

-- | The elemIndex function returns the index of the first element in the given list which is equal (by Eq.==) to the query element, or Maybe.Nothing if there is no such element. 
@url http://www.frege-lang.org/doc/frege/data/List#elemIndex
elemIndex ∷ Eq a ⇒ a → [a] → Maybe Int

-- | The elemIndices function extends elemIndex, by returning the indices of all elements equal to the query element, in ascending order. 
@url http://www.frege-lang.org/doc/frege/data/List#elemIndices
elemIndices ∷ Eq a ⇒ a → [a] → [Int]

-- | The find function takes a predicate and a list and returns the first element in the list matching the predicate, or Maybe.Nothing if there is no such element. 
@url http://www.frege-lang.org/doc/frege/data/List#find
find ∷ (a → Bool) → [a] → Maybe a

-- | The findIndex function takes a predicate and a list and returns the index of the first element in the list satisfying the predicate, or Maybe.Nothing if there is no such element. 
@url http://www.frege-lang.org/doc/frege/data/List#findIndex
findIndex ∷ (a → Bool) → [a] → Maybe Int

-- | The findIndices function extends findIndex, by returning the indices of all elements satisfying the predicate, in ascending order. 
@url http://www.frege-lang.org/doc/frege/data/List#findIndices
findIndices ∷ (a → Bool) → [a] → [Int]

-- | The genericLength function is an overloaded version of ListView.length. In particular, instead of returning an Int, it returns any type which is an instance of Num. It is, however, less efficient than ListView.length. 
@url http://www.frege-lang.org/doc/frege/data/List#genericLength
genericLength ∷ Num i ⇒ [b] → i

-- | The genericTake function is an overloaded version of ListView.take, which accepts any Integral value as the number of elements to take. 
@url http://www.frege-lang.org/doc/frege/data/List#genericTake
genericTake ∷ Integral i ⇒ i → [a] → [a]

-- | The genericDrop function is an overloaded version of ListView.drop, which accepts any Integral value as the number of elements to drop. 
@url http://www.frege-lang.org/doc/frege/data/List#genericDrop
genericDrop ∷ Integral i ⇒ i → [a] → [a]

-- | The genericSplitAt function is an overloaded version of splitAt, which accepts any Integral value as the position at which to split. 
@url http://www.frege-lang.org/doc/frege/data/List#genericSplitAt
genericSplitAt ∷ Integral i ⇒ i → [b] → ([b], [b])

-- | The genericIndex function is an overloaded version of !!, which accepts any Integral value as the index. 
@url http://www.frege-lang.org/doc/frege/data/List#genericIndex
genericIndex ∷ Integral a ⇒ [b] → a → b

-- | The genericReplicate function is an overloaded version of replicate, which accepts any Integral value as the number of repetitions to make. 
@url http://www.frege-lang.org/doc/frege/data/List#genericReplicate
genericReplicate ∷ Integral i ⇒ i → a → [a]

-- |xs !! n is the element with index n of the list xs, where the head element of a list has index 0. 
@url http://www.frege-lang.org/doc/frege/data/List#_excl_excl
(!!) ∷  [α] → Int → α 
infixl  16

-- | Parser Monad 
--   Parser s t m r 
--   is the type of parsers that reads tokens of type t from a stream s t and returns either an error message string or a result r paired with the yet unprocessed input. 
--   Works in principle like a combination of State and Either, where the state is the current input to get parsed, and the bind operations will stop on the first Either.Left result, which signals a syntax error. 
--  Parser is also an instance of MonadAlt. The operations MonadAlt.<+> and Alt.<|> can be used to implement choice, i.e. they allow to continue on failure. 
--   The input for a Parser must be something that is an instance of ListView. Ordinary lists, Strings, StringIterator and ArrayIterator are such types. The parser combinators use only the ListView.uncons and ListEmpty.null operations. 
--   Constructors
--  ----------------
--  private P {run ∷ s t → ((String | r), s t)} 
--   Member Functions
--  ----------------
--  run ∷ Parser β α γ → β α → ((String | γ), β α) 
--   access field run   
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#Parser
data Parser s t r


@url http://www.frege-lang.org/doc/frege/data/MicroParsec#Parser.P
private P {run ∷ s t → ((String | r), s t)}

-- | Remember the current state of the input stream. 
--  getPos always succeeds.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#getPos
getPos ∷ Parser β α (β α)

-- | Resume parsing with the given input stream. 
--  putPos always succeeds.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#putPos
putPos ∷ α β → Parser α β ()


@url http://www.frege-lang.org/doc/frege/data/MicroParsec#modifyPos
modifyPos ∷ (α β→α β) → Parser α β ()

-- | fail with given error message  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#failure
failure ∷ String → Parser α γ β

-- | run a parser  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#runid
runid ∷ Parser γ α β → γ α → ((String | β), γ α)

-- | run a Parser, return just the result/error  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#parse
parse ∷ Parser (γ) β α → (γ, β) → ((String | α), γ)

-- | run a Parser on some input and report  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#parseTest
parseTest ∷ (Show r, Show t, ListView s) ⇒ Parser s t r → s t → IO ()


@url http://www.frege-lang.org/doc/frege/data/MicroParsec#reporterror
reporterror ∷ (ListSource α, Show β) ⇒ α β → String → String

-- | Causes the error message to be msg when p fails. 
--   The error will be reported at the position where p was attempted, not necessarily at the position where p failed: 
--   Parser.run (letter >> digit) "a?" unexpected token, found ? Parser.run (label "id expected" $ letter >> digit) "a?" id expected, found a? 
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#label
label ∷ String → Parser β γ α → Parser β γ α

-- | p <?> msg 
--   Causes the error message to be msg when p fails. 
--   The error will be reported at the position where p failed. 
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#_lt_qm_gt
(<?>) ∷  Parser γ β α → String → Parser γ β α 
infix  14

-- | expect t 
--   This parser succeeds if the input is not empty and the head of the input equals t. 
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#expect
expect ∷ (Show α, Eq α, ListView β) ⇒ α → Parser β α α

-- | The eos parser succeeds if the input is empty.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#eos
eos ∷ ListView β ⇒ Parser β α ()

-- | satisfy property 
--   Succeeds if there is a next token t and property t is true.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#satisfy
satisfy ∷ ListView s ⇒ (t → Bool) → Parser s t t

-- | exceptWhen prop 
--   Fails if and only if there is a next token t and prop t is true. 
--   Succeeds on end of stream or when the token does not satisfy the property. 
--   In other words, exceptWhen p succeeds if and only if satisfy p fails.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#exceptWhen
exceptWhen ∷ ListView α ⇒ (β→Bool) → Parser α β ()

-- | pany 
--   Fails if and only if eos succeeds, otherwise returns the next token.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#pany
pany ∷ ListView β ⇒ Parser β α α

-- | symbol p 
--   Is the same parser as p, but skips spaces afterwards  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#symbol
symbol ∷ ListView α ⇒ Parser α Char β → Parser α Char β


@url http://www.frege-lang.org/doc/frege/data/MicroParsec#space
space ∷ ListView α ⇒ Parser α Char Char


@url http://www.frege-lang.org/doc/frege/data/MicroParsec#digit
digit ∷ ListView α ⇒ Parser α Char Char


@url http://www.frege-lang.org/doc/frege/data/MicroParsec#letter
letter ∷ ListView α ⇒ Parser α Char Char


@url http://www.frege-lang.org/doc/frege/data/MicroParsec#uppercase
uppercase ∷ ListView α ⇒ Parser α Char Char


@url http://www.frege-lang.org/doc/frege/data/MicroParsec#spaces
spaces ∷ ListView α ⇒ Parser α Char ()


@url http://www.frege-lang.org/doc/frege/data/MicroParsec#string
string ∷ String → Parser StringJ Char String

-- | This parser succeeds if the pattern matches the beginning of the string. 
--   For efficiency reasons, the pattern should start with ^  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#match
match ∷ Regex → Parser StringJ Char MatchResult

-- | The optional parser always succeeds and returns its result wrapped in Maybe  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#optional
optional ∷ Parser s t r → Parser s t (Maybe r)

-- | many p 
--   Collects as many p as possible and returns the results in a list. 
--   Succeeds also when p fails the first time, in that case the result is an empty list. 
--   Must not be applied to a parser that always succeeds!  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#many
many ∷ Parser α β γ → Parser α β [γ]

-- | some p 
--   Like many, except there must be at least one p 
--   Must not be applied to a parser that always succeeds!  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#some
some ∷ Parser γ α β → Parser γ α [β]

-- | Alias for some 
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#many1
many1 ∷ Parser γ α β → Parser γ α [β]

-- | skip p 
--   equivalent to 
--   many p >> return () 
--   but faster, because it does not build up lists. 
--   Must not be applied to a parser that always succeeds!  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#skip
skip ∷ Parser β δ γ → Parser β δ ()

-- | manyWhile p 
--   Collect tokens as long as they satisfy p  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#manyWhile
manyWhile ∷ ListView α ⇒ (β→Bool) → Parser α β [β]

-- | skipWhile p 
--   Skip tokens as long as they satisfy predicate p. 
--   Beware of negative predicates like 
--   skipWhile (!= 'a') 
--   This will loop forever if there is no 'a' in the input stream. Instead use 
--   skipUntil (== 'a') 
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#skipWhile
skipWhile ∷ ListView β ⇒ (α→Bool) → Parser β α ()

-- | skipUntil p 
--   Skip tokens as long as they do not satisfy p 
--   When this succeeds, the next token will satisfy p or the stream is exhausted.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#skipUntil
skipUntil ∷ ListView β ⇒ (α→Bool) → Parser β α ()

-- | cond pcond pthen pelse 
--   if pcond succeeds, then pthen is run, else pelse 
--   To both pthen and pelse it will appear as if pcond didn't consume any tokens.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#cond
cond ∷ Parser γ δ α → Parser γ δ β → Parser γ δ β → Parser γ δ β

-- | select [(if1, t1), (if2, t2), ..., (ifn, tn)] e 
--   unfolds as 
--   cond if1 t1 (cond if2 t2 (... (cond ifn tn e)))  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#select
select ∷ [(Parser a d b, Parser a d c)] → Parser a d c → Parser a d c

-- | choice ps 
--   Tries the parsers in the list from left to right, until success.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#choice
choice ∷ Plus β ⇒ [β α] → β α

-- | count n p 
--   Applies p n times and returns a list of the results  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#count
count ∷ Monad α ⇒ Int → α β → α [β]

-- | between left right p 
--   Parses left, then p and finally right and returns the result of p  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#between
between ∷ Monad β ⇒ β α → β δ → β γ → β γ

-- | option v p 
--   Applies p, and returns v when it fails. 
--   Always succeeds.  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#option
option ∷ β → Parser α γ β → Parser α γ β

-- | p `sepBy1` q 
--   Parses p and many q followed by p  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#sepBy1
sepBy1 ∷ Parser α β δ → Parser α β γ → Parser α β [δ]

-- | p `sepBy` q 
--   Like sepBy1, but allows zero p elements  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#sepBy
sepBy ∷ Parser γ δ α → Parser γ δ β → Parser γ δ [α]

-- | p `endBy` q 
--   Parses zero or more occurrences of p separated and ended by q  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#endBy
endBy ∷ Parser β γ α → Parser β γ δ → Parser β γ [α]

-- | p `endBy1` q 
--   Parses one or more occurrences of p separated and ended by q  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#endBy1
endBy1 ∷ Parser γ α δ → Parser γ α β → Parser γ α [δ]

-- | p `sepEndBy` q 
--   Parses zero or more occurrences of p, separated and optionally ended by q  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#sepEndBy
sepEndBy ∷ Parser α β δ → Parser α β γ → Parser α β [δ]

-- | p `sepEndBy1` q 
--   Parses one or more occurrences of p, separated and optionally ended by q  
@url http://www.frege-lang.org/doc/frege/data/MicroParsec#sepEndBy1
sepEndBy1 ∷ Parser γ δ α → Parser γ δ β → Parser γ δ [α]

-- | Known Instances
--  ----------------
--  Maybe, First, (), ->, Last, ST, StringJ, Ordering, [] 
--   Member Functions
--  ----------------
--  mappend ∷ Semigroup this ⇒ this → this → this 
--  infixr  13 
--  sconcat ∷ Semigroup this ⇒ [this] → this 
--  stimes ∷ Semigroup this ⇒ Int → this → this 

@url http://www.frege-lang.org/doc/frege/data/Monoid#Semigroup
class Semigroup this


@url http://www.frege-lang.org/doc/frege/data/Monoid#Semigroup.mappend
mappend ∷ Semigroup this ⇒ this → this → this 
infixr  13


@url http://www.frege-lang.org/doc/frege/data/Monoid#Semigroup.sconcat
sconcat ∷ Semigroup this ⇒ [this] → this


@url http://www.frege-lang.org/doc/frege/data/Monoid#Semigroup.stimes
stimes ∷ Semigroup this ⇒ Int → this → this

-- | Known Instances
--  ----------------
--  Maybe, First, (), ->, Last, ST, StringJ, Ordering, [] 
--   Member Functions
--  ----------------
--  mconcat ∷ Monoid this ⇒ [this] → this 
--  mempty ∷ Monoid this ⇒ this 
--  mtimes ∷ Monoid this ⇒ Int → this → this 

@url http://www.frege-lang.org/doc/frege/data/Monoid#Monoid
class Semigroup this ⇒ Monoid this


@url http://www.frege-lang.org/doc/frege/data/Monoid#Monoid.mconcat
mconcat ∷ Monoid this ⇒ [this] → this


@url http://www.frege-lang.org/doc/frege/data/Monoid#Monoid.mempty
mempty ∷ Monoid this ⇒ this


@url http://www.frege-lang.org/doc/frege/data/Monoid#Monoid.mtimes
mtimes ∷ Monoid this ⇒ Int → this → this

-- | Constructors
--  ----------------
--  First {getFirst ∷ Maybe a} 
--   Member Functions
--  ----------------
--  getFirst ∷ First α → Maybe α 
--   access field getFirst   
@url http://www.frege-lang.org/doc/frege/data/Monoid#First
data First a


@url http://www.frege-lang.org/doc/frege/data/Monoid#First.First
First {getFirst ∷ Maybe a}

-- | Constructors
--  ----------------
--  Last {getLast ∷ Maybe a} 
--   Member Functions
--  ----------------
--  getLast ∷ Last α → Maybe α 
--   access field getLast   
@url http://www.frege-lang.org/doc/frege/data/Monoid#Last
data Last a


@url http://www.frege-lang.org/doc/frege/data/Monoid#Last.Last
Last {getLast ∷ Maybe a}

-- | A NonEmpty is like a list, but never empty. 
--   Constructors
--  ----------------
--  NonEmpty {neHead ∷ a, neTail ∷ [a]} 
--   Member Functions
--  ----------------
--  neHead ∷ NonEmpty α → α 
--   access field neHead  
--  neTail ∷ NonEmpty α → [α] 
--   The head of the non-empty list. The tail of the non-empty list.    
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#NonEmpty
data NonEmpty a


@url http://www.frege-lang.org/doc/frege/data/NonEmpty#NonEmpty.NonEmpty
NonEmpty {neHead ∷ a, neTail ∷ [a]}

-- | Constructs a non-empty list with the given head and tail.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#nonEmpty
nonEmpty ∷ a → [a] → NonEmpty a

-- | Constructs a non-empty list with the given head and tail (an alias for nonEmpty).  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#_bar_colon
(|:) ∷  a → [a] → NonEmpty a 
infixr  6

-- | Tries to convert a list to a NonEmpty returning Maybe.Nothing if the given list is empty.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#toNonEmpty
toNonEmpty ∷ [a] → Maybe (NonEmpty a)

-- | Converts a list to a NonEmpty using the given default value for the empty list case.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#toNonEmpty_tick
toNonEmpty' ∷ NonEmpty a → [a] → NonEmpty a

-- |WARNING: Fails if given the empty list. 
--   Tries to convert a list to a NonEmpty.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#unsafeToNonEmpty
unsafeToNonEmpty ∷ [a] → NonEmpty a

-- | Prepends a value to a NonEmpty.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#_dot_colon
(.:) ∷  a → NonEmpty a → NonEmpty a 
infixr  6

-- | Reverses the elements of the (finite) NonEmpty.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#reverse
reverse ∷ NonEmpty a → NonEmpty a

-- | scanl is similar to foldl, but returns a NonEmpty of successive reduced values from the left  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#scanl
scanl ∷ (b → a → b) → b → NonEmpty a → NonEmpty b

-- | scanl1 is similar to foldl1, but returns a NonEmpty of successive reduced values from the left  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#scanl1
scanl1 ∷ (a → a → a) → NonEmpty a → NonEmpty a

-- | scanr is similar to foldr, but returns a NonEmpty of successive reduced values from the right  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#scanr
scanr ∷ (a → b → b) → b → NonEmpty a → NonEmpty b

-- | scanr1 is similar to foldr1, but returns a NonEmpty of successive reduced values from the right  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#scanr1
scanr1 ∷ (a → a → a) → NonEmpty a → NonEmpty a

-- | iterate f x returns an infinite NonEmpty of repeated applications of f to x  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#iterate
iterate ∷ (a → a) → a → NonEmpty a

-- | cycle ties a finite NonEmpty into a circular one, or equivalently, the infinite repetition of the original NonEmpty. It is the identity on infinite NonEmptys. 
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#cycle
cycle ∷ ListSource src ⇒ src a → NonEmpty a

-- | The inits function returns all initial segments of the argument, shortest first.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#inits
inits ∷ NonEmpty a → [NonEmpty a]

-- | The tails function returns all final segments of the argument, longest first.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#tails
tails ∷ NonEmpty a → [NonEmpty a]

-- | The sort function implements a stable sorting algorithm.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#sort
sort ∷ Ord a ⇒ NonEmpty a → NonEmpty a

-- | The insert function takes an element and a NonEmpty and inserts the element into the NonEmpty at the last position where it is still less than or equal to the next element. 
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#insert
insert ∷ Ord a ⇒ a → NonEmpty a → NonEmpty a

-- | unzip transforms a NonEmpty of pairs into a NonEmpty of first components and a NonEmpty of second components.  
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#unzip
unzip ∷ NonEmpty (a, b) → (NonEmpty a, NonEmpty b)

-- | zip takes two NonEmptys and returns a NonEmpty of corresponding pairs. If one input NonEmptys is short, excess elements of the longer NonEmpty are discarded. 
@url http://www.frege-lang.org/doc/frege/data/NonEmpty#zip
zip ∷ NonEmpty a → NonEmpty b → NonEmpty (a, b)

-- | Constructors
--  ----------------
--  Prod (f a)   (g a) 

@url http://www.frege-lang.org/doc/frege/data/Product#Product
data Product f g a


@url http://www.frege-lang.org/doc/frege/data/Product#Product.Prod
Prod (f a)   (g a)

-- | view a tuple as Product  
@url http://www.frege-lang.org/doc/frege/data/Product#product
product ∷ (γ α, β α) → Product γ β α

-- | make a tuple from a Product  
@url http://www.frege-lang.org/doc/frege/data/Product#unproduct
unproduct ∷ Product α γ β → (α β, γ β)

-- | Streams are infinite lists. Most operations on streams are completely analogous to the definitions for []. 
--   Beware: If you use any function from the Eq or Ord class to compare two equal streams, these functions will diverge. 
--   Constructors
--  ----------------
--  Cons a   (Stream a) 
--  infixr  13 

@url http://www.frege-lang.org/doc/frege/data/Stream#Stream
data Stream a


@url http://www.frege-lang.org/doc/frege/data/Stream#Stream.Cons
Cons a   (Stream a) 
infixr  13

-- | The <:> operator is a left strict infix version of the Stream.Cons constructor. 
--   In this module, it will always be used when the head part of a Stream result is computed with some function passed as argument. 
--   This way, the strictness of the passed function is indirectly taken in account. 
--   For example, in the result of 
--   zipWith (,) stream1 stream2 
--   the data of stream1 and stream2 are not evaluated, because the tuple constructor doesn't do it. 
--   Hence 
--   let us = repeat undefined in length • take 10 • zipWith (,) us $ us 
--   will be 10. Whereas 
--   let us = repeat undefined in length • take 10 • zipWith (+) us $ us 
--   will be undefined. 
@url http://www.frege-lang.org/doc/frege/data/Stream#_lt_colon_gt
(<:>) ∷  a → Stream a → Stream a 
infixr  13

-- | The inits function takes a stream xs and returns all the finite prefixes of xs. 
--   Note that this inits is lazier then inits: 
--   inits _|_ = [] ::: _|_ 
--   while for inits: 
--   inits _|_ = _|_ 
@url http://www.frege-lang.org/doc/frege/data/Stream#inits
inits ∷ Stream a → Stream [a]

-- | The tails function takes a stream xs and returns all the suffixes of xs.  
@url http://www.frege-lang.org/doc/frege/data/Stream#tails
tails ∷ Stream a → Stream (Stream a)

-- | Apply a function uniformly over all elements of a sequence.  
@url http://www.frege-lang.org/doc/frege/data/Stream#map
map ∷ (a → b) → Stream a → Stream b

-- | intersperse y xs creates an alternating stream of elements from xs and y  
@url http://www.frege-lang.org/doc/frege/data/Stream#intersperse
intersperse ∷ a → Stream a → Stream a

-- | Interleave two Streams xs and ys, alternating elements from each list.  
--   x1,x2,... 
--  `interleave` [y1,y2,...] == [x1,y1,x2,y2,...]   
@url http://www.frege-lang.org/doc/frege/data/Stream#interleave
interleave ∷ Stream a → Stream a → Stream a

-- | scan yields a stream of successive reduced values from: 
--   scan f z [x1, x2, ...] == [z, z `f` x1, (z `f` x1) `f` x2, ...] 
@url http://www.frege-lang.org/doc/frege/data/Stream#scan
scan ∷ (a → b → a) → a → Stream b → Stream a

-- | scan' is a strict scan.  
@url http://www.frege-lang.org/doc/frege/data/Stream#scan_tick
scan' ∷ (a → b → a) → a → Stream b → Stream a

-- | scan1 is a variant of scan that has no starting value argument: 
--   scan1 f [x1, x2, ...] == [x1, x1 `f` x2, ...] 
@url http://www.frege-lang.org/doc/frege/data/Stream#scan1
scan1 ∷ (a → a → a) → Stream a → Stream a

-- | scan1' is a strict scan that has no starting value.  
@url http://www.frege-lang.org/doc/frege/data/Stream#scan1_tick
scan1' ∷ (a → a → a) → Stream a → Stream a

-- | transpose computes the transposition of a stream of streams.  
@url http://www.frege-lang.org/doc/frege/data/Stream#transpose
transpose ∷ Stream (Stream a) → Stream (Stream a)

-- | iterate f x function produces the infinite sequence of repeated applications of f to x. 
--   iterate f x = [x, f x, f (f x), ..] 
@url http://www.frege-lang.org/doc/frege/data/Stream#iterate
iterate ∷ (a → a) → a → Stream a

-- | repeat x returns a constant stream, where all elements are equal to x.  
@url http://www.frege-lang.org/doc/frege/data/Stream#repeat
repeat ∷ a → Stream a

-- | cycle xs returns the infinite repetition of xs: 
--   cycle [1,2,3] = Cons 1 (Cons 2 (Cons 3 (Cons 1 (Cons 2 ... 
@url http://www.frege-lang.org/doc/frege/data/Stream#cycle
cycle ∷ [a] → Stream a

-- | The unfold function is similar to the unfold for lists. Note there is no base case: all streams must be infinite. 
@url http://www.frege-lang.org/doc/frege/data/Stream#unfold
unfold ∷ (c → (a, c)) → c → Stream a

-- | The splitAt function takes an integer n and a stream xs and returns a pair consisting of the prefix of xs of length n and the remaining stream immediately following this prefix. 
--   Beware: passing a negative integer as the first argument will cause an error. 
@url http://www.frege-lang.org/doc/frege/data/Stream#splitAt
splitAt ∷ Int → Stream a → ([a], Stream a)

-- | takeWhile p xs returns the longest prefix of the stream xs for which the predicate p holds. 
@url http://www.frege-lang.org/doc/frege/data/Stream#takeWhile
takeWhile ∷ (a → Bool) → Stream a → [a]

-- | dropWhile p xs returns the suffix remaining after takeWhile p xs. 
--   Beware: this function may diverge if every element of xs satisfies p, e.g. dropWhile even (repeat 0) will loop. 
@url http://www.frege-lang.org/doc/frege/data/Stream#dropWhile
dropWhile ∷ (a → Bool) → Stream a → Stream a

-- | span p xs returns the longest prefix of xs that satisfies p, together with the remainder of the stream. 
@url http://www.frege-lang.org/doc/frege/data/Stream#span
span ∷ (a → Bool) → Stream a → ([a], Stream a)

-- | The break p function is equivalent to span (not <~ p).  
@url http://www.frege-lang.org/doc/frege/data/Stream#_break
break ∷ (a → Bool) → Stream a → ([a], Stream a)

-- | filter p xs removes any elements from xs that do not satisfy p. 
--   Beware: this function may diverge if there is no element of xs that satisfies p, e.g. filter odd (repeat 0) will loop. 
@url http://www.frege-lang.org/doc/frege/data/Stream#filter
filter ∷ (a → Bool) → Stream a → Stream a

-- | The partition function takes a predicate p and a stream xs, and returns a pair of streams. The first stream corresponds to the elements ofxs@ for which p holds; the second stream corresponds to the elements of xs for which p does not hold. 
--   Beware: One of the elements of the tuple may be undefined. For example, fst (partition even (repeat 0)) == repeat 0; on the other hand snd (partition even (repeat 0)) is undefined. 
@url http://www.frege-lang.org/doc/frege/data/Stream#partition
partition ∷ (a → Bool) → Stream a → (Stream a, Stream a)

-- | The group function takes a stream and returns a stream of lists such that flattening the resulting stream is equal to the argument. Moreover, each sublist in the resulting stream contains only equal elements. For example, 
--   group $ cycle "Mississippi" = "M" ::: "i" ::: "ss" ::: "i" ::: "ss" ::: "i" ::: "pp" ::: "i" ::: "M" ::: "i" ::: ... 
@url http://www.frege-lang.org/doc/frege/data/Stream#group
group ∷ Eq a ⇒ Stream a → Stream [a]

-- | The isPrefix function returns true if the first argument is a prefix of the second. 
@url http://www.frege-lang.org/doc/frege/data/Stream#isPrefixOf
isPrefixOf ∷ Eq a ⇒ [a] → Stream a → Bool

-- | xs !! n returns the element of the stream xs at index n. Note that the head of the stream has index 0. 
--   Beware: passing a negative integer as the first argument will cause an error. 
@url http://www.frege-lang.org/doc/frege/data/Stream#_excl_excl
(!!) ∷  Stream a → Int → a

-- | The elemIndex function returns the index of the first element in the given stream which is equal (by Eq.==) to the query element, 
--   Beware: elemIndex x xs will diverge if none of the elements of xs equal x. 
@url http://www.frege-lang.org/doc/frege/data/Stream#elemIndex
elemIndex ∷ Eq a ⇒ a → Stream a → Int

-- | The elemIndices function extends elemIndex, by returning the indices of all elements equal to the query element, in ascending order. 
--   Beware: elemIndices x xs will diverge if any suffix of xs does not contain x. 
@url http://www.frege-lang.org/doc/frege/data/Stream#elemIndices
elemIndices ∷ Eq a ⇒ a → Stream a → Stream Int

-- | The findIndex function takes a predicate and a stream and returns the index of the first element in the stream that satisfies the predicate, 
--   Beware: findIndex p xs will diverge if none of the elements of xs satisfy p. 
@url http://www.frege-lang.org/doc/frege/data/Stream#findIndex
findIndex ∷ (a → Bool) → Stream a → Int

-- | The findIndices function extends findIndex, by returning the indices of all elements satisfying the predicate, in ascending order. 
--   Beware: findIndices p xs will diverge if all the elements of any suffix of xs fails to satisfy p. 
@url http://www.frege-lang.org/doc/frege/data/Stream#findIndices
findIndices ∷ (a → Bool) → Stream a → Stream Int

-- | The zip function takes two streams and returns a list of corresponding pairs. 
@url http://www.frege-lang.org/doc/frege/data/Stream#zip
zip ∷ Stream a → Stream b → Stream (a, b)

-- | The zipWith function generalizes zip. Rather than tupling the functions, the elements are combined using the function passed as the first argument to zipWith. 
@url http://www.frege-lang.org/doc/frege/data/Stream#zipWith
zipWith ∷ (a → b → c) → Stream a → Stream b → Stream c

-- | The unzip function is the inverse of the zip function.  
@url http://www.frege-lang.org/doc/frege/data/Stream#unzip
unzip ∷ Stream (a, b) → (Stream a, Stream b)

-- | The words function breaks a stream of characters into a stream of words, which were delimited by white space. 
--   Beware: if the stream of characters xs does not contain white space, accessing the tail of words xs will loop. 
@url http://www.frege-lang.org/doc/frege/data/Stream#words
words ∷ Stream Char → Stream String

-- | The unwords function is an inverse operation to words. It joins words with separating spaces. 
@url http://www.frege-lang.org/doc/frege/data/Stream#unwords
unwords ∷ Stream String → Stream Char

-- | The lines function breaks a stream of characters into a list of strings at newline characters. The resulting strings do not contain newlines. 
--   Beware: if the stream of characters xs does not contain newline characters, accessing the tail of lines xs will loop. 
@url http://www.frege-lang.org/doc/frege/data/Stream#lines
lines ∷ Stream Char → Stream String

-- | The unlines function is an inverse operation to lines. It joins lines, after appending a terminating newline to each. 
@url http://www.frege-lang.org/doc/frege/data/Stream#unlines
unlines ∷ Stream String → Stream Char

-- | The fromList converts an infinite list to a stream. 
--   Beware: Passing a finite list, will cause an error. 
@url http://www.frege-lang.org/doc/frege/data/Stream#fromList
fromList ∷ [a] → Stream a

-- | Functors representing data structures that can be traversed from left to right. 
--   Minimal complete definition: Traversable.traverse or Traversable.sequenceA. 
--   The superclass instances should satisfy the following: 
--   In the Functor instance, Functor.fmap should be equivalent to traversal with the identity applicative functor (fmapDefault). 
--   In the Foldable instance, Foldable.foldMap should be equivalent to traversal with a constant applicative functor (foldMapDefault). 
--   Note that the functions Traversable.mapM, Traversable.sequence, forM are just specialized versions of Traversable.traverse, Traversable.sequenceA and for, and wouldn't be required in Frege. They are included for Haskell compatibility only. In Haskell the specialized functions are needed as Haskell monads are no Applicatives. 
--   Known Instances
--  ----------------
--  Maybe, Identity.Identity, [] 
--   Member Functions
--  ----------------
--  mapM ∷ (Traversable t, Monad m) ⇒ (a → m b) → t a → m (t b) 
--   Map each element of a structure to a monadic action, evaluate these actions from left to right, and collect the results. This function exists for Haskell compatibility only.  
--  sequence ∷ (Traversable t, Monad m) ⇒ t (m a) → m (t a) 
--   Evaluate each monadic action in the structure from left to right, and collect the results. This function exists for Haskell compatibility only.  
--  sequenceA ∷ (Traversable t, Applicative f) ⇒ t (f a) → f (t a) 
--   Evaluate each action in the structure from left to right, and collect the results.  
--  traverse ∷ (Traversable t, Applicative f) ⇒ (a → f b) → t a → f (t b) 
--   Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.   
@url http://www.frege-lang.org/doc/frege/data/Traversable#Traversable
class (Functor t, Foldable t) ⇒ Traversable t

-- | Map each element of a structure to a monadic action, evaluate these actions from left to right, and collect the results. This function exists for Haskell compatibility only. 
@url http://www.frege-lang.org/doc/frege/data/Traversable#Traversable.mapM
mapM ∷ (Traversable t, Monad m) ⇒ (a → m b) → t a → m (t b)

-- | Evaluate each monadic action in the structure from left to right, and collect the results. This function exists for Haskell compatibility only. 
@url http://www.frege-lang.org/doc/frege/data/Traversable#Traversable.sequence
sequence ∷ (Traversable t, Monad m) ⇒ t (m a) → m (t a)

-- | Evaluate each action in the structure from left to right, and collect the results. 
@url http://www.frege-lang.org/doc/frege/data/Traversable#Traversable.sequenceA
sequenceA ∷ (Traversable t, Applicative f) ⇒ t (f a) → f (t a)

-- | Map each element of a structure to an action, evaluate these actions from left to right, and collect the results. 
@url http://www.frege-lang.org/doc/frege/data/Traversable#Traversable.traverse
traverse ∷ (Traversable t, Applicative f) ⇒ (a → f b) → t a → f (t b)

-- |for is Traversable.traverse with its arguments flipped.  
@url http://www.frege-lang.org/doc/frege/data/Traversable#_for
for ∷ (Traversable t, Applicative f) ⇒ t a → (a → f b) → f (t b)

-- |forM is Traversable.mapM with its arguments flipped. 
--   This function exists for Haskell compatibility only.  
@url http://www.frege-lang.org/doc/frege/data/Traversable#forM
forM ∷ (Traversable t, Monad m) ⇒ t a → (a → m b) → m (t b)

-- | Constructors
--  ----------------
--  StateL {run ∷ s → (s, a)} 
--   Member Functions
--  ----------------
--  run ∷ StateL α β → α → (α, β) 
--   access field run   
@url http://www.frege-lang.org/doc/frege/data/Traversable#StateL
data StateL s a


@url http://www.frege-lang.org/doc/frege/data/Traversable#StateL.StateL
StateL {run ∷ s → (s, a)}

-- | The mapAccumL function behaves like a combination of Functor.fmap and Foldable.fold; it applies a function to each element of a structure, passing an accumulating parameter from left to right, and returning a final value of this accumulator together with the new structure. 
@url http://www.frege-lang.org/doc/frege/data/Traversable#mapAccumL
mapAccumL ∷ Traversable t ⇒ (a → b → (a, c)) → a → t b → (a, t c)

-- | Constructors
--  ----------------
--  StateR {run ∷ s → (s, a)} 
--   Member Functions
--  ----------------
--  run ∷ StateR α β → α → (α, β) 
--   access field run   
@url http://www.frege-lang.org/doc/frege/data/Traversable#StateR
data StateR s a


@url http://www.frege-lang.org/doc/frege/data/Traversable#StateR.StateR
StateR {run ∷ s → (s, a)}

-- | The mapAccumR function behaves like a combination of Functor.fmap and Foldable.foldr; it applies a function to each element of a structure, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new structure. 
@url http://www.frege-lang.org/doc/frege/data/Traversable#mapAccumR
mapAccumR ∷ Traversable t ⇒ (a → b → (a, c)) → a → t b → (a, t c)

-- | This function may be used as a value for `fmap` in a `Functor` instance, provided that Traversable.traverse is defined. (Using fmapDefault with a Traversable instance defined only by Traversable.sequenceA will result in infinite recursion.) 
@url http://www.frege-lang.org/doc/frege/data/Traversable#fmapDefault
fmapDefault ∷ Traversable t ⇒ (a → b) → t a → t b

-- | This function may be used as a value for `Data.Foldable.foldMap` in a `Foldable` instance. 
@url http://www.frege-lang.org/doc/frege/data/Traversable#foldMapDefault
foldMapDefault ∷ (Traversable t, Monoid m) ⇒ (a → m) → t a → m

-- | Multi-way trees, also known as rose trees.  
--   Constructors
--  ----------------
--  Node {rootLabel ∷ a, subForest ∷ Forest a} 
--   Member Functions
--  ----------------
--  rootLabel ∷ Tree α → α 
--   access field rootLabel  
--  subForest ∷ Tree α → Forest α 
--   label value zero or more child trees    
@url http://www.frege-lang.org/doc/frege/data/Tree#Tree
data Tree a


@url http://www.frege-lang.org/doc/frege/data/Tree#Tree.Node
Node {rootLabel ∷ a, subForest ∷ Forest a}


@url http://www.frege-lang.org/doc/frege/data/Tree#Forest
type Forest a = [Tree a]

-- | Neat 2-dimensional drawing of a tree.  
@url http://www.frege-lang.org/doc/frege/data/Tree#drawTree
drawTree ∷ Tree String → String

-- | Neat 2-dimensional drawing of a forest.  
@url http://www.frege-lang.org/doc/frege/data/Tree#drawForest
drawForest ∷ Forest String → String


@url http://www.frege-lang.org/doc/frege/data/Tree#draw
draw ∷ Tree String → [String]

-- | The elements of a tree in pre-order.  
@url http://www.frege-lang.org/doc/frege/data/Tree#flatten
flatten ∷ Tree a → [a]

-- | Lists of nodes at each level of the tree.  
@url http://www.frege-lang.org/doc/frege/data/Tree#levels
levels ∷ Tree a → [[a]]

-- | Build a tree from a seed value  
@url http://www.frege-lang.org/doc/frege/data/Tree#unfoldTree
unfoldTree ∷ (b → (a, [b])) → b → Tree a

-- | Build a forest from a list of seed values  
@url http://www.frege-lang.org/doc/frege/data/Tree#unfoldForest
unfoldForest ∷ (b → (a, [b])) → [b] → Forest a

-- | Monadic tree builder, in depth-first order  
@url http://www.frege-lang.org/doc/frege/data/Tree#unfoldTreeM
unfoldTreeM ∷ Monad m ⇒ (b → m (a, [b])) → b → m (Tree a)

-- | Monadic forest builder, in depth-first order  
@url http://www.frege-lang.org/doc/frege/data/Tree#unfoldForestM
unfoldForestM ∷ Monad m ⇒ (b → m (a, [b])) → [b] → m (Forest a)

-- |O(1) Create a singleton map  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#singleton
singleton ∷ Ord k ⇒ k → v → TreeMap k v

-- |O(n) Compute the size of the map  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#size
size ∷ TreeMap k v → Int

-- |O(log n) 
--   insert k v map 
--   returns a TreeMap where k is associated with v such that 
--   lookup k (insert k v map) = Just v 
--   If k was already associated with some value in map, then v will get evaluated to WHNF, otherwise it is left alone. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#insert
insert ∷ Ord α ⇒ α → β → TreeMap α β → TreeMap α β

-- |O(log n) 
--   insertWith f k v m 
--   If m does not contain k, this works like insert. Otherwise, the existing association of k with some value v' is replaced by an association of k with the result of evaluating 
--   f v v' 
--   in the resulting map. 
--   Strict evaluation is necessary to prevent building up of large thunks of the form 
--   f v3 (f v2 (f v1 v0)) 
--   Note that 
--   insert = insertWith const 
--   and that this will evaluate the new value in case of an update. If you want to prevent this, use 
--   replace k v = insert k v . delete k 
--   The replaced value will be evaluated only if the given function is strict in the second argument. Since const is lazy in the second argument, the following will be fine: 
--   insert "foo" 7 (insert "foo" undefined (delete "foo" m)) 
--   That is, the value that is inserted for a given key first is not evaluated on insertion, and only evaluated on update if the update function demands it, which is not the case for a plain insert. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#insertWith
insertWith ∷ Ord α ⇒ (β→β→β) → α → β → TreeMap α β → TreeMap α β

-- |O(log n) 
--   delete k tm 
--   is a HashMap m such that 
--   lookup k m = Nothing 
--   and for any other key o 
--   lookup o m = lookup o tm 
--   Less formally, the association of k with some value, if any, is removed in the result, while all other associations are retained. 
--   If tm didn't contain k in the first place, 
--   delete k tm = tm 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#delete
delete ∷ Ord k ⇒ k → TreeMap k v → TreeMap k v

-- |O(log n) 
--   lookup k m 
--   If k is associated with some value v in map m, it returns 
--   Just v 
--   and otherwise 
--   Nothing 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#lookup
lookup ∷ Ord k ⇒ k → TreeMap k v → Maybe v

-- |O(log n) 
--   Find the minimum element in the tree. For empty trees, this is Maybe.Nothing.  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#findMin
findMin ∷ TreeMap k v → Maybe (k, v)

-- |O(log n) 
--   Find the maximum element in the tree. For empty trees, this is Maybe.Nothing.  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#findMax
findMax ∷ TreeMap k v → Maybe (k, v)

-- |O(log n) 
--   Checks whether the key is present in the map  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#member
member ∷ Ord a ⇒ a → TreeMap a b → Bool

-- |O(log n) 
--   Return the value to which the specified key is mapped, or the default value if this map contains no mapping for the key. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#lookupDefault
lookupDefault ∷ Ord b ⇒ a → b → TreeMap b a → a

-- |O(log n) 
--   Return the value associated with the given key in the map. Fails with error if the key is not present. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#_excl_excl
(!!) ∷  Ord k ⇒ TreeMap k v → k → v 
infixl  16

-- |O(log n) 
--   Adjust the value tied to a given key in this map only if it is present. Otherwise, leave the map alone. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#adjust
adjust ∷ Ord k ⇒ (v → v) → k → TreeMap k v → TreeMap k v

-- |O(log n) 
--   replace k v m = insert k v . delete k $ m 
--   Insert or update the association of k with v in m but avoid evaluation of v even if m already contains k. 
--   See also notes concerning updates on function insertWith. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#replace
replace ∷ Ord k ⇒ k → v → TreeMap k v → TreeMap k v

-- |O(m*log n) 
--   unionWith f left right 
--   Computes the union of two hash maps by inserting the elements of the left map into the right map. 
--   If a key occurs in both maps, the function f provided in the first argument will be applied to the value from the left map and the right map like so: 
--   f leftval rightval 
--   to compute the result that goes into the resulting map. 
--   This works in the same way as insertWith, that is, the value from the left hash map will be evaluated while the value from the right map may be evaluated only if the function demands it. However, values associated with keys that are member of only one map are left alone. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#unionWith
unionWith ∷ Ord k ⇒ (v → v → v) → TreeMap k v → TreeMap k v → TreeMap k v

-- |O(m*log n) 
--   Computes the union of two hash maps. 
--   If a key occurs in both maps, the value from the left map will be evaluated and taken over to the new map. 
--   Because 
--   union = unionWith const 
--   the considerations concerning strictness apply for union in the same way as for unionWith. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#union
union ∷ Ord k ⇒ TreeMap k v → TreeMap k v → TreeMap k v

-- | The union of all TreeMaps in a list. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#unions
unions ∷ Ord k ⇒ [TreeMap k v] → TreeMap k v

-- |O(n) 
--   foldValues f a map 
--   applies the operation f to the values in the map in no particular order. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#foldValues
foldValues ∷ (a → v → a) → a → TreeMap k v → a

-- |O(n) 
--   foldWithKey f a map 
--   applies the operation f to the keys and values in the map using the left identity a as starting value from the left in ascending key order. 
--   f (f (f a k0 v0) k1 v1) kn vn 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#foldWithKey
foldWithKey ∷ (a → c → b → a) → a → TreeMap c b → a

-- |O(n) 
--   foldrValues f a map 
--   applies the operation f to the values in the map in no particular order. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#foldrValues
foldrValues ∷ (v → a → a) → a → TreeMap k v → a

-- |O(n) 
--   foldrWithKey f a map 
--   applies the operation f to the keys and values in the map using the right identity a as starting value from the right in descending key order: 
--   f k0 v0 (f k1 v1 (f kn vn a)) 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#foldrWithKey
foldrWithKey ∷ (c → b → a → a) → a → TreeMap c b → a

-- |O(n) 
--   Transform a map by applying a function to every value. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#mapValues
mapValues ∷ (v → u) → TreeMap k v → TreeMap k u

-- |O(n) 
--   Transform a map by applying a function to every key and its associated value. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#mapWithKey
mapWithKey ∷ (k → v → u) → TreeMap k v → TreeMap k u

-- |O(n) 
--   Transform a map by applying an applicative functor to every key and its associated value. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#traverseWithKey
traverseWithKey ∷ Applicative a ⇒ (k → v → a u) → TreeMap k v → a (TreeMap k u)

-- |O(n) 
--   Filter a map, retaining only mappings whose key and value satisfy a given predicate. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#filterWithKey
filterWithKey ∷ Ord k ⇒ (k → v → Bool) → TreeMap k v → TreeMap k v

-- |O(n) 
--   Filter a map, retaining only mappings whose value satisfies a given predicate. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#filterValues
filterValues ∷ Ord k ⇒ (v → Bool) → TreeMap k v → TreeMap k v

-- |O(n*log m) 
--   Computes the difference of two maps. 
--   Returns a map that contains the mappings of the first map whose keys do not exist in the second. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#difference
difference ∷ Ord k ⇒ TreeMap k v → TreeMap k u → TreeMap k v

-- |O(n*log m) 
--   Computes the intersection of two maps. 
--   Return a map that contains the mappings of the first map for keys that also exist in the second. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#intersection
intersection ∷ Ord k ⇒ TreeMap k v → TreeMap k u → TreeMap k v

-- |O(n*log m) 
--   Computes the intersection of two maps, combining the values with a given function. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#intersectionWith
intersectionWith ∷ Ord k ⇒ (v → u → w) → TreeMap k v → TreeMap k u → TreeMap k w

-- |O(n) 
--   Build a map from an association list. If the list contains duplicate mappings, the later mappings take precedence. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#fromList
fromList ∷ Ord a ⇒ [(a, b)] → TreeMap a b

-- |O(n) 
--   Build a map from an association list. Uses the provided function to merge values associated with duplicate keys. 
@url http://www.frege-lang.org/doc/frege/data/TreeMap#fromListWith
fromListWith ∷ Ord k ⇒ (v → v → v) → [(k, v)] → TreeMap k v

-- | produces a list of the values in the map, in no particular order.  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#values
values ∷ TreeMap a b → [b]

-- | produces the key/value pairs of a map sorted by key  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#each
each ∷ TreeMap a b → [(a, b)]

-- | produces the keys of the map in ascending order  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#keys
keys ∷ TreeMap a b → [a]

-- | Constructors
--  ----------------
--  protected Leaf {key ∷ k, value ∷ v} 
--   short for Node 1 Nil Nil k v   
--  protected Nil 
--   the empty tree   
--  protected Node {höhe ∷ Int, left ∷ TreeMap k v, right ∷ TreeMap k v, key ∷ k, value ∷ v} 
--   Member Functions
--  ----------------
--  balance ∷ TreeMap α β → Int 
--  delete ∷ Ord β ⇒ TreeMap β α → β → TreeMap β α 
--  O(log n) 
--   tm.delete k 
--   Variant of delete that is better suited for left folds and supports dot-notation   
--  drotlr ∷ TreeMap β α → TreeMap β α 
--  drotrl ∷ TreeMap α β → TreeMap α β 
--  filterKV ∷ Ord k ⇒ (k → v → Bool) → TreeMap k v → TreeMap k v 
--  foldL ∷ Ordering → (c → a → b → c) → c → TreeMap a b → c 
--   foldL o f a map 
--   Fold a tree by applying an operation to an accumulator and key and value of every node, whereby the nodes are visited in a certain order specified by the first argument. Let the tree be 
--   root / \ / \ left right 
--   then the result is: Eq the operation is first applied to the root node, and the result is passed to the left subtree, and the result of that is passed to the fold of the right subtree. Also known as "preorder" traversal. Lt the operation is applied to the result of the fold done with the left sub-tree and the root node, and the result of that is passed to the fold of the right subtree. Also known as "inorder" traversal. This causes the operation to get applied to the key/value pairs in ascending key order. Gt like with Lt, but the subtrees are processed in reverse order, which results in application of the operation to the key/value pairs in descending order.  
--  foldR ∷ Ordering → (a → b → c → c) → c → TreeMap a b → c 
--   foldR o f a map 
--   Like TreeMap.foldL, but the function is right associative. 
--   The following yields the key of map in ascending order: 
--   foldR Gt (\k\v\a → k:a) [] map   
--  height ∷ TreeMap β α → Int 
--  höhe ∷ TreeMap β α → Int 
--   access field höhe  
--  index ∷ Ord β ⇒ TreeMap β α → β → α 
--  insert ∷ Ord a ⇒ TreeMap a b → a → b → TreeMap a b 
--  O(log n) 
--   tm.insert k v 
--   Variant of insert that is better suited for left folds and supports dot-notation.   
--  insertI ∷ TreeMap Int value → Int → value → TreeMap Int value 
--   version of insert that is optimized for Int keys   
--  insertList ∷ Ord a ⇒ TreeMap a b → [(a, b)] → TreeMap a b 
--  insertS ∷ TreeMap String value → String → value → TreeMap String value 
--  insertWork ∷ Ord α ⇒ (β→β→β) → TreeMap α β → α → β → TreeMap α β 
--   do the dirty work for insert operations   
--  insertkvI ∷ Int → α → TreeMap Int α → TreeMap Int α 
--  insertkvS ∷ String → α → TreeMap String α → TreeMap String α 
--  key ∷ TreeMap β α → β 
--   access field key  
--  left ∷ TreeMap β α → TreeMap β α 
--   access field left  
--  leftmost ∷ TreeMap β α → TreeMap β α 
--  lookup ∷ Ord α ⇒ TreeMap α β → α → Maybe β 
--  lookupI ∷ TreeMap Int value → Int → Maybe value 
--   version of lookup that is optimised for Int keys   
--  lookupS ∷ TreeMap String value → String → Maybe value 
--   version of lookup that is optimised for String keys   
--  mapKV ∷ (γ→β→α) → TreeMap γ β → TreeMap γ α 
--  mapV ∷ (α→β) → TreeMap γ α → TreeMap γ β 
--  rebalance ∷ TreeMap α β → TreeMap α β 
--  right ∷ TreeMap β α → TreeMap β α 
--   access field right  
--  rightmost ∷ TreeMap β α → TreeMap β α 
--  rotleft ∷ TreeMap β α → TreeMap β α 
--  rotright ∷ TreeMap α β → TreeMap α β 
--  traverseKV ∷ Applicative γ ⇒ (δ→α→γ β) → TreeMap δ α → γ (TreeMap δ β) 
--  updatekvI ∷ Int → α → TreeMap Int α → TreeMap Int α 
--  updatekvS ∷ String → α → TreeMap String α → TreeMap String α 
--  value ∷ TreeMap β α → α 
--   access field value   
@url http://www.frege-lang.org/doc/frege/data/TreeMap#TreeMap
data TreeMap k v

-- | short for Node 1 Nil Nil k v  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#TreeMap.Leaf
protected Leaf {key ∷ k, value ∷ v}

-- | the empty tree  
@url http://www.frege-lang.org/doc/frege/data/TreeMap#TreeMap.Nil
protected Nil


@url http://www.frege-lang.org/doc/frege/data/TreeMap#TreeMap.Node
protected Node {höhe ∷ Int, left ∷ TreeMap k v, right ∷ TreeMap k v, key ∷ k, value ∷ v}


@url http://www.frege-lang.org/doc/frege/data/TreeMap#TreeSet
type TreeSet a = TreeMap a ()


@url http://www.frege-lang.org/doc/frege/data/TreeMap#including
including ∷ Ord α ⇒ TreeSet α → α → TreeSet α


@url http://www.frege-lang.org/doc/frege/data/TreeMap#contains
contains ∷ Ord α ⇒ TreeMap α β → α → Bool


@url http://www.frege-lang.org/doc/frege/data/TreeMap#fromKeys
fromKeys ∷ Ord α ⇒ [α] → TreeSet α

-- |Monoid for Bool with operation oder and identity false 
--   Constructors
--  ----------------
--  Any {unwrap ∷ Bool} 
--   wrap a Bool value    
--   Member Functions
--  ----------------
--  unwrap ∷ Any → Bool 
--   access field unwrap   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Boolean#Any
data Any

-- | wrap a Bool value  
@url http://www.frege-lang.org/doc/frege/data/wrapper/Boolean#Any.Any
Any {unwrap ∷ Bool}

-- | Alias for Any.unwrap 
@url http://www.frege-lang.org/doc/frege/data/wrapper/Boolean#getAny
getAny ∷ Any → Bool

-- |Monoid for Bool with operation und and identity true 
--   Constructors
--  ----------------
--  All {unwrap ∷ Bool} 
--   wrap a Bool value    
--   Member Functions
--  ----------------
--  unwrap ∷ All → Bool 
--   access field unwrap   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Boolean#All
data All

-- | wrap a Bool value  
@url http://www.frege-lang.org/doc/frege/data/wrapper/Boolean#All.All
All {unwrap ∷ Bool}

-- | Alias for All.unwrap 
@url http://www.frege-lang.org/doc/frege/data/wrapper/Boolean#getAll
getAll ∷ All → Bool

-- | Constructors
--  ----------------
--  Const {get ∷ a} 
--   Member Functions
--  ----------------
--  get ∷ Const β α → β 
--   access field get   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Const#Const
data Const a b


@url http://www.frege-lang.org/doc/frege/data/wrapper/Const#Const.Const
Const {get ∷ a}

-- | Provides a Monoid where Semigroup.mappend appears flipped.  
--   Constructors
--  ----------------
--  Dual {unwrap ∷ a} 
--   wrap a value to give a Dual    
--   Member Functions
--  ----------------
--  unwrap ∷ Dual α → α 
--   access field unwrap   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Dual#Dual
data Dual a

-- | wrap a value to give a Dual  
@url http://www.frege-lang.org/doc/frege/data/wrapper/Dual#Dual.Dual
Dual {unwrap ∷ a}

-- | Alias for Dual.unwrap 
@url http://www.frege-lang.org/doc/frege/data/wrapper/Dual#getDual
getDual ∷ Dual α → α

-- | The monoid of endomorphisms under composition.  
--   Constructors
--  ----------------
--  Endo {unwrap ∷ a → a} 
--   Member Functions
--  ----------------
--  unwrap ∷ Endo α → α → α 
--   access field unwrap   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Endo#Endo
data Endo a


@url http://www.frege-lang.org/doc/frege/data/wrapper/Endo#Endo.Endo
Endo {unwrap ∷ a → a}

-- | Alias for Endo.unwrap 
@url http://www.frege-lang.org/doc/frege/data/wrapper/Endo#appEndo
appEndo ∷ Endo α → α → α

-- | The identity functor and monad. 
--   This trivial type constructor serves two purposes: It can be used with functions parameterized by a Functor or Monad. It can be used as a base monad to which a series of monad transformers may be applied to construct a composite monad. Most monad transformer modules include the special case of applying the transformer to Identity. For example, State s is an abbreviation for StateT s Identity. 
--   Identity functor and monad.  
--   Constructors
--  ----------------
--  Identity {run ∷ a} 
--   Member Functions
--  ----------------
--  run ∷ Identity α → α 
--   access field run   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Identity#Identity
data Identity a


@url http://www.frege-lang.org/doc/frege/data/wrapper/Identity#Identity.Identity
Identity {run ∷ a}

-- |Monoid wrapper for numbers with operation Num.* and identity 1 
--   Constructors
--  ----------------
--  Product {unwrap ∷ a} 
--   wrap a number    
--   Member Functions
--  ----------------
--  unwrap ∷ Product α → α 
--   access field unwrap   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Num#Product
data Product a

-- | wrap a number  
@url http://www.frege-lang.org/doc/frege/data/wrapper/Num#Product.Product
Product {unwrap ∷ a}

-- | Alias for Product.unwrap 
@url http://www.frege-lang.org/doc/frege/data/wrapper/Num#getProduct
getProduct ∷ Product α → α

-- |Monoid wrapper for numbers with operation Num.+ and identity 0 
--   Constructors
--  ----------------
--  Sum {unwrap ∷ a} 
--   wrap a number    
--   Member Functions
--  ----------------
--  unwrap ∷ Sum α → α 
--   access field unwrap   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Num#Sum
data Sum a

-- | wrap a number  
@url http://www.frege-lang.org/doc/frege/data/wrapper/Num#Sum.Sum
Sum {unwrap ∷ a}

-- | Alias for Sum.unwrap 
@url http://www.frege-lang.org/doc/frege/data/wrapper/Num#getSum
getSum ∷ Sum α → α

-- | Constructors
--  ----------------
--  Min {unwrap ∷ a} 
--   Member Functions
--  ----------------
--  unwrap ∷ Min α → α 
--   access field unwrap   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Ord#Min
data Min a


@url http://www.frege-lang.org/doc/frege/data/wrapper/Ord#Min.Min
Min {unwrap ∷ a}

-- | Alias for Min.unwrap 
@url http://www.frege-lang.org/doc/frege/data/wrapper/Ord#getMin
getMin ∷ Min α → α

-- | Constructors
--  ----------------
--  Max {unwrap ∷ a} 
--   Member Functions
--  ----------------
--  unwrap ∷ Max α → α 
--   access field unwrap   
@url http://www.frege-lang.org/doc/frege/data/wrapper/Ord#Max
data Max a


@url http://www.frege-lang.org/doc/frege/data/wrapper/Ord#Max.Max
Max {unwrap ∷ a}

-- | Alias for Max.unwrap 
@url http://www.frege-lang.org/doc/frege/data/wrapper/Ord#getMax
getMax ∷ Max α → α

-- | Constructors
--  ----------------
--  ZipList {get ∷ [a]} 
--   Member Functions
--  ----------------
--  get ∷ ZipList α → [α] 
--   access field get   
@url http://www.frege-lang.org/doc/frege/data/wrapper/ZipList#ZipList
data ZipList a


@url http://www.frege-lang.org/doc/frege/data/wrapper/ZipList#ZipList.ZipList
ZipList {get ∷ [a]}

-- | initialize the root of the package tree  
@url http://www.frege-lang.org/doc/frege/ide/Utilities#initRoot
initRoot ∷ String → IO (Y RTree)

-- | add a new module  
@url http://www.frege-lang.org/doc/frege/ide/Utilities#justCompiled
justCompiled ∷ Global → Y RTree → IO (Y RTree)

-- | Remove this package from the package cache  
@url http://www.frege-lang.org/doc/frege/ide/Utilities#updateCache
updateCache ∷ Monad γ ⇒ β → α → γ ()

-- | Force the import to re-create packages next time  
@url http://www.frege-lang.org/doc/frege/ide/Utilities#refreshPackages
refreshPackages ∷ StIO ()

-- | Make a new loader for operation in the IDE. The rationale is that not making a new loader for every character typed will save time and space. 
--   The IDE code must decide when to make a new loader. For instance, this could be appropriate when the editor is re-activated, because in the meantime other modules could have been rebuild. 
@url http://www.frege-lang.org/doc/frege/ide/Utilities#newLoader
newLoader ∷ StIO ()

-- | add magic package names  
@url http://www.frege-lang.org/doc/frege/ide/Utilities#magicPNs
magicPNs ∷ [([String], α)] → [([String], α)]

-- | create a Token list from an JArray backwards  
@url http://www.frege-lang.org/doc/frege/ide/Utilities#backwards
backwards ∷ JArray Token → Int → [Token]

-- | This resembles the SourceProposal class. The additional information must be lazy! 
--   Constructors
--  ----------------
--  Proposal {proposal ∷ String, newText ∷ String, prefix ∷ String, off ∷ Int, len ∷ Int, cursor ∷ Int, additional ∷ IO String} 
--   Member Functions
--  ----------------
--  additional ∷ Proposal → IO String 
--   Additional information displayed in the pop-up view to the right of the main proposal list view when this proposal is selected.   
--  cursor ∷ Proposal → Int 
--   The offset at which the insertion point should be placed after completing using this proposal, relative to the end of the inserted text.   
--  len ∷ Proposal → Int 
--   The range of text being replaced.   
--  newText ∷ Proposal → String 
--   The new text being added/substituted if the user accepts this proposal   
--  off ∷ Proposal → Int 
--   The range of text being replaced.   
--  prefix ∷ Proposal → String 
--   The prefix being completed.   
--  proposal ∷ Proposal → String 
--   The text shown to the user in the popup view    
@url http://www.frege-lang.org/doc/frege/ide/Utilities#Proposal
data Proposal


@url http://www.frege-lang.org/doc/frege/ide/Utilities#Proposal.Proposal
Proposal {proposal ∷ String, newText ∷ String, prefix ∷ String, off ∷ Int, len ∷ Int, cursor ∷ Int, additional ∷ IO String}

-- | Called by Eclipse Content Proposer to make proposals. 
--   Usage: proposeContent global offset tokens index  
--   global 
--  a symbol table, preferably with type information  
--   offset 
--  position of the caret  
--   tokens 
--  array of tokens  
--   index 
--  index into the array, points to the token that starts before the caret   
@url http://www.frege-lang.org/doc/frege/ide/Utilities#proposeContent
proposeContent ∷ Global → Y RTree → Int → JArray Token → Int → [Proposal]

-- | Create a list of triples with position, namespace and package for every import except the automatic ones. 
@url http://www.frege-lang.org/doc/frege/ide/Utilities#imports
imports ∷ Global → [(Position, String, String)]

-- | Create the list of symbols ordered by position 
@url http://www.frege-lang.org/doc/frege/ide/Utilities#symbols
symbols ∷ Symtab → [Symbol]


@url http://www.frege-lang.org/doc/frege/ide/Utilities#exprSymbols
exprSymbols ∷ ExprT → StG [Symbol]


@url http://www.frege-lang.org/doc/frege/ide/Utilities#verbose
verbose ∷ (Nice α, QNameMatcher.QNameMatcher α) ⇒ Global → SigmaT α → String

-- | Make a label for a symbol 
@url http://www.frege-lang.org/doc/frege/ide/Utilities#label
label ∷ Global → SymbolT a → String

-- | Increment the pass number in the state 
@url http://www.frege-lang.org/doc/frege/ide/Utilities#passDone
passDone ∷ StG ()

-- | Failure tolerant version of Global.thisTab for use in TreeModelBuilder. In case of syntax errors, there is no symtab yet, hence Global.thisTab is undefined. This, in turn, causes an exception in Eclipse. We can avoid this by just pretending the symbol table was empty. 
@url http://www.frege-lang.org/doc/frege/ide/Utilities#thisTab
thisTab ∷ Global → Symtab


@url http://www.frege-lang.org/doc/frege/ide/Utilities#htmlDocumentation
htmlDocumentation ∷ String → StIO String


@url http://www.frege-lang.org/doc/frege/ide/Utilities#htmlify
htmlify ∷ Global → String → IO String


@url http://www.frege-lang.org/doc/frege/ide/Utilities#packDocumentation
packDocumentation ∷ String → StIO String


@url http://www.frege-lang.org/doc/frege/ide/Utilities#symbolDocumentation
symbolDocumentation ∷ Symbol → StIO String


@url http://www.frege-lang.org/doc/frege/ide/Utilities#documentationDocumentation
documentationDocumentation ∷ String → StIO String

-- | This is called from the fregIDE documentation provider when the reference resolver didn't find anything. 
--   This indicates the mouse was not hovering over some identifier. 
@url http://www.frege-lang.org/doc/frege/ide/Utilities#tokenDocumentation
tokenDocumentation ∷ Token → StIO String

-- | find all operators in the current symbol table and tabulate their fixities  
@url http://www.frege-lang.org/doc/frege/ide/Utilities#infixDoc
infixDoc ∷ Global → String

-- | Correct the result of frege.compiler.Scanner.dependencies, which returns a singleton list with one element "frege.prelude.PreludeBase" for source files that don't have any import clauses. Yet, unless this is a prelude package itself, "frege.Prelude" will be imported. 
--   This discrepancy leads to files not compiling in the FregIDE builder because they are queued before "frege/Prelude.fr" 
@url http://www.frege-lang.org/doc/frege/ide/Utilities#correctDependenciesFor
correctDependenciesFor ∷ [String] → String → [String]

-- | Get all the dependencies from a source text 
--   This will be done on a fresh Global  
@url http://www.frege-lang.org/doc/frege/ide/Utilities#getDependencies
getDependencies ∷ CharSequence → StG [String]

-- | lexical analysis from the IDE does not read files, but takes the content directly  
@url http://www.frege-lang.org/doc/frege/ide/Utilities#lexPassIDE
lexPassIDE ∷ CharSequence → StIO (String, Int)

-- | a bare java.awt.Component  
--   Member Functions
--  ----------------
--  setEnabled ∷ Component → Bool → IO () 
--  native setEnabled 
--  setVisible ∷ Component → Bool → IO () 
--  native setVisible 

@url http://www.frege-lang.org/doc/frege/java/Awt#Component
data Component 


@url http://www.frege-lang.org/doc/frege/java/Awt#Component.setEnabled
setEnabled ∷ Component → Bool → IO () 
native setEnabled


@url http://www.frege-lang.org/doc/frege/java/Awt#Component.setVisible
setVisible ∷ Component → Bool → IO () 
native setVisible

-- | a bare java.awt.Container  
--   Member Functions
--  ----------------
--  add ∷ Container → Component → IO Component 
--  native add 
--  setLayout ∷ Container → LayoutManager → IO () 
--  native setLayout 

@url http://www.frege-lang.org/doc/frege/java/Awt#Container
data Container 


@url http://www.frege-lang.org/doc/frege/java/Awt#Container.add
add ∷ Container → Component → IO Component 
native add


@url http://www.frege-lang.org/doc/frege/java/Awt#Container.setLayout
setLayout ∷ Container → LayoutManager → IO () 
native setLayout


@url http://www.frege-lang.org/doc/frege/java/Awt#LayoutManager
data LayoutManager 

-- | some java.awt.Window  
--   Member Functions
--  ----------------
--  pack ∷ Window → IO () 
--  native pack 

@url http://www.frege-lang.org/doc/frege/java/Awt#Window
data Window 


@url http://www.frege-lang.org/doc/frege/java/Awt#Window.pack
pack ∷ Window → IO () 
native pack

-- | an object with compile time type java.awt.AWTEvent  
@url http://www.frege-lang.org/doc/frege/java/Awt#AWTEvent
data AWTEvent 

-- | an object with compile time type java.awt.event.ActionEvent  
--   Member Functions
--  ----------------
--  alt_mask ∷ Int 
--  pure native java.awt.event.ActionEvent.ALT_MASK 
--  ctrl_mask ∷ Int 
--  pure native java.awt.event.ActionEvent.CTRL_MASK 
--  getActionCommand ∷ ActionEvent → IO String 
--  native getActionCommand 
--  getModifiers ∷ ActionEvent → IO Int 
--  native getModifiers 
--  meta_mask ∷ Int 
--  pure native java.awt.event.ActionEvent.META_MASK 
--  shift_mask ∷ Int 
--  pure native java.awt.event.ActionEvent.SHIFT_MASK 

@url http://www.frege-lang.org/doc/frege/java/Awt#ActionEvent
data ActionEvent 


@url http://www.frege-lang.org/doc/frege/java/Awt#ActionEvent.alt_mask
alt_mask ∷ Int 
pure native java.awt.event.ActionEvent.ALT_MASK


@url http://www.frege-lang.org/doc/frege/java/Awt#ActionEvent.ctrl_mask
ctrl_mask ∷ Int 
pure native java.awt.event.ActionEvent.CTRL_MASK


@url http://www.frege-lang.org/doc/frege/java/Awt#ActionEvent.getActionCommand
getActionCommand ∷ ActionEvent → IO String 
native getActionCommand


@url http://www.frege-lang.org/doc/frege/java/Awt#ActionEvent.getModifiers
getModifiers ∷ ActionEvent → IO Int 
native getModifiers


@url http://www.frege-lang.org/doc/frege/java/Awt#ActionEvent.meta_mask
meta_mask ∷ Int 
pure native java.awt.event.ActionEvent.META_MASK


@url http://www.frege-lang.org/doc/frege/java/Awt#ActionEvent.shift_mask
shift_mask ∷ Int 
pure native java.awt.event.ActionEvent.SHIFT_MASK

-- | an object with compile time type java.awt.event.ActionListener  
--   Member Functions
--  ----------------
--  actionPerformed ∷ ActionListener → ActionEvent → IO () 
--  native actionPerformed 
--  new ∷ (ActionEvent → IO ()) → IO ActionListener 
--  native frege.runtime.SwingSupport.actionListener 
--   make an action listener from a function    
@url http://www.frege-lang.org/doc/frege/java/Awt#ActionListener
data ActionListener 


@url http://www.frege-lang.org/doc/frege/java/Awt#ActionListener.actionPerformed
actionPerformed ∷ ActionListener → ActionEvent → IO () 
native actionPerformed

-- | make an action listener from a function  
@url http://www.frege-lang.org/doc/frege/java/Awt#ActionListener._new
new ∷ (ActionEvent → IO ()) → IO ActionListener 
native frege.runtime.SwingSupport.actionListener

-- | Member Functions
--  ----------------
--  setTitle ∷ Frame → String → IO () 
--  native setTitle 

@url http://www.frege-lang.org/doc/frege/java/Awt#Frame
data Frame 


@url http://www.frege-lang.org/doc/frege/java/Awt#Frame.setTitle
setTitle ∷ Frame → String → IO () 
native setTitle


@url http://www.frege-lang.org/doc/frege/java/IO#FileNotFoundException
data FileNotFoundException 


@url http://www.frege-lang.org/doc/frege/java/IO#UnsupportedEncodingException
data UnsupportedEncodingException 

-- | Member Functions
--  ----------------
--  new ∷ String → EOFException 
--  pure native new 

@url http://www.frege-lang.org/doc/frege/java/IO#EOFException
data EOFException 


@url http://www.frege-lang.org/doc/frege/java/IO#EOFException._new
new ∷ String → EOFException 
pure native new

-- | frege equivalent of java.io.OutputStream  
@url http://www.frege-lang.org/doc/frege/java/IO#OutputStream
data OutputStream 

-- | frege equivalent of java.io.FileOutputStream  
--   Member Functions
--  ----------------
--  new ∷ MutableIO File → IO FileOutputStream 
--           throws FileNotFoundException 
--       | MutableIO File → Bool → IO FileOutputStream 
--           throws FileNotFoundException 
--       | String → IO FileOutputStream 
--           throws FileNotFoundException 
--       | String → Bool → IO FileOutputStream 
--           throws FileNotFoundException 
--  native new 
--   FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning   
--  newα ∷ MutableIO File → IO FileOutputStream 
--  native new  throws FileNotFoundException  overloads new 
--   FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning   
--  newβ ∷ MutableIO File → Bool → IO FileOutputStream 
--  native new  throws FileNotFoundException  overloads new 
--   FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning   
--  newγ ∷ String → IO FileOutputStream 
--  native new  throws FileNotFoundException  overloads new 
--   FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning   
--  newδ ∷ String → Bool → IO FileOutputStream 
--  native new  throws FileNotFoundException  overloads new 
--   FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning   
--  write ∷ FileOutputStream → Int → IO () 
--  native write  throws IOException 
--   Writes the specified byte to this file output stream.    
@url http://www.frege-lang.org/doc/frege/java/IO#FileOutputStream
data FileOutputStream 

-- | FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning  
@url http://www.frege-lang.org/doc/frege/java/IO#FileOutputStream._new
new ∷ MutableIO File → IO FileOutputStream 
         throws FileNotFoundException 
     | MutableIO File → Bool → IO FileOutputStream 
         throws FileNotFoundException 
     | String → IO FileOutputStream 
         throws FileNotFoundException 
     | String → Bool → IO FileOutputStream 
         throws FileNotFoundException 
native new

-- | FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning  
@url http://www.frege-lang.org/doc/frege/java/IO#FileOutputStream.newα
newα ∷ MutableIO File → IO FileOutputStream 
native new  throws FileNotFoundException  overloads new

-- | FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning  
@url http://www.frege-lang.org/doc/frege/java/IO#FileOutputStream.newβ
newβ ∷ MutableIO File → Bool → IO FileOutputStream 
native new  throws FileNotFoundException  overloads new

-- | FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning  
@url http://www.frege-lang.org/doc/frege/java/IO#FileOutputStream.newγ
newγ ∷ String → IO FileOutputStream 
native new  throws FileNotFoundException  overloads new

-- | FileOutputStream.new file true 
--   writes to the end of a file rather than the beginning  
@url http://www.frege-lang.org/doc/frege/java/IO#FileOutputStream.newδ
newδ ∷ String → Bool → IO FileOutputStream 
native new  throws FileNotFoundException  overloads new

-- | Writes the specified byte to this file output stream.  
@url http://www.frege-lang.org/doc/frege/java/IO#FileOutputStream.write
write ∷ FileOutputStream → Int → IO () 
native write  throws IOException

-- | frege equivalent of java.io.Closeable  
--   Member Functions
--  ----------------
--  close ∷ Closeable → IO () 
--  native close  throws IOException 

@url http://www.frege-lang.org/doc/frege/java/IO#Closeable
data Closeable 


@url http://www.frege-lang.org/doc/frege/java/IO#Closeable.close
close ∷ Closeable → IO () 
native close  throws IOException

-- | frege equivalent of java.io.Flushable  
--   Member Functions
--  ----------------
--  flush ∷ Flushable → IO () 
--  native flush  throws IOException 

@url http://www.frege-lang.org/doc/frege/java/IO#Flushable
data Flushable 


@url http://www.frege-lang.org/doc/frege/java/IO#Flushable.flush
flush ∷ Flushable → IO () 
native flush  throws IOException

-- | forward declaration of URI  
@url http://www.frege-lang.org/doc/frege/java/IO#URI
data URI 

-- | Member Functions
--  ----------------
--  canRead ∷ MutableIO File → IO Bool 
--  native canRead 
--  canWrite ∷ MutableIO File → IO Bool 
--  native canWrite 
--  createTempFile ∷ String → String → STMutable RealWorld File 
--  native java.io.File.createTempFile  throws IOException 
--   Create an empty file in the default temp directory. 
--   createTempFile "abc" ".suffix" 
--   The prefix must be at least 3 characters long!   
--  delete ∷ MutableIO File → IO Bool 
--  native delete 
--  exists ∷ MutableIO File → IO Bool 
--  native exists 
--  getName ∷ MutableIO File → IO String 
--  native getName 
--  getParentFile ∷ MutableIO File → IO (Maybe (MutableIO File)) 
--  native getParentFile 
--  getPath ∷ MutableIO File → IO String 
--  native getPath 
--   The (relative) path name. Not necessarily valid.   
--  getPathF ∷ File → String 
--  pure native getPath 
--  isAbsolute ∷ MutableIO File → IO Bool 
--  native isAbsolute 
--  isDirectory ∷ MutableIO File → IO Bool 
--  native isDirectory 
--  isFile ∷ MutableIO File → IO Bool 
--  native isFile 
--  lastModified ∷ MutableIO File → IO Long 
--  native lastModified 
--  list ∷ MutableIO File → IO (Maybe (ArrayOf RealWorld String)) 
--  native list 
--  mkdirs ∷ MutableIO File → IO Bool 
--  native mkdirs 
--  new ∷ String → STMutable s File 
--       | Mutable s File → String → STMutable s File 
--  native new 
--  newα ∷ String → STMutable s File 
--  native new  overloads new 
--  newβ ∷ Mutable s File → String → STMutable s File 
--  native new  overloads new 
--  pathSeparator ∷ String 
--  pure native java.io.File.pathSeparator 
--   Separator for elements of a path, i.e. ":" on Unix   
--  renameTo ∷ MutableIO File → MutableIO File → IO Bool 
--  native renameTo 
--  separator ∷ String 
--  pure native java.io.File.separator 
--   Separator for elements of a path name, i.e. "/" on Unix   
--  toURI ∷ File → URI 
--  pure native toURI 

@url http://www.frege-lang.org/doc/frege/java/IO#File
data File 


@url http://www.frege-lang.org/doc/frege/java/IO#File.canRead
canRead ∷ MutableIO File → IO Bool 
native canRead


@url http://www.frege-lang.org/doc/frege/java/IO#File.canWrite
canWrite ∷ MutableIO File → IO Bool 
native canWrite

-- | Create an empty file in the default temp directory. 
--   createTempFile "abc" ".suffix" 
--   The prefix must be at least 3 characters long!  
@url http://www.frege-lang.org/doc/frege/java/IO#File.createTempFile
createTempFile ∷ String → String → STMutable RealWorld File 
native java.io.File.createTempFile  throws IOException


@url http://www.frege-lang.org/doc/frege/java/IO#File.delete
delete ∷ MutableIO File → IO Bool 
native delete


@url http://www.frege-lang.org/doc/frege/java/IO#File.exists
exists ∷ MutableIO File → IO Bool 
native exists


@url http://www.frege-lang.org/doc/frege/java/IO#File.getName
getName ∷ MutableIO File → IO String 
native getName


@url http://www.frege-lang.org/doc/frege/java/IO#File.getParentFile
getParentFile ∷ MutableIO File → IO (Maybe (MutableIO File)) 
native getParentFile

-- | The (relative) path name. Not necessarily valid.  
@url http://www.frege-lang.org/doc/frege/java/IO#File.getPath
getPath ∷ MutableIO File → IO String 
native getPath


@url http://www.frege-lang.org/doc/frege/java/IO#File.getPathF
getPathF ∷ File → String 
pure native getPath


@url http://www.frege-lang.org/doc/frege/java/IO#File.isAbsolute
isAbsolute ∷ MutableIO File → IO Bool 
native isAbsolute


@url http://www.frege-lang.org/doc/frege/java/IO#File.isDirectory
isDirectory ∷ MutableIO File → IO Bool 
native isDirectory


@url http://www.frege-lang.org/doc/frege/java/IO#File.isFile
isFile ∷ MutableIO File → IO Bool 
native isFile


@url http://www.frege-lang.org/doc/frege/java/IO#File.lastModified
lastModified ∷ MutableIO File → IO Long 
native lastModified


@url http://www.frege-lang.org/doc/frege/java/IO#File.list
list ∷ MutableIO File → IO (Maybe (ArrayOf RealWorld String)) 
native list


@url http://www.frege-lang.org/doc/frege/java/IO#File.mkdirs
mkdirs ∷ MutableIO File → IO Bool 
native mkdirs


@url http://www.frege-lang.org/doc/frege/java/IO#File._new
new ∷ String → STMutable s File 
     | Mutable s File → String → STMutable s File 
native new


@url http://www.frege-lang.org/doc/frege/java/IO#File.newα
newα ∷ String → STMutable s File 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/IO#File.newβ
newβ ∷ Mutable s File → String → STMutable s File 
native new  overloads new

-- | Separator for elements of a path, i.e. ":" on Unix  
@url http://www.frege-lang.org/doc/frege/java/IO#File.pathSeparator
pathSeparator ∷ String 
pure native java.io.File.pathSeparator


@url http://www.frege-lang.org/doc/frege/java/IO#File.renameTo
renameTo ∷ MutableIO File → MutableIO File → IO Bool 
native renameTo

-- | Separator for elements of a path name, i.e. "/" on Unix  
@url http://www.frege-lang.org/doc/frege/java/IO#File.separator
separator ∷ String 
pure native java.io.File.separator


@url http://www.frege-lang.org/doc/frege/java/IO#File.toURI
toURI ∷ File → URI 
pure native toURI

-- | Member Functions
--  ----------------
--  putChar ∷ Writer → Char → IO () 
--  write ∷ Writer → Int → IO () 
--             throws IOException 
--         | Writer → String → IO () 
--             throws IOException 
--         | Writer → String → Int → Int → IO () 
--             throws IOException 
--  native write 
--  writeα ∷ Writer → Int → IO () 
--  native write  throws IOException  overloads write 
--  writeβ ∷ Writer → String → IO () 
--  native write  throws IOException  overloads write 
--  writeγ ∷ Writer → String → Int → Int → IO () 
--  native write  throws IOException  overloads write 

@url http://www.frege-lang.org/doc/frege/java/IO#Writer
data Writer 


@url http://www.frege-lang.org/doc/frege/java/IO#Writer.putChar
putChar ∷ Writer → Char → IO ()


@url http://www.frege-lang.org/doc/frege/java/IO#Writer.write
write ∷ Writer → Int → IO () 
           throws IOException 
       | Writer → String → IO () 
           throws IOException 
       | Writer → String → Int → Int → IO () 
           throws IOException 
native write


@url http://www.frege-lang.org/doc/frege/java/IO#Writer.writeα
writeα ∷ Writer → Int → IO () 
native write  throws IOException  overloads write


@url http://www.frege-lang.org/doc/frege/java/IO#Writer.writeβ
writeβ ∷ Writer → String → IO () 
native write  throws IOException  overloads write


@url http://www.frege-lang.org/doc/frege/java/IO#Writer.writeγ
writeγ ∷ Writer → String → Int → Int → IO () 
native write  throws IOException  overloads write

-- | Member Functions
--  ----------------
--  new ∷ OutputStream → String → IO OutputStreamWriter 
--  native new  throws UnsupportedEncodingException 

@url http://www.frege-lang.org/doc/frege/java/IO#OutputStreamWriter
data OutputStreamWriter 


@url http://www.frege-lang.org/doc/frege/java/IO#OutputStreamWriter._new
new ∷ OutputStream → String → IO OutputStreamWriter 
native new  throws UnsupportedEncodingException

-- | Member Functions
--  ----------------
--  new ∷ String → IO PrintWriter 
--           throws FileNotFoundException 
--       | MutableIO File → IO PrintWriter 
--           throws FileNotFoundException 
--       | MutableIO File → String → IO PrintWriter 
--           throws FileNotFoundException, UnsupportedEncodingException 
--       | Writer → IO PrintWriter 
--       | Writer → Bool → IO PrintWriter 
--  native new 
--  newα ∷ String → IO PrintWriter 
--  native new  throws FileNotFoundException  overloads new 
--  newβ ∷ MutableIO File → IO PrintWriter 
--  native new  throws FileNotFoundException  overloads new 
--  newγ ∷ MutableIO File → String → IO PrintWriter 
--  native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new 
--  newδ ∷ Writer → IO PrintWriter 
--  native new  overloads new 
--  newε ∷ Writer → Bool → IO PrintWriter 
--  native new  overloads new 
--  print ∷ PrintWriter → String → IO () 
--  native print 
--   print a String   
--  printf ∷ PrintWriter → String → a → IO () 
--          | PrintWriter → String → a → b → IO () 
--          | PrintWriter → String → a → b → c → IO () 
--          | PrintWriter → String → a → b → c → d → IO () 
--          | PrintWriter → String → a → b → c → d → e → IO () 
--          | PrintWriter → String → a → b → c → d → e → f → IO () 
--          | PrintWriter → String → a → b → c → d → e → f → g → IO () 
--          | PrintWriter → String → a → b → c → d → e → f → g → h → IO () 
--          | PrintWriter → String → a → b → c → d → e → f → g → h → i → IO () 
--  native printf 
--   format and print 1 to 9 values, see StringJ.format   
--  printfα ∷ PrintWriter → String → a → IO () 
--  native printf  overloads printf 
--   format and print 1 to 9 values, see StringJ.format   
--  printfβ ∷ PrintWriter → String → a → b → IO () 
--  native printf  overloads printf 
--   format and print 1 to 9 values, see StringJ.format   
--  printfγ ∷ PrintWriter → String → a → b → c → IO () 
--  native printf  overloads printf 
--   format and print 1 to 9 values, see StringJ.format   
--  printfδ ∷ PrintWriter → String → a → b → c → d → IO () 
--  native printf  overloads printf 
--   format and print 1 to 9 values, see StringJ.format   
--  printfε ∷ PrintWriter → String → a → b → c → d → e → IO () 
--  native printf  overloads printf 
--   format and print 1 to 9 values, see StringJ.format   
--  printfζ ∷ PrintWriter → String → a → b → c → d → e → f → IO () 
--  native printf  overloads printf 
--   format and print 1 to 9 values, see StringJ.format   
--  printfη ∷ PrintWriter → String → a → b → c → d → e → f → g → IO () 
--  native printf  overloads printf 
--   format and print 1 to 9 values, see StringJ.format   
--  printfθ ∷ PrintWriter → String → a → b → c → d → e → f → g → h → IO () 
--  native printf  overloads printf 
--   format and print 1 to 9 values, see StringJ.format   
--  printfι ∷ PrintWriter → String → a → b → c → d → e → f → g → h → i → IO () 
--  native printf  overloads printf 
--   format and print 1 to 9 values, see StringJ.format   
--  println ∷ PrintWriter → String → IO () 
--           | PrintWriter → IO () 
--  native println 
--   print a String followed by a line terminator, or just a line terminator   
--  printlnα ∷ PrintWriter → String → IO () 
--  native println  overloads println 
--   print a String followed by a line terminator, or just a line terminator   
--  printlnβ ∷ PrintWriter → IO () 
--  native println  overloads println 
--   print a String followed by a line terminator, or just a line terminator    
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter
data PrintWriter 


@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter._new
new ∷ String → IO PrintWriter 
         throws FileNotFoundException 
     | MutableIO File → IO PrintWriter 
         throws FileNotFoundException 
     | MutableIO File → String → IO PrintWriter 
         throws FileNotFoundException, UnsupportedEncodingException 
     | Writer → IO PrintWriter 
     | Writer → Bool → IO PrintWriter 
native new


@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.newα
newα ∷ String → IO PrintWriter 
native new  throws FileNotFoundException  overloads new


@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.newβ
newβ ∷ MutableIO File → IO PrintWriter 
native new  throws FileNotFoundException  overloads new


@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.newγ
newγ ∷ MutableIO File → String → IO PrintWriter 
native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new


@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.newδ
newδ ∷ Writer → IO PrintWriter 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.newε
newε ∷ Writer → Bool → IO PrintWriter 
native new  overloads new

-- | print a String  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.print
print ∷ PrintWriter → String → IO () 
native print

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printf
printf ∷ PrintWriter → String → a → IO () 
        | PrintWriter → String → a → b → IO () 
        | PrintWriter → String → a → b → c → IO () 
        | PrintWriter → String → a → b → c → d → IO () 
        | PrintWriter → String → a → b → c → d → e → IO () 
        | PrintWriter → String → a → b → c → d → e → f → IO () 
        | PrintWriter → String → a → b → c → d → e → f → g → IO () 
        | PrintWriter → String → a → b → c → d → e → f → g → h → IO () 
        | PrintWriter → String → a → b → c → d → e → f → g → h → i → IO () 
native printf

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printfα
printfα ∷ PrintWriter → String → a → IO () 
native printf  overloads printf

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printfβ
printfβ ∷ PrintWriter → String → a → b → IO () 
native printf  overloads printf

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printfγ
printfγ ∷ PrintWriter → String → a → b → c → IO () 
native printf  overloads printf

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printfδ
printfδ ∷ PrintWriter → String → a → b → c → d → IO () 
native printf  overloads printf

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printfε
printfε ∷ PrintWriter → String → a → b → c → d → e → IO () 
native printf  overloads printf

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printfζ
printfζ ∷ PrintWriter → String → a → b → c → d → e → f → IO () 
native printf  overloads printf

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printfη
printfη ∷ PrintWriter → String → a → b → c → d → e → f → g → IO () 
native printf  overloads printf

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printfθ
printfθ ∷ PrintWriter → String → a → b → c → d → e → f → g → h → IO () 
native printf  overloads printf

-- | format and print 1 to 9 values, see StringJ.format  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printfι
printfι ∷ PrintWriter → String → a → b → c → d → e → f → g → h → i → IO () 
native printf  overloads printf

-- | print a String followed by a line terminator, or just a line terminator  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.println
println ∷ PrintWriter → String → IO () 
         | PrintWriter → IO () 
native println

-- | print a String followed by a line terminator, or just a line terminator  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printlnα
printlnα ∷ PrintWriter → String → IO () 
native println  overloads println

-- | print a String followed by a line terminator, or just a line terminator  
@url http://www.frege-lang.org/doc/frege/java/IO#PrintWriter.printlnβ
printlnβ ∷ PrintWriter → IO () 
native println  overloads println

-- | nowarn: Don't warn because of constantness 
--   The standard output PrintWriter  
@url http://www.frege-lang.org/doc/frege/java/IO#stdout
stdout ∷ PrintWriter 
native frege.runtime.Runtime.stdout.get()

-- | nowarn: Don't warn because of constantness 
--   The standard error PrintWriter  
@url http://www.frege-lang.org/doc/frege/java/IO#stderr
stderr ∷ PrintWriter 
native frege.runtime.Runtime.stderr.get()

-- | nowarn: Don't warn because of constantness 
--   The standard input BufferedReader  
@url http://www.frege-lang.org/doc/frege/java/IO#stdin
stdin ∷ BufferedReader 
native frege.runtime.Runtime.stdin.get()

-- | Frege type for a java.io.StringWriter 
--   Not intended for direct use but rather as something a PrintWriter can be made of. (Though, because of the Appendable inheritance, one could still Appendable.append directly.) 
--   To be used like: 
--   action :: PrintWriter -> IO () action = ... actionOnStringWriter :: IO String actionOnStringWriter = do sw <- StringWriter.new pr <- sw.printer action pr pr.close sw.toString 
--   Member Functions
--  ----------------
--  new ∷ () → IO StringWriter 
--  native new 
--   create a fresh StringWriter   
--  printer ∷ StringWriter → IO PrintWriter 
--   make a PrintWriter that prints to this StringWriter   
--  toString ∷ StringWriter → IO String 
--  native toString 
--   get the content of a StringWriter as String    
@url http://www.frege-lang.org/doc/frege/java/IO#StringWriter
data StringWriter 

-- | create a fresh StringWriter  
@url http://www.frege-lang.org/doc/frege/java/IO#StringWriter._new
new ∷ () → IO StringWriter 
native new

-- | make a PrintWriter that prints to this StringWriter  
@url http://www.frege-lang.org/doc/frege/java/IO#StringWriter.printer
printer ∷ StringWriter → IO PrintWriter

-- | get the content of a StringWriter as String  
@url http://www.frege-lang.org/doc/frege/java/IO#StringWriter.toString
toString ∷ StringWriter → IO String 
native toString


@url http://www.frege-lang.org/doc/frege/java/IO#InputStream
data InputStream 

-- | Member Functions
--  ----------------
--  new ∷ MutableIO File → IO FileInputStream 
--           throws FileNotFoundException 
--       | String → IO FileInputStream 
--           throws FileNotFoundException 
--  native new 
--  newα ∷ MutableIO File → IO FileInputStream 
--  native new  throws FileNotFoundException  overloads new 
--  newβ ∷ String → IO FileInputStream 
--  native new  throws FileNotFoundException  overloads new 

@url http://www.frege-lang.org/doc/frege/java/IO#FileInputStream
data FileInputStream 


@url http://www.frege-lang.org/doc/frege/java/IO#FileInputStream._new
new ∷ MutableIO File → IO FileInputStream 
         throws FileNotFoundException 
     | String → IO FileInputStream 
         throws FileNotFoundException 
native new


@url http://www.frege-lang.org/doc/frege/java/IO#FileInputStream.newα
newα ∷ MutableIO File → IO FileInputStream 
native new  throws FileNotFoundException  overloads new


@url http://www.frege-lang.org/doc/frege/java/IO#FileInputStream.newβ
newβ ∷ String → IO FileInputStream 
native new  throws FileNotFoundException  overloads new

-- | Member Functions
--  ----------------
--  getChar ∷ Reader → IO Char 
--   Read the next character from the input stream. Throws EOFException if the end of the stream has been reached, or IOException if an I/O error occurs.  
--  read ∷ Reader → IO Int 
--  native read  throws IOException 
--   Reads a single character and returns it as Int in the range 0 to 65535. Returns -1 if the end of the stream has been reached. 
--   Throws IOException if an I/O error occurs.   
@url http://www.frege-lang.org/doc/frege/java/IO#Reader
data Reader 

-- | Read the next character from the input stream. Throws EOFException if the end of the stream has been reached, or IOException if an I/O error occurs. 
@url http://www.frege-lang.org/doc/frege/java/IO#Reader.getChar
getChar ∷ Reader → IO Char

-- | Reads a single character and returns it as Int in the range 0 to 65535. Returns -1 if the end of the stream has been reached. 
--   Throws IOException if an I/O error occurs. 
@url http://www.frege-lang.org/doc/frege/java/IO#Reader.read
read ∷ Reader → IO Int 
native read  throws IOException

-- | Member Functions
--  ----------------
--  new ∷ InputStream → String → IO InputStreamReader 
--  native new  throws UnsupportedEncodingException 

@url http://www.frege-lang.org/doc/frege/java/IO#InputStreamReader
data InputStreamReader 


@url http://www.frege-lang.org/doc/frege/java/IO#InputStreamReader._new
new ∷ InputStream → String → IO InputStreamReader 
native new  throws UnsupportedEncodingException

-- | Member Functions
--  ----------------
--  getLine ∷ BufferedReader → IO String 
--   Reads the next line from a buffered reader using BufferedReader.readLine, and returns the string or throws EOFException on end of file.  
--  getLines ∷ BufferedReader → IO [String] 
--   read all lines and return them as list, close reader afterwards   
--  new ∷ Reader → IO BufferedReader 
--  native new 
--  readLine ∷ BufferedReader → IO (Maybe String) 
--  native readLine  throws IOException 
--   Reads a line of text. A line is considered to be terminated by any one of a line feed ("\n"), a carriage return ("\r"), or a carriage return followed immediately by a linefeed.  
--   Returns: 
--  Maybe.Just string, where string is the contents of the line, not including any line-termination characters, or Maybe.Nothing if the end of the stream has been reached.  
--   Throws: 
--  IOException - If an I/O error occurs     
@url http://www.frege-lang.org/doc/frege/java/IO#BufferedReader
data BufferedReader 

-- | Reads the next line from a buffered reader using BufferedReader.readLine, and returns the string or throws EOFException on end of file. 
@url http://www.frege-lang.org/doc/frege/java/IO#BufferedReader.getLine
getLine ∷ BufferedReader → IO String

-- | read all lines and return them as list, close reader afterwards  
@url http://www.frege-lang.org/doc/frege/java/IO#BufferedReader.getLines
getLines ∷ BufferedReader → IO [String]


@url http://www.frege-lang.org/doc/frege/java/IO#BufferedReader._new
new ∷ Reader → IO BufferedReader 
native new

-- | Reads a line of text. A line is considered to be terminated by any one of a line feed ("\n"), a carriage return ("\r"), or a carriage return followed immediately by a linefeed.  
--   Returns: 
--  Maybe.Just string, where string is the contents of the line, not including any line-termination characters, or Maybe.Nothing if the end of the stream has been reached.  
--   Throws: 
--  IOException - If an I/O error occurs   
@url http://www.frege-lang.org/doc/frege/java/IO#BufferedReader.readLine
readLine ∷ BufferedReader → IO (Maybe String) 
native readLine  throws IOException

-- | Convenience function to open a file and wrap it with an UTF-8 decoding buffered Reader. 
--   May throw FileNotFoundException 
@url http://www.frege-lang.org/doc/frege/java/IO#openReader
openReader ∷ String → IO BufferedReader

-- | Convenience function to open a file for writing through an UTF-8 encoding PrintWriter. 
--   May throw FileNotFoundException 
@url http://www.frege-lang.org/doc/frege/java/IO#openWriter
openWriter ∷ String → IO PrintWriter

-- | Convenience function to open a file in append mode for writing through an UTF-8 encoding PrintWriter. 
--   May throw FileNotFoundException 
@url http://www.frege-lang.org/doc/frege/java/IO#appendWriter
appendWriter ∷ String → IO PrintWriter


@url http://www.frege-lang.org/doc/frege/java/Lang#IOException
data IOException 


@url http://www.frege-lang.org/doc/frege/java/Lang#IllegalStateException
data IllegalStateException 


@url http://www.frege-lang.org/doc/frege/java/Lang#IllegalThreadStateException
data IllegalThreadStateException 


@url http://www.frege-lang.org/doc/frege/java/Lang#InstantiationException
data InstantiationException 


@url http://www.frege-lang.org/doc/frege/java/Lang#NoSuchFieldException
data NoSuchFieldException 


@url http://www.frege-lang.org/doc/frege/java/Lang#IllegalAccessException
data IllegalAccessException 


@url http://www.frege-lang.org/doc/frege/java/Lang#IllegalArgumentException
data IllegalArgumentException 


@url http://www.frege-lang.org/doc/frege/java/Lang#SecurityException
data SecurityException 


@url http://www.frege-lang.org/doc/frege/java/Lang#NullPointerException
data NullPointerException 


@url http://www.frege-lang.org/doc/frege/java/Lang#Error
data Error 


@url http://www.frege-lang.org/doc/frege/java/Lang#NoSuchMethodError
data NoSuchMethodError 


@url http://www.frege-lang.org/doc/frege/java/Lang#ExceptionInInitializerError
data ExceptionInInitializerError 


@url http://www.frege-lang.org/doc/frege/java/Lang#IndexOutOfBoundsException
data IndexOutOfBoundsException 


@url http://www.frege-lang.org/doc/frege/java/Lang#StringIndexOutOfBoundsException
data StringIndexOutOfBoundsException 

-- | A java.lang.Runnable, can be created from IO or ST actions  
--   Member Functions
--  ----------------
--  new ∷ ST s () → STMutable s Runnable 
--  native frege.runtime.SwingSupport.runnable 
--   nowarn: argument of type ST s () 
--   Create a java Runnable from a ST s (). 
--   When the run method is called from java code, the ST action will be performed.   
--  run ∷ Mutable s Runnable → ST s () 
--  native run 
--   perform the ST action that is associated with this runnable.    
@url http://www.frege-lang.org/doc/frege/java/Lang#Runnable
data Runnable 

-- | nowarn: argument of type ST s () 
--   Create a java Runnable from a ST s (). 
--   When the run method is called from java code, the ST action will be performed.  
@url http://www.frege-lang.org/doc/frege/java/Lang#Runnable._new
new ∷ ST s () → STMutable s Runnable 
native frege.runtime.SwingSupport.runnable

-- | perform the ST action that is associated with this runnable.  
@url http://www.frege-lang.org/doc/frege/java/Lang#Runnable.run
run ∷ Mutable s Runnable → ST s () 
native run

-- | Member Functions
--  ----------------
--  current ∷ IO ClassLoader 
--  getClassLoader ∷ Class a → IO ClassLoader 
--  native getClassLoader 

@url http://www.frege-lang.org/doc/frege/java/Lang#ClassLoader
data ClassLoader 


@url http://www.frege-lang.org/doc/frege/java/Lang#ClassLoader.current
current ∷ IO ClassLoader


@url http://www.frege-lang.org/doc/frege/java/Lang#ClassLoader.getClassLoader
getClassLoader ∷ Class a → IO ClassLoader 
native getClassLoader


@url http://www.frege-lang.org/doc/frege/java/Lang#PrintStream
data PrintStream 

-- | Member Functions
--  ----------------
--  append ∷ Mutable s Appendable → Char → STMutable s Appendable 
--              throws IOException 
--          | Mutable s Appendable → String → STMutable s Appendable 
--              throws IOException 
--  native append 
--  appendα ∷ Mutable s Appendable → Char → STMutable s Appendable 
--  native append  throws IOException  overloads append 
--  appendβ ∷ Mutable s Appendable → String → STMutable s Appendable 
--  native append  throws IOException  overloads append 

@url http://www.frege-lang.org/doc/frege/java/Lang#Appendable
data Appendable 


@url http://www.frege-lang.org/doc/frege/java/Lang#Appendable.append
append ∷ Mutable s Appendable → Char → STMutable s Appendable 
            throws IOException 
        | Mutable s Appendable → String → STMutable s Appendable 
            throws IOException 
native append


@url http://www.frege-lang.org/doc/frege/java/Lang#Appendable.appendα
appendα ∷ Mutable s Appendable → Char → STMutable s Appendable 
native append  throws IOException  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#Appendable.appendβ
appendβ ∷ Mutable s Appendable → String → STMutable s Appendable 
native append  throws IOException  overloads append

-- | Member Functions
--  ----------------
--  currentTimeMillis ∷ () → IO Long 
--  native java.lang.System.currentTimeMillis 
--  err ∷ PrintStream 
--  native java.lang.System.err 
--   nowarn: System.err is not supposed to change   
--  exit ∷ Int → IO () 
--  native java.lang.System.exit 
--  getProperty ∷ String → Maybe String 
--  pure native java.lang.System.getProperty 
--  getenv ∷ String → Maybe String 
--  pure native java.lang.System.getenv 
--  lineSeparator ∷ () → String 
--  pure native java.lang.System.lineSeparator 
--  nanoTime ∷ () → IO Long 
--  native java.lang.System.nanoTime 
--  out ∷ PrintStream 
--  native java.lang.System.out 
--   nowarn: System.out is not supposed to change    
@url http://www.frege-lang.org/doc/frege/java/Lang#System
data System 


@url http://www.frege-lang.org/doc/frege/java/Lang#System.currentTimeMillis
currentTimeMillis ∷ () → IO Long 
native java.lang.System.currentTimeMillis

-- | nowarn: System.err is not supposed to change  
@url http://www.frege-lang.org/doc/frege/java/Lang#System.err
err ∷ PrintStream 
native java.lang.System.err


@url http://www.frege-lang.org/doc/frege/java/Lang#System.exit
exit ∷ Int → IO () 
native java.lang.System.exit


@url http://www.frege-lang.org/doc/frege/java/Lang#System.getProperty
getProperty ∷ String → Maybe String 
pure native java.lang.System.getProperty


@url http://www.frege-lang.org/doc/frege/java/Lang#System.getenv
getenv ∷ String → Maybe String 
pure native java.lang.System.getenv


@url http://www.frege-lang.org/doc/frege/java/Lang#System.lineSeparator
lineSeparator ∷ () → String 
pure native java.lang.System.lineSeparator


@url http://www.frege-lang.org/doc/frege/java/Lang#System.nanoTime
nanoTime ∷ () → IO Long 
native java.lang.System.nanoTime

-- | nowarn: System.out is not supposed to change  
@url http://www.frege-lang.org/doc/frege/java/Lang#System.out
out ∷ PrintStream 
native java.lang.System.out

-- | Member Functions
--  ----------------
--  charAt ∷ CharSequence → Int → Char 
--  pure native charAt 
--  codePointAt ∷ CharSequence → Int → Int 
--  pure native java.lang.Character.codePointAt 
--   Returns the code point at the given index of the CharSequence. If the char value at the given index in the CharSequence is in the high-surrogate range, the following index is less than the length of the CharSequence, and the char value at the following index is in the low-surrogate range, then the supplementary code point corresponding to this surrogate pair is returned. 
--   Otherwise, the char value at the given index is returned. 
--   Note that the corresponding java method is from java.lang.Character, but logically fits in here better. 
--   See also: Char.isSupplementaryCodePoint  
--  fromString ∷ String → CharSequence 
--  pure native (java.lang.CharSequence) 
--  length ∷ CharSequence → Int 
--  pure native length 
--  subSeq ∷ CharSequence → Int → Int → CharSequence 
--  pure native subSequence 
--  toString ∷ CharSequence → String 
--  pure native toString 

@url http://www.frege-lang.org/doc/frege/java/Lang#CharSequence
data CharSequence 


@url http://www.frege-lang.org/doc/frege/java/Lang#CharSequence.charAt
charAt ∷ CharSequence → Int → Char 
pure native charAt

-- | Returns the code point at the given index of the CharSequence. If the char value at the given index in the CharSequence is in the high-surrogate range, the following index is less than the length of the CharSequence, and the char value at the following index is in the low-surrogate range, then the supplementary code point corresponding to this surrogate pair is returned. 
--   Otherwise, the char value at the given index is returned. 
--   Note that the corresponding java method is from java.lang.Character, but logically fits in here better. 
--   See also: Char.isSupplementaryCodePoint 
@url http://www.frege-lang.org/doc/frege/java/Lang#CharSequence.codePointAt
codePointAt ∷ CharSequence → Int → Int 
pure native java.lang.Character.codePointAt


@url http://www.frege-lang.org/doc/frege/java/Lang#CharSequence.fromString
fromString ∷ String → CharSequence 
pure native (java.lang.CharSequence)


@url http://www.frege-lang.org/doc/frege/java/Lang#CharSequence.length
length ∷ CharSequence → Int 
pure native length


@url http://www.frege-lang.org/doc/frege/java/Lang#CharSequence.subSeq
subSeq ∷ CharSequence → Int → Int → CharSequence 
pure native subSequence


@url http://www.frege-lang.org/doc/frege/java/Lang#CharSequence.toString
toString ∷ CharSequence → String 
pure native toString

-- | Resembles java.lang.StringBuilder  
--   Member Functions
--  ----------------
--  new ∷ String → STMutable s StringBuilder 
--  native new 
--  toString ∷ Mutable s StringBuilder → ST s String 
--  native toString 

@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuilder
data StringBuilder 


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuilder._new
new ∷ String → STMutable s StringBuilder 
native new


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuilder.toString
toString ∷ Mutable s StringBuilder → ST s String 
native toString

-- | An OS thread  
--   Member Functions
--  ----------------
--  current ∷ () → IO Thread 
--  native java.lang.Thread.currentThread 
--   Obtain the current Thread   
--  getName ∷ Thread → IO String 
--  native getName 
--  new ∷ MutableIO Runnable → IO Thread 
--  native new 
--  setName ∷ Thread → String → IO () 
--  native setName 
--  sleep ∷ Long → IO () 
--  native java.lang.Thread.sleep  throws InterruptedException 
--   Sleep for a number of milliseconds.   
--  start ∷ Thread → IO () 
--  native start 

@url http://www.frege-lang.org/doc/frege/java/Lang#Thread
data Thread 

-- | Obtain the current Thread  
@url http://www.frege-lang.org/doc/frege/java/Lang#Thread.current
current ∷ () → IO Thread 
native java.lang.Thread.currentThread


@url http://www.frege-lang.org/doc/frege/java/Lang#Thread.getName
getName ∷ Thread → IO String 
native getName


@url http://www.frege-lang.org/doc/frege/java/Lang#Thread._new
new ∷ MutableIO Runnable → IO Thread 
native new


@url http://www.frege-lang.org/doc/frege/java/Lang#Thread.setName
setName ∷ Thread → String → IO () 
native setName

-- | Sleep for a number of milliseconds.  
@url http://www.frege-lang.org/doc/frege/java/Lang#Thread.sleep
sleep ∷ Long → IO () 
native java.lang.Thread.sleep  throws InterruptedException


@url http://www.frege-lang.org/doc/frege/java/Lang#Thread.start
start ∷ Thread → IO () 
native start


@url http://www.frege-lang.org/doc/frege/java/Lang#Boolean
data Boolean 


@url http://www.frege-lang.org/doc/frege/java/Lang#Character
data Character 


@url http://www.frege-lang.org/doc/frege/java/Lang#Readable
data Readable 

-- | Member Functions
--  ----------------
--  append ∷ Mutable s StringBuffer → Float → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Double → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Bool → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Char → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Long → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Object → STMutable s StringBuffer 
--          | Mutable s StringBuffer → CharSequence → STMutable s StringBuffer 
--          | Mutable s StringBuffer → CharSequence → Int → Int → STMutable s StringBuffer 
--          | Mutable s StringBuffer → ArrayOf s Char → STMutable s StringBuffer 
--          | Mutable s StringBuffer → ArrayOf s Char → Int → Int → STMutable s StringBuffer 
--          | Mutable s StringBuffer → String → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Mutable s StringBuffer → STMutable s StringBuffer 
--  native append 
--  appendCodePoint ∷ Mutable s StringBuffer → Int → STMutable s StringBuffer 
--  native appendCodePoint 
--  appendß ∷ Mutable s StringBuffer → ArrayOf s Char → STMutable s StringBuffer 
--  native append  overloads append 
--  appendα ∷ Mutable s StringBuffer → Float → STMutable s StringBuffer 
--  native append  overloads append 
--  appendβ ∷ Mutable s StringBuffer → Double → STMutable s StringBuffer 
--  native append  overloads append 
--  appendγ ∷ Mutable s StringBuffer → Bool → STMutable s StringBuffer 
--  native append  overloads append 
--  appendδ ∷ Mutable s StringBuffer → Char → STMutable s StringBuffer 
--  native append  overloads append 
--  appendε ∷ Mutable s StringBuffer → Int → STMutable s StringBuffer 
--  native append  overloads append 
--  appendζ ∷ Mutable s StringBuffer → Long → STMutable s StringBuffer 
--  native append  overloads append 
--  appendη ∷ Mutable s StringBuffer → Object → STMutable s StringBuffer 
--  native append  overloads append 
--  appendθ ∷ Mutable s StringBuffer → CharSequence → STMutable s StringBuffer 
--  native append  overloads append 
--  appendι ∷ Mutable s StringBuffer → CharSequence → Int → Int → STMutable s StringBuffer 
--  native append  overloads append 
--  appendκ ∷ Mutable s StringBuffer → ArrayOf s Char → Int → Int → STMutable s StringBuffer 
--  native append  overloads append 
--  appendλ ∷ Mutable s StringBuffer → String → STMutable s StringBuffer 
--  native append  overloads append 
--  appendμ ∷ Mutable s StringBuffer → Mutable s StringBuffer → STMutable s StringBuffer 
--  native append  overloads append 
--  capacity ∷ Mutable s StringBuffer → ST s Int 
--  native capacity 
--  charAt ∷ Mutable s StringBuffer → Int → ST s Char 
--  native charAt 
--  codePointAt ∷ Mutable s StringBuffer → Int → ST s Int 
--  native codePointAt 
--  codePointBefore ∷ Mutable s StringBuffer → Int → ST s Int 
--  native codePointBefore 
--  codePointCount ∷ Mutable s StringBuffer → Int → Int → ST s Int 
--  native codePointCount 
--  delete ∷ Mutable s StringBuffer → Int → Int → STMutable s StringBuffer 
--  native delete 
--  deleteCharAt ∷ Mutable s StringBuffer → Int → STMutable s StringBuffer 
--  native deleteCharAt 
--  ensureCapacity ∷ Mutable s StringBuffer → Int → ST s () 
--  native ensureCapacity 
--  getChars ∷ Mutable s StringBuffer → Int → Int → ArrayOf s Char → Int → ST s () 
--  native getChars 
--  indexOf ∷ Mutable s StringBuffer → String → ST s Int 
--           | Mutable s StringBuffer → String → Int → ST s Int 
--  native indexOf 
--  indexOfα ∷ Mutable s StringBuffer → String → ST s Int 
--  native indexOf  overloads indexOf 
--  indexOfβ ∷ Mutable s StringBuffer → String → Int → ST s Int 
--  native indexOf  overloads indexOf 
--  insert ∷ Mutable s StringBuffer → Int → ArrayOf s Char → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → CharSequence → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → CharSequence → Int → Int → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → Bool → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → Char → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → Double → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → ArrayOf s Char → Int → Int → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → Object → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → String → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → Float → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → Long → STMutable s StringBuffer 
--          | Mutable s StringBuffer → Int → Int → STMutable s StringBuffer 
--  native insert 
--  insertß ∷ Mutable s StringBuffer → Int → Float → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertα ∷ Mutable s StringBuffer → Int → ArrayOf s Char → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertβ ∷ Mutable s StringBuffer → Int → CharSequence → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertγ ∷ Mutable s StringBuffer → Int → CharSequence → Int → Int → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertδ ∷ Mutable s StringBuffer → Int → Bool → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertε ∷ Mutable s StringBuffer → Int → Char → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertζ ∷ Mutable s StringBuffer → Int → Double → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertη ∷ Mutable s StringBuffer → Int → ArrayOf s Char → Int → Int → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertθ ∷ Mutable s StringBuffer → Int → Object → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertι ∷ Mutable s StringBuffer → Int → String → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertκ ∷ Mutable s StringBuffer → Int → Long → STMutable s StringBuffer 
--  native insert  overloads insert 
--  insertλ ∷ Mutable s StringBuffer → Int → Int → STMutable s StringBuffer 
--  native insert  overloads insert 
--  lastIndexOf ∷ Mutable s StringBuffer → String → ST s Int 
--               | Mutable s StringBuffer → String → Int → ST s Int 
--  native lastIndexOf 
--  lastIndexOfα ∷ Mutable s StringBuffer → String → ST s Int 
--  native lastIndexOf  overloads lastIndexOf 
--  lastIndexOfβ ∷ Mutable s StringBuffer → String → Int → ST s Int 
--  native lastIndexOf  overloads lastIndexOf 
--  length ∷ Mutable s StringBuffer → ST s Int 
--  native length 
--  new ∷ CharSequence → STMutable s StringBuffer 
--       | String → STMutable s StringBuffer 
--       | Int → STMutable s StringBuffer 
--       | () → STMutable s StringBuffer 
--  native new 
--  newα ∷ CharSequence → STMutable s StringBuffer 
--  native new  overloads new 
--  newβ ∷ String → STMutable s StringBuffer 
--  native new  overloads new 
--  newγ ∷ Int → STMutable s StringBuffer 
--  native new  overloads new 
--  newδ ∷ () → STMutable s StringBuffer 
--  native new  overloads new 
--  offsetByCodePoints ∷ Mutable s StringBuffer → Int → Int → ST s Int 
--  native offsetByCodePoints 
--  replace ∷ Mutable s StringBuffer → Int → Int → String → STMutable s StringBuffer 
--  native replace 
--  reverse ∷ Mutable s StringBuffer → STMutable s StringBuffer 
--  native reverse 
--  setCharAt ∷ Mutable s StringBuffer → Int → Char → ST s () 
--  native setCharAt 
--  setLength ∷ Mutable s StringBuffer → Int → ST s () 
--  native setLength 
--  subSequence ∷ Mutable s StringBuffer → Int → Int → ST s CharSequence 
--  native subSequence 
--  substring ∷ Mutable s StringBuffer → Int → ST s String 
--             | Mutable s StringBuffer → Int → Int → ST s String 
--  native substring 
--  substringα ∷ Mutable s StringBuffer → Int → ST s String 
--  native substring  overloads substring 
--  substringβ ∷ Mutable s StringBuffer → Int → Int → ST s String 
--  native substring  overloads substring 
--  toString ∷ Mutable s StringBuffer → ST s String 
--  native toString 
--  trimToSize ∷ Mutable s StringBuffer → ST s () 
--  native trimToSize 

@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer
data StringBuffer 


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.append
append ∷ Mutable s StringBuffer → Float → STMutable s StringBuffer 
        | Mutable s StringBuffer → Double → STMutable s StringBuffer 
        | Mutable s StringBuffer → Bool → STMutable s StringBuffer 
        | Mutable s StringBuffer → Char → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → STMutable s StringBuffer 
        | Mutable s StringBuffer → Long → STMutable s StringBuffer 
        | Mutable s StringBuffer → Object → STMutable s StringBuffer 
        | Mutable s StringBuffer → CharSequence → STMutable s StringBuffer 
        | Mutable s StringBuffer → CharSequence → Int → Int → STMutable s StringBuffer 
        | Mutable s StringBuffer → ArrayOf s Char → STMutable s StringBuffer 
        | Mutable s StringBuffer → ArrayOf s Char → Int → Int → STMutable s StringBuffer 
        | Mutable s StringBuffer → String → STMutable s StringBuffer 
        | Mutable s StringBuffer → Mutable s StringBuffer → STMutable s StringBuffer 
native append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendCodePoint
appendCodePoint ∷ Mutable s StringBuffer → Int → STMutable s StringBuffer 
native appendCodePoint


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendß
appendß ∷ Mutable s StringBuffer → ArrayOf s Char → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendα
appendα ∷ Mutable s StringBuffer → Float → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendβ
appendβ ∷ Mutable s StringBuffer → Double → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendγ
appendγ ∷ Mutable s StringBuffer → Bool → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendδ
appendδ ∷ Mutable s StringBuffer → Char → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendε
appendε ∷ Mutable s StringBuffer → Int → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendζ
appendζ ∷ Mutable s StringBuffer → Long → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendη
appendη ∷ Mutable s StringBuffer → Object → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendθ
appendθ ∷ Mutable s StringBuffer → CharSequence → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendι
appendι ∷ Mutable s StringBuffer → CharSequence → Int → Int → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendκ
appendκ ∷ Mutable s StringBuffer → ArrayOf s Char → Int → Int → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendλ
appendλ ∷ Mutable s StringBuffer → String → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.appendμ
appendμ ∷ Mutable s StringBuffer → Mutable s StringBuffer → STMutable s StringBuffer 
native append  overloads append


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.capacity
capacity ∷ Mutable s StringBuffer → ST s Int 
native capacity


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.charAt
charAt ∷ Mutable s StringBuffer → Int → ST s Char 
native charAt


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.codePointAt
codePointAt ∷ Mutable s StringBuffer → Int → ST s Int 
native codePointAt


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.codePointBefore
codePointBefore ∷ Mutable s StringBuffer → Int → ST s Int 
native codePointBefore


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.codePointCount
codePointCount ∷ Mutable s StringBuffer → Int → Int → ST s Int 
native codePointCount


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.delete
delete ∷ Mutable s StringBuffer → Int → Int → STMutable s StringBuffer 
native delete


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.deleteCharAt
deleteCharAt ∷ Mutable s StringBuffer → Int → STMutable s StringBuffer 
native deleteCharAt


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.ensureCapacity
ensureCapacity ∷ Mutable s StringBuffer → Int → ST s () 
native ensureCapacity


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.getChars
getChars ∷ Mutable s StringBuffer → Int → Int → ArrayOf s Char → Int → ST s () 
native getChars


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.indexOf
indexOf ∷ Mutable s StringBuffer → String → ST s Int 
         | Mutable s StringBuffer → String → Int → ST s Int 
native indexOf


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.indexOfα
indexOfα ∷ Mutable s StringBuffer → String → ST s Int 
native indexOf  overloads indexOf


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.indexOfβ
indexOfβ ∷ Mutable s StringBuffer → String → Int → ST s Int 
native indexOf  overloads indexOf


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insert
insert ∷ Mutable s StringBuffer → Int → ArrayOf s Char → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → CharSequence → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → CharSequence → Int → Int → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → Bool → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → Char → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → Double → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → ArrayOf s Char → Int → Int → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → Object → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → String → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → Float → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → Long → STMutable s StringBuffer 
        | Mutable s StringBuffer → Int → Int → STMutable s StringBuffer 
native insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertß
insertß ∷ Mutable s StringBuffer → Int → Float → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertα
insertα ∷ Mutable s StringBuffer → Int → ArrayOf s Char → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertβ
insertβ ∷ Mutable s StringBuffer → Int → CharSequence → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertγ
insertγ ∷ Mutable s StringBuffer → Int → CharSequence → Int → Int → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertδ
insertδ ∷ Mutable s StringBuffer → Int → Bool → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertε
insertε ∷ Mutable s StringBuffer → Int → Char → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertζ
insertζ ∷ Mutable s StringBuffer → Int → Double → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertη
insertη ∷ Mutable s StringBuffer → Int → ArrayOf s Char → Int → Int → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertθ
insertθ ∷ Mutable s StringBuffer → Int → Object → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertι
insertι ∷ Mutable s StringBuffer → Int → String → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertκ
insertκ ∷ Mutable s StringBuffer → Int → Long → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.insertλ
insertλ ∷ Mutable s StringBuffer → Int → Int → STMutable s StringBuffer 
native insert  overloads insert


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.lastIndexOf
lastIndexOf ∷ Mutable s StringBuffer → String → ST s Int 
             | Mutable s StringBuffer → String → Int → ST s Int 
native lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.lastIndexOfα
lastIndexOfα ∷ Mutable s StringBuffer → String → ST s Int 
native lastIndexOf  overloads lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.lastIndexOfβ
lastIndexOfβ ∷ Mutable s StringBuffer → String → Int → ST s Int 
native lastIndexOf  overloads lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.length
length ∷ Mutable s StringBuffer → ST s Int 
native length


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer._new
new ∷ CharSequence → STMutable s StringBuffer 
     | String → STMutable s StringBuffer 
     | Int → STMutable s StringBuffer 
     | () → STMutable s StringBuffer 
native new


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.newα
newα ∷ CharSequence → STMutable s StringBuffer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.newβ
newβ ∷ String → STMutable s StringBuffer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.newγ
newγ ∷ Int → STMutable s StringBuffer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.newδ
newδ ∷ () → STMutable s StringBuffer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.offsetByCodePoints
offsetByCodePoints ∷ Mutable s StringBuffer → Int → Int → ST s Int 
native offsetByCodePoints


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.replace
replace ∷ Mutable s StringBuffer → Int → Int → String → STMutable s StringBuffer 
native replace


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.reverse
reverse ∷ Mutable s StringBuffer → STMutable s StringBuffer 
native reverse


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.setCharAt
setCharAt ∷ Mutable s StringBuffer → Int → Char → ST s () 
native setCharAt


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.setLength
setLength ∷ Mutable s StringBuffer → Int → ST s () 
native setLength


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.subSequence
subSequence ∷ Mutable s StringBuffer → Int → Int → ST s CharSequence 
native subSequence


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.substring
substring ∷ Mutable s StringBuffer → Int → ST s String 
           | Mutable s StringBuffer → Int → Int → ST s String 
native substring


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.substringα
substringα ∷ Mutable s StringBuffer → Int → ST s String 
native substring  overloads substring


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.substringβ
substringβ ∷ Mutable s StringBuffer → Int → Int → ST s String 
native substring  overloads substring


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.toString
toString ∷ Mutable s StringBuffer → ST s String 
native toString


@url http://www.frege-lang.org/doc/frege/java/Lang#StringBuffer.trimToSize
trimToSize ∷ Mutable s StringBuffer → ST s () 
native trimToSize

-- | Member Functions
--  ----------------
--  compareTo ∷ Comparable t → t → Int 
--  pure native compareTo 

@url http://www.frege-lang.org/doc/frege/java/Lang#Comparable
data Comparable t 


@url http://www.frege-lang.org/doc/frege/java/Lang#Comparable.compareTo
compareTo ∷ Comparable t → t → Int 
pure native compareTo


@url http://www.frege-lang.org/doc/frege/java/Lang#Iterator
data Iterator e 

-- | Member Functions
--  ----------------
--  iterator ∷ Iterable t → STMutable s (Iterator t) 
--  native iterator 

@url http://www.frege-lang.org/doc/frege/java/Lang#Iterable
data Iterable t 


@url http://www.frege-lang.org/doc/frege/java/Lang#Iterable.iterator
iterator ∷ Iterable t → STMutable s (Iterator t) 
native iterator

-- |Byte is the Frege type for the primitive JVM byte 
--   However, it is given unsigend semantics in Frege. 
--   Use Byte only in JArrays or tightly packed records! 
--   Otherwise you'll waste time while not saving space.  
--   Member Functions
--  ----------------
--  signed ∷ Byte → Int 
--  pure native (int) 
--   this gives the Int corresponding to the signed interpretation of the Byte   
--  unsigned ∷ Byte → Int 
--   this gives the Int corresponding to the unsigned interpretation of the Byte    
@url http://www.frege-lang.org/doc/frege/java/Lang#Byte
data Byte 

-- | this gives the Int corresponding to the signed interpretation of the Byte  
@url http://www.frege-lang.org/doc/frege/java/Lang#Byte.signed
signed ∷ Byte → Int 
pure native (int)

-- | this gives the Int corresponding to the unsigned interpretation of the Byte  
@url http://www.frege-lang.org/doc/frege/java/Lang#Byte.unsigned
unsigned ∷ Byte → Int

-- | convert an Int to a Byte by chopping off the leading 24 bits.  
@url http://www.frege-lang.org/doc/frege/java/Lang#_byte
byte ∷ Int → Byte 
pure native (byte)

-- |Short is the Frege type for the primitive JVM short 
--   However, it is given unsigend semantics in Frege. 
--   Use Short only in JArrays or tightly packed records! 
--   Otherwise you'll waste time while not saving space.  
--   Member Functions
--  ----------------
--  signed ∷ Short → Int 
--  pure native (int) 
--   this gives the Int corresponding to the signed interpretation of Short   
--  unsigned ∷ Short → Int 
--   this gives the Int corresponding to the unsigned interpretation of Short    
@url http://www.frege-lang.org/doc/frege/java/Lang#Short
data Short 

-- | this gives the Int corresponding to the signed interpretation of Short  
@url http://www.frege-lang.org/doc/frege/java/Lang#Short.signed
signed ∷ Short → Int 
pure native (int)

-- | this gives the Int corresponding to the unsigned interpretation of Short  
@url http://www.frege-lang.org/doc/frege/java/Lang#Short.unsigned
unsigned ∷ Short → Int

-- | convert an Int to a Short by chopping off the leading 16 bits.  
@url http://www.frege-lang.org/doc/frege/java/Lang#_short
short ∷ Int → Short 
pure native (short)


@url http://www.frege-lang.org/doc/frege/java/Lang#JEnum
data JEnum e 


@url http://www.frege-lang.org/doc/frege/java/Net#MalformedURLException
data MalformedURLException 


@url http://www.frege-lang.org/doc/frege/java/Net#URISyntaxException
data URISyntaxException 

-- | Frege type for java.net.URL, note that we do not support operations that mutate the URL, hence we regard every instance as immutable. 
--   Member Functions
--  ----------------
--  new ∷ String → IO URL 
--           throws MalformedURLException 
--       | URL → String → IO URL 
--           throws MalformedURLException 
--  native new 
--  newα ∷ String → IO URL 
--  native new  throws MalformedURLException  overloads new 
--  newβ ∷ URL → String → IO URL 
--  native new  throws MalformedURLException  overloads new 
--  openConnection ∷ URL → IO URLConnection 
--  native openConnection  throws IOException 
--   convenience method to get a URLConnection   
--  openStream ∷ URL → IO InputStream 
--  native openStream  throws IOException 
--  toString ∷ URL → String 
--  pure native toString 

@url http://www.frege-lang.org/doc/frege/java/Net#URL
data URL 


@url http://www.frege-lang.org/doc/frege/java/Net#URL._new
new ∷ String → IO URL 
         throws MalformedURLException 
     | URL → String → IO URL 
         throws MalformedURLException 
native new


@url http://www.frege-lang.org/doc/frege/java/Net#URL.newα
newα ∷ String → IO URL 
native new  throws MalformedURLException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Net#URL.newβ
newβ ∷ URL → String → IO URL 
native new  throws MalformedURLException  overloads new

-- | convenience method to get a URLConnection  
@url http://www.frege-lang.org/doc/frege/java/Net#URL.openConnection
openConnection ∷ URL → IO URLConnection 
native openConnection  throws IOException


@url http://www.frege-lang.org/doc/frege/java/Net#URL.openStream
openStream ∷ URL → IO InputStream 
native openStream  throws IOException


@url http://www.frege-lang.org/doc/frege/java/Net#URL.toString
toString ∷ URL → String 
pure native toString


@url http://www.frege-lang.org/doc/frege/java/Net#URLArray
type URLArray = JArray URL

-- | Member Functions
--  ----------------
--  connect ∷ URLConnection → IO () 
--  native connect  throws IOException 
--  getContentType ∷ URLConnection → IO (Maybe String) 
--  native getContentType 
--  getInputStream ∷ URLConnection → IO InputStream 
--  native getInputStream  throws IOException 

@url http://www.frege-lang.org/doc/frege/java/Net#URLConnection
data URLConnection 


@url http://www.frege-lang.org/doc/frege/java/Net#URLConnection.connect
connect ∷ URLConnection → IO () 
native connect  throws IOException


@url http://www.frege-lang.org/doc/frege/java/Net#URLConnection.getContentType
getContentType ∷ URLConnection → IO (Maybe String) 
native getContentType


@url http://www.frege-lang.org/doc/frege/java/Net#URLConnection.getInputStream
getInputStream ∷ URLConnection → IO InputStream 
native getInputStream  throws IOException

-- | Member Functions
--  ----------------
--  create ∷ String → URI 
--  pure native java.net.URI.create 
--  new ∷ String → (URISyntaxException | URI) 
--  pure native new 
--  relativize ∷ URI → URI → URI 
--  pure native relativize 
--  toASCIIString ∷ URI → String 
--  pure native toASCIIString 
--  toString ∷ URI → String 
--  pure native toString 
--  toURL ∷ URI → (MalformedURLException | URL) 
--  pure native toURL 

@url http://www.frege-lang.org/doc/frege/java/Net#URI
data URI 


@url http://www.frege-lang.org/doc/frege/java/Net#URI.create
create ∷ String → URI 
pure native java.net.URI.create


@url http://www.frege-lang.org/doc/frege/java/Net#URI._new
new ∷ String → (URISyntaxException | URI) 
pure native new


@url http://www.frege-lang.org/doc/frege/java/Net#URI.relativize
relativize ∷ URI → URI → URI 
pure native relativize


@url http://www.frege-lang.org/doc/frege/java/Net#URI.toASCIIString
toASCIIString ∷ URI → String 
pure native toASCIIString


@url http://www.frege-lang.org/doc/frege/java/Net#URI.toString
toString ∷ URI → String 
pure native toString


@url http://www.frege-lang.org/doc/frege/java/Net#URI.toURL
toURL ∷ URI → (MalformedURLException | URL) 
pure native toURL

-- | Member Functions
--  ----------------
--  findResource ∷ URLClassLoader → String → IO (Maybe URL) 
--  native findResource 
--  getResource ∷ URLClassLoader → String → IO (Maybe URL) 
--  native getResource 
--  loadClass ∷ URLClassLoader → String → IO (ClassNotFoundException | Class a) 
--  native loadClass 
--  new ∷ ArrayOf RealWorld URL → ClassLoader → IO URLClassLoader 
--  native new 

@url http://www.frege-lang.org/doc/frege/java/Net#URLClassLoader
data URLClassLoader 


@url http://www.frege-lang.org/doc/frege/java/Net#URLClassLoader.findResource
findResource ∷ URLClassLoader → String → IO (Maybe URL) 
native findResource


@url http://www.frege-lang.org/doc/frege/java/Net#URLClassLoader.getResource
getResource ∷ URLClassLoader → String → IO (Maybe URL) 
native getResource


@url http://www.frege-lang.org/doc/frege/java/Net#URLClassLoader.loadClass
loadClass ∷ URLClassLoader → String → IO (ClassNotFoundException | Class a) 
native loadClass


@url http://www.frege-lang.org/doc/frege/java/Net#URLClassLoader._new
new ∷ ArrayOf RealWorld URL → ClassLoader → IO URLClassLoader 
native new

-- | this is defined as an abstract type so as to enable the access to the constants in the usual way. 
--   Note that the constants are in lowercase, in contrast to Java. 
--   Member Functions
--  ----------------
--  bottom ∷ Int 
--  pure native javax.swing.SwingConstants.BOTTOM 
--  center ∷ Int 
--  pure native javax.swing.SwingConstants.CENTER 
--  east ∷ Int 
--  pure native javax.swing.SwingConstants.EAST 
--  horizontal ∷ Int 
--  pure native javax.swing.SwingConstants.HORIZONTAL 
--  leading ∷ Int 
--  pure native javax.swing.SwingConstants.LEADING 
--  left ∷ Int 
--  pure native javax.swing.SwingConstants.LEFT 
--  next ∷ Int 
--  pure native javax.swing.SwingConstants.NEXT 
--  north ∷ Int 
--  pure native javax.swing.SwingConstants.NORTH 
--  north_east ∷ Int 
--  pure native javax.swing.SwingConstants.NORTH_EAST 
--  north_west ∷ Int 
--  pure native javax.swing.SwingConstants.NORTH_WEST 
--  previous ∷ Int 
--  pure native javax.swing.SwingConstants.PREVIOUS 
--  right ∷ Int 
--  pure native javax.swing.SwingConstants.RIGHT 
--  south ∷ Int 
--  pure native javax.swing.SwingConstants.SOUTH 
--  south_east ∷ Int 
--  pure native javax.swing.SwingConstants.SOUTH_EAST 
--  south_west ∷ Int 
--  pure native javax.swing.SwingConstants.SOUTH_WEST 
--  top ∷ Int 
--  pure native javax.swing.SwingConstants.TOP 
--  trailing ∷ Int 
--  pure native javax.swing.SwingConstants.TRAILING 
--  vertical ∷ Int 
--  pure native javax.swing.SwingConstants.VERTICAL 
--  west ∷ Int 
--  pure native javax.swing.SwingConstants.WEST 

@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants
data SwingConstants 


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.bottom
bottom ∷ Int 
pure native javax.swing.SwingConstants.BOTTOM


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.center
center ∷ Int 
pure native javax.swing.SwingConstants.CENTER


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.east
east ∷ Int 
pure native javax.swing.SwingConstants.EAST


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.horizontal
horizontal ∷ Int 
pure native javax.swing.SwingConstants.HORIZONTAL


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.leading
leading ∷ Int 
pure native javax.swing.SwingConstants.LEADING


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.left
left ∷ Int 
pure native javax.swing.SwingConstants.LEFT


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.next
next ∷ Int 
pure native javax.swing.SwingConstants.NEXT


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.north
north ∷ Int 
pure native javax.swing.SwingConstants.NORTH


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.north_east
north_east ∷ Int 
pure native javax.swing.SwingConstants.NORTH_EAST


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.north_west
north_west ∷ Int 
pure native javax.swing.SwingConstants.NORTH_WEST


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.previous
previous ∷ Int 
pure native javax.swing.SwingConstants.PREVIOUS


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.right
right ∷ Int 
pure native javax.swing.SwingConstants.RIGHT


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.south
south ∷ Int 
pure native javax.swing.SwingConstants.SOUTH


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.south_east
south_east ∷ Int 
pure native javax.swing.SwingConstants.SOUTH_EAST


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.south_west
south_west ∷ Int 
pure native javax.swing.SwingConstants.SOUTH_WEST


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.top
top ∷ Int 
pure native javax.swing.SwingConstants.TOP


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.trailing
trailing ∷ Int 
pure native javax.swing.SwingConstants.TRAILING


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.vertical
vertical ∷ Int 
pure native javax.swing.SwingConstants.VERTICAL


@url http://www.frege-lang.org/doc/frege/java/Swing#SwingConstants.west
west ∷ Int 
pure native javax.swing.SwingConstants.WEST

-- | A javax.swing.JFrame  
--   Member Functions
--  ----------------
--  dispose_on_close ∷ Int 
--  pure native javax.swing.JFrame.DISPOSE_ON_CLOSE 
--   constant to dispose of the window when closed   
--  do_nothing_on_close ∷ Int 
--  pure native javax.swing.JFrame.DO_NOTHING_ON_CLOSE 
--   constant to do nothing when closed   
--  exit_on_close ∷ Int 
--  pure native javax.swing.JFrame.EXIT_ON_CLOSE 
--   constant to exit the application when closed   
--  getContentPane ∷ JFrame → IO Container 
--  native getContentPane 
--  hide_on_close ∷ Int 
--  pure native javax.swing.JFrame.HIDE_ON_CLOSE 
--   constant to hide the window when closed   
--  new ∷ String → IO JFrame 
--       | () → IO JFrame 
--  native new 
--   The first form creates a new invisible frame with the specified title 
--   The second form creates a new invisible frame   
--  newα ∷ String → IO JFrame 
--  native new  overloads new 
--   The first form creates a new invisible frame with the specified title 
--   The second form creates a new invisible frame   
--  newβ ∷ () → IO JFrame 
--  native new  overloads new 
--   The first form creates a new invisible frame with the specified title 
--   The second form creates a new invisible frame   
--  setContentPane ∷ JFrame → Container → IO () 
--  native setContentPane 
--   this really belongs to interface RootPaneContainer   
--  setDefaultCloseOperation ∷ JFrame → Int → IO () 
--  native setDefaultCloseOperation 
--   Sets the operation that will happen by default when the user initiates a "close" on this frame.    
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame
data JFrame 

-- | constant to dispose of the window when closed  
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame.dispose_on_close
dispose_on_close ∷ Int 
pure native javax.swing.JFrame.DISPOSE_ON_CLOSE

-- | constant to do nothing when closed  
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame.do_nothing_on_close
do_nothing_on_close ∷ Int 
pure native javax.swing.JFrame.DO_NOTHING_ON_CLOSE

-- | constant to exit the application when closed  
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame.exit_on_close
exit_on_close ∷ Int 
pure native javax.swing.JFrame.EXIT_ON_CLOSE


@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame.getContentPane
getContentPane ∷ JFrame → IO Container 
native getContentPane

-- | constant to hide the window when closed  
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame.hide_on_close
hide_on_close ∷ Int 
pure native javax.swing.JFrame.HIDE_ON_CLOSE

-- | The first form creates a new invisible frame with the specified title 
--   The second form creates a new invisible frame  
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame._new
new ∷ String → IO JFrame 
     | () → IO JFrame 
native new

-- | The first form creates a new invisible frame with the specified title 
--   The second form creates a new invisible frame  
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame.newα
newα ∷ String → IO JFrame 
native new  overloads new

-- | The first form creates a new invisible frame with the specified title 
--   The second form creates a new invisible frame  
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame.newβ
newβ ∷ () → IO JFrame 
native new  overloads new

-- | this really belongs to interface RootPaneContainer  
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame.setContentPane
setContentPane ∷ JFrame → Container → IO () 
native setContentPane

-- | Sets the operation that will happen by default when the user initiates a "close" on this frame.  
@url http://www.frege-lang.org/doc/frege/java/Swing#JFrame.setDefaultCloseOperation
setDefaultCloseOperation ∷ JFrame → Int → IO () 
native setDefaultCloseOperation

-- | a swing label  
--   Member Functions
--  ----------------
--  new ∷ String → IO JLabel 
--       | () → IO JLabel 
--  native new 
--   create a label or a blank label   
--  newα ∷ String → IO JLabel 
--  native new  overloads new 
--   create a label or a blank label   
--  newβ ∷ () → IO JLabel 
--  native new  overloads new 
--   create a label or a blank label   
--  setText ∷ JLabel → String → IO () 
--  native setText 
--   Defines the single line of text this component will display.    
@url http://www.frege-lang.org/doc/frege/java/Swing#JLabel
data JLabel 

-- | create a label or a blank label  
@url http://www.frege-lang.org/doc/frege/java/Swing#JLabel._new
new ∷ String → IO JLabel 
     | () → IO JLabel 
native new

-- | create a label or a blank label  
@url http://www.frege-lang.org/doc/frege/java/Swing#JLabel.newα
newα ∷ String → IO JLabel 
native new  overloads new

-- | create a label or a blank label  
@url http://www.frege-lang.org/doc/frege/java/Swing#JLabel.newβ
newβ ∷ () → IO JLabel 
native new  overloads new

-- | Defines the single line of text this component will display.  
@url http://www.frege-lang.org/doc/frege/java/Swing#JLabel.setText
setText ∷ JLabel → String → IO () 
native setText

-- | wrapper for javax.swing.SwingUtilities.invokeLater  
@url http://www.frege-lang.org/doc/frege/java/Swing#invokeLater
invokeLater ∷ MutableIO Runnable → IO () 
native javax.swing.SwingUtilities.invokeLater

-- | wrapper for javax.swing.SwingUtilities.invokeAndWait  
@url http://www.frege-lang.org/doc/frege/java/Swing#invokeAndWait
invokeAndWait ∷ MutableIO Runnable → IO () 
native javax.swing.SwingUtilities.invokeAndWait  throws InvocationTargetException, InterruptedException

-- | an object with compiler time type javax.swing.JComponent  
--   Member Functions
--  ----------------
--  setOpaque ∷ JComponent → Bool → IO () 
--  native setOpaque 

@url http://www.frege-lang.org/doc/frege/java/Swing#JComponent
data JComponent 


@url http://www.frege-lang.org/doc/frege/java/Swing#JComponent.setOpaque
setOpaque ∷ JComponent → Bool → IO () 
native setOpaque

-- | an object with compiler time type javax.swing.JPanel  
--   Member Functions
--  ----------------
--  new ∷ () → IO JPanel 
--  native new 

@url http://www.frege-lang.org/doc/frege/java/Swing#JPanel
data JPanel 


@url http://www.frege-lang.org/doc/frege/java/Swing#JPanel._new
new ∷ () → IO JPanel 
native new

-- | an object with compiler time type javax.swing.AbstractButton  
--   Member Functions
--  ----------------
--  addActionListener ∷ AbstractButton → ActionListener → IO () 
--  native addActionListener 
--   Adds an ActionListener to the button.   
--  setHorizontalTextPosition ∷ AbstractButton → Int → IO () 
--  native setHorizontalTextPosition 
--   Sets the horizontal position of the text relative to the icon.   
--  setText ∷ AbstractButton → String → IO () 
--  native setText 
--   set a text   
--  setVerticalTextPosition ∷ AbstractButton → Int → IO () 
--  native setVerticalTextPosition 
--   Sets the vertical position of the text relative to the icon.    
@url http://www.frege-lang.org/doc/frege/java/Swing#AbstractButton
data AbstractButton 

-- | Adds an ActionListener to the button.  
@url http://www.frege-lang.org/doc/frege/java/Swing#AbstractButton.addActionListener
addActionListener ∷ AbstractButton → ActionListener → IO () 
native addActionListener

-- | Sets the horizontal position of the text relative to the icon.  
@url http://www.frege-lang.org/doc/frege/java/Swing#AbstractButton.setHorizontalTextPosition
setHorizontalTextPosition ∷ AbstractButton → Int → IO () 
native setHorizontalTextPosition

-- | set a text  
@url http://www.frege-lang.org/doc/frege/java/Swing#AbstractButton.setText
setText ∷ AbstractButton → String → IO () 
native setText

-- | Sets the vertical position of the text relative to the icon.  
@url http://www.frege-lang.org/doc/frege/java/Swing#AbstractButton.setVerticalTextPosition
setVerticalTextPosition ∷ AbstractButton → Int → IO () 
native setVerticalTextPosition

-- | an object with compiler time type javax.swing.JButton  
--   Member Functions
--  ----------------
--  new ∷ String → IO JButton 
--       | () → IO JButton 
--  native new 
--   create a button with label or a blank one   
--  newα ∷ String → IO JButton 
--  native new  overloads new 
--   create a button with label or a blank one   
--  newβ ∷ () → IO JButton 
--  native new  overloads new 
--   create a button with label or a blank one    
@url http://www.frege-lang.org/doc/frege/java/Swing#JButton
data JButton 

-- | create a button with label or a blank one  
@url http://www.frege-lang.org/doc/frege/java/Swing#JButton._new
new ∷ String → IO JButton 
     | () → IO JButton 
native new

-- | create a button with label or a blank one  
@url http://www.frege-lang.org/doc/frege/java/Swing#JButton.newα
newα ∷ String → IO JButton 
native new  overloads new

-- | create a button with label or a blank one  
@url http://www.frege-lang.org/doc/frege/java/Swing#JButton.newβ
newβ ∷ () → IO JButton 
native new  overloads new

-- | Member Functions
--  ----------------
--  getText ∷ JTextComponent → IO String 
--  native getText 
--  setText ∷ JTextComponent → String → IO () 
--  native setText 

@url http://www.frege-lang.org/doc/frege/java/Swing#JTextComponent
data JTextComponent 


@url http://www.frege-lang.org/doc/frege/java/Swing#JTextComponent.getText
getText ∷ JTextComponent → IO String 
native getText


@url http://www.frege-lang.org/doc/frege/java/Swing#JTextComponent.setText
setText ∷ JTextComponent → String → IO () 
native setText

-- | an object with compile time type javax.swing.JTextField  
--   Member Functions
--  ----------------
--  new ∷ () → IO JTextField 
--  native new 

@url http://www.frege-lang.org/doc/frege/java/Swing#JTextField
data JTextField 


@url http://www.frege-lang.org/doc/frege/java/Swing#JTextField._new
new ∷ () → IO JTextField 
native new

-- | Member Functions
--  ----------------
--  new ∷ Container → IO GroupLayout 
--  native new 
--  setHorizontalGroup ∷ GroupLayout → Group → IO () 
--  native setHorizontalGroup 

@url http://www.frege-lang.org/doc/frege/java/Swing#GroupLayout
data GroupLayout 


@url http://www.frege-lang.org/doc/frege/java/Swing#GroupLayout._new
new ∷ Container → IO GroupLayout 
native new


@url http://www.frege-lang.org/doc/frege/java/Swing#GroupLayout.setHorizontalGroup
setHorizontalGroup ∷ GroupLayout → Group → IO () 
native setHorizontalGroup


@url http://www.frege-lang.org/doc/frege/java/Util#NoSuchElementException
data NoSuchElementException 

-- | Member Functions
--  ----------------
--  hasMoreElements ∷ Mutable s (Enumeration e) → ST s Bool 
--  native hasMoreElements 
--  nextElement ∷ Mutable s (Enumeration e) → ST s e 
--  native nextElement  throws NoSuchElementException 
--  toList ∷ Mutable s (Enumeration e) → ST s [e] 

@url http://www.frege-lang.org/doc/frege/java/Util#Enumeration
data Enumeration e 


@url http://www.frege-lang.org/doc/frege/java/Util#Enumeration.hasMoreElements
hasMoreElements ∷ Mutable s (Enumeration e) → ST s Bool 
native hasMoreElements


@url http://www.frege-lang.org/doc/frege/java/Util#Enumeration.nextElement
nextElement ∷ Mutable s (Enumeration e) → ST s e 
native nextElement  throws NoSuchElementException


@url http://www.frege-lang.org/doc/frege/java/Util#Enumeration.toList
toList ∷ Mutable s (Enumeration e) → ST s [e]

-- | A value of this type is used to generate a stream of pseudorandom numbers. The type uses a 48-bit seed, which is modified using a linear congruential formula. (See Donald Knuth, The Art of Computer Programming, Volume 2, Section 3.2.1.) 
--   If two Random values are created with the same seed, and the same sequence of method calls is made for each, they will generate and return identical sequences of numbers. In order to guarantee this property, particular algorithms are specified for the class Random. 
--   Many applications will find the function random simpler to use. 
--   Member Functions
--  ----------------
--  new ∷ () → STMutable RealWorld Random 
--       | Long → STMutable s Random 
--  native new 
--   Create a new random number generator. 
--   If no seed is given, a value very likely to be distinct from any other invocation of the constructor will be computed from the state of the real world.  
--  newα ∷ () → STMutable RealWorld Random 
--  native new  overloads new 
--   Create a new random number generator. 
--   If no seed is given, a value very likely to be distinct from any other invocation of the constructor will be computed from the state of the real world.  
--  newβ ∷ Long → STMutable s Random 
--  native new  overloads new 
--   Create a new random number generator. 
--   If no seed is given, a value very likely to be distinct from any other invocation of the constructor will be computed from the state of the real world.  
--  nextBoolean ∷ Mutable s Random → ST s Bool 
--  native nextBoolean 
--   Returns the next pseudorandom, uniformly distributed Bool value from this random number generator's sequence.  
--  nextDouble ∷ Mutable s Random → ST s Double 
--  native nextDouble 
--   Returns the next pseudorandom, uniformly distributed Double value between 0.0 and 1.0 from this random number generator's sequence.  
--  nextFloat ∷ Mutable s Random → ST s Float 
--  native nextFloat 
--   Returns the next pseudorandom, uniformly distributed Float value between 0.0 and 1.0 from this random number generator's sequence.  
--  nextGaussian ∷ Mutable s Random → ST s Double 
--  native nextGaussian 
--   Returns the next pseudorandom, Gaussian ("normally") distributed Double value with mean 0.0 and standard deviation 1.0 from this random number generator's sequence.  
--  nextInt ∷ Mutable s Random → ST s Int 
--           | Mutable s Random → Int → ST s Int 
--  native nextInt 
--   random.nextInt 
--   Returns the next pseudorandom, uniformly distributed Int value from this random number generator's sequence. 
--   random.nextInt limit 
--   Returns a pseudorandom, uniformly distributed Int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence. The limit must be positive.  
--  nextIntα ∷ Mutable s Random → ST s Int 
--  native nextInt  overloads nextInt 
--   random.nextInt 
--   Returns the next pseudorandom, uniformly distributed Int value from this random number generator's sequence. 
--   random.nextInt limit 
--   Returns a pseudorandom, uniformly distributed Int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence. The limit must be positive.  
--  nextIntβ ∷ Mutable s Random → Int → ST s Int 
--  native nextInt  overloads nextInt 
--   random.nextInt 
--   Returns the next pseudorandom, uniformly distributed Int value from this random number generator's sequence. 
--   random.nextInt limit 
--   Returns a pseudorandom, uniformly distributed Int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence. The limit must be positive.  
--  nextLong ∷ Mutable s Random → ST s Long 
--  native nextLong 
--   Returns the next pseudorandom, uniformly distributed Long value from this random number generator's sequence.  
--  setSeed ∷ Mutable s Random → Long → ST s () 
--  native setSeed 
--   Sets the seed of this random number generator using a single long seed.    
@url http://www.frege-lang.org/doc/frege/java/Util#Random
data Random 

-- | Create a new random number generator. 
--   If no seed is given, a value very likely to be distinct from any other invocation of the constructor will be computed from the state of the real world. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random._new
new ∷ () → STMutable RealWorld Random 
     | Long → STMutable s Random 
native new

-- | Create a new random number generator. 
--   If no seed is given, a value very likely to be distinct from any other invocation of the constructor will be computed from the state of the real world. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.newα
newα ∷ () → STMutable RealWorld Random 
native new  overloads new

-- | Create a new random number generator. 
--   If no seed is given, a value very likely to be distinct from any other invocation of the constructor will be computed from the state of the real world. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.newβ
newβ ∷ Long → STMutable s Random 
native new  overloads new

-- | Returns the next pseudorandom, uniformly distributed Bool value from this random number generator's sequence. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.nextBoolean
nextBoolean ∷ Mutable s Random → ST s Bool 
native nextBoolean

-- | Returns the next pseudorandom, uniformly distributed Double value between 0.0 and 1.0 from this random number generator's sequence. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.nextDouble
nextDouble ∷ Mutable s Random → ST s Double 
native nextDouble

-- | Returns the next pseudorandom, uniformly distributed Float value between 0.0 and 1.0 from this random number generator's sequence. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.nextFloat
nextFloat ∷ Mutable s Random → ST s Float 
native nextFloat

-- | Returns the next pseudorandom, Gaussian ("normally") distributed Double value with mean 0.0 and standard deviation 1.0 from this random number generator's sequence. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.nextGaussian
nextGaussian ∷ Mutable s Random → ST s Double 
native nextGaussian

-- | random.nextInt 
--   Returns the next pseudorandom, uniformly distributed Int value from this random number generator's sequence. 
--   random.nextInt limit 
--   Returns a pseudorandom, uniformly distributed Int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence. The limit must be positive. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.nextInt
nextInt ∷ Mutable s Random → ST s Int 
         | Mutable s Random → Int → ST s Int 
native nextInt

-- | random.nextInt 
--   Returns the next pseudorandom, uniformly distributed Int value from this random number generator's sequence. 
--   random.nextInt limit 
--   Returns a pseudorandom, uniformly distributed Int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence. The limit must be positive. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.nextIntα
nextIntα ∷ Mutable s Random → ST s Int 
native nextInt  overloads nextInt

-- | random.nextInt 
--   Returns the next pseudorandom, uniformly distributed Int value from this random number generator's sequence. 
--   random.nextInt limit 
--   Returns a pseudorandom, uniformly distributed Int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence. The limit must be positive. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.nextIntβ
nextIntβ ∷ Mutable s Random → Int → ST s Int 
native nextInt  overloads nextInt

-- | Returns the next pseudorandom, uniformly distributed Long value from this random number generator's sequence. 
@url http://www.frege-lang.org/doc/frege/java/Util#Random.nextLong
nextLong ∷ Mutable s Random → ST s Long 
native nextLong

-- | Sets the seed of this random number generator using a single long seed.  
@url http://www.frege-lang.org/doc/frege/java/Util#Random.setSeed
setSeed ∷ Mutable s Random → Long → ST s () 
native setSeed

-- | An Entry maintaining an immutable key and value. This class does not support method setValue. This class may be convenient in methods that return thread-safe snapshots of key-value mappings. 
--   Member Functions
--  ----------------
--  equals ∷ AbstractMapSimpleImmutableEntry k v → Object → Bool 
--  pure native equals 
--  getKey ∷ AbstractMapSimpleImmutableEntry k v → k 
--  pure native getKey 
--  getValue ∷ AbstractMapSimpleImmutableEntry k v → v 
--  pure native getValue 
--  hashCode ∷ AbstractMapSimpleImmutableEntry k v → Int 
--  pure native hashCode 
--  new ∷ k → v → ST s (AbstractMapSimpleImmutableEntry k v) 
--       | Mutable s (MapEntry k v) → ST s (AbstractMapSimpleImmutableEntry k v) 
--  native new 
--   Creates an entry representing a mapping from the specified key to the specified value or if an entry is provided, it creates an entry representing the same mapping as the specified entry.  
--  newα ∷ k → v → ST s (AbstractMapSimpleImmutableEntry k v) 
--  native new  overloads new 
--   Creates an entry representing a mapping from the specified key to the specified value or if an entry is provided, it creates an entry representing the same mapping as the specified entry.  
--  newβ ∷ Mutable s (MapEntry k v) → ST s (AbstractMapSimpleImmutableEntry k v) 
--  native new  overloads new 
--   Creates an entry representing a mapping from the specified key to the specified value or if an entry is provided, it creates an entry representing the same mapping as the specified entry.  
--  toString ∷ AbstractMapSimpleImmutableEntry k v → String 
--  pure native toString 

@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleImmutableEntry
data AbstractMapSimpleImmutableEntry k v 


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleImmutableEntry.equals
equals ∷ AbstractMapSimpleImmutableEntry k v → Object → Bool 
pure native equals


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleImmutableEntry.getKey
getKey ∷ AbstractMapSimpleImmutableEntry k v → k 
pure native getKey


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleImmutableEntry.getValue
getValue ∷ AbstractMapSimpleImmutableEntry k v → v 
pure native getValue


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleImmutableEntry.hashCode
hashCode ∷ AbstractMapSimpleImmutableEntry k v → Int 
pure native hashCode

-- | Creates an entry representing a mapping from the specified key to the specified value or if an entry is provided, it creates an entry representing the same mapping as the specified entry. 
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleImmutableEntry._new
new ∷ k → v → ST s (AbstractMapSimpleImmutableEntry k v) 
     | Mutable s (MapEntry k v) → ST s (AbstractMapSimpleImmutableEntry k v) 
native new

-- | Creates an entry representing a mapping from the specified key to the specified value or if an entry is provided, it creates an entry representing the same mapping as the specified entry. 
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleImmutableEntry.newα
newα ∷ k → v → ST s (AbstractMapSimpleImmutableEntry k v) 
native new  overloads new

-- | Creates an entry representing a mapping from the specified key to the specified value or if an entry is provided, it creates an entry representing the same mapping as the specified entry. 
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleImmutableEntry.newβ
newβ ∷ Mutable s (MapEntry k v) → ST s (AbstractMapSimpleImmutableEntry k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleImmutableEntry.toString
toString ∷ AbstractMapSimpleImmutableEntry k v → String 
pure native toString


@url http://www.frege-lang.org/doc/frege/java/Util#Reader
data Reader 


@url http://www.frege-lang.org/doc/frege/java/Util#File
data File 


@url http://www.frege-lang.org/doc/frege/java/Util#FileNotFoundException
data FileNotFoundException 

-- | From Javadoc: A comparison function, which imposes a total ordering on some collection of objects. Comparators can be passed to a sort method (such as Collections.sort or Arrays.sort) to allow precise control over the sort order. Comparators can also be used to control the order of certain data structures (such as sorted sets or sorted maps), or to provide an ordering for collections of objects that don't have a natural ordering. 
--   More: Comparator JavaDoc 
--   Member Functions
--  ----------------
--  compare ∷ Comparator t → t → t → Int 
--  pure native compare 
--  equals ∷ Comparator t → Object → Bool 
--  pure native equals 

@url http://www.frege-lang.org/doc/frege/java/Util#Comparator
data Comparator t 


@url http://www.frege-lang.org/doc/frege/java/Util#Comparator.compare
compare ∷ Comparator t → t → t → Int 
pure native compare


@url http://www.frege-lang.org/doc/frege/java/Util#Comparator.equals
equals ∷ Comparator t → Object → Bool 
pure native equals

-- | This class provides a skeletal implementation of the Set interface to minimize the effort required to implement this interface. The process of implementing a set by extending this class is identical to that of implementing a Collection by extending AbstractCollection, except that all of the methods and constructors in subclasses of this class must obey the additional constraints imposed by the Set interface (for instance, the add method must not permit addition of multiple instances of an object to a set). 
--   Note that this class does not override any of the implementations from the AbstractCollection class. It merely adds implementations for equals and hashCode. 
--   Member Functions
--  ----------------
--  equals ∷ Mutable s (AbstractSet e) → Object → ST s Bool 
--  native equals 
--  hashCode ∷ Mutable s (AbstractSet e) → ST s Int 
--  native hashCode 
--  removeAll ∷ Mutable s (AbstractSet e) → Mutable s (Collection Object) → ST s Bool 
--  native removeAll 

@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSet
data AbstractSet e 


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSet.equals
equals ∷ Mutable s (AbstractSet e) → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSet.hashCode
hashCode ∷ Mutable s (AbstractSet e) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSet.removeAll
removeAll ∷ Mutable s (AbstractSet e) → Mutable s (Collection Object) → ST s Bool 
native removeAll

-- | The Stack class represents a last-in-first-out (LIFO) stack of objects. It extends class Vector with five operations that allow a vector to be treated as a stack. The usual push and pop operations are provided, as well as a method to peek at the top item on the stack, a method to test for whether the stack is empty, and a method to search the stack for an item and discover how far it is from the top. 
--   When a stack is first created, it contains no items. 
--   A more complete and consistent set of LIFO stack operations is provided by the Deque interface and its implementations, which should be used in preference to this class. For example: 
--   Deque<Integer> stack = new ArrayDeque<Integer>(); 
--   Member Functions
--  ----------------
--  empty ∷ Mutable s (Stack e) → ST s Bool 
--  native empty 
--   Tests if this stack is empty.   
--  new ∷ () → STMutable s (Stack e) 
--  native new 
--   Creates an empty Stack.   
--  peek ∷ Mutable s (Stack e) → ST s e 
--  native peek 
--   Looks at the object at the top of this stack without removing it from the stack.   
--  pop ∷ Mutable s (Stack e) → ST s e 
--  native pop 
--   Removes the object at the top of this stack and returns that object as the value of this function.   
--  push ∷ Mutable s (Stack e) → e → ST s e 
--  native push 
--   Pushes an item onto the top of this stack.   
--  search ∷ Mutable s (Stack e) → Object → ST s Int 
--  native search 
--   Returns the 1-based position where an object is on this stack.    
@url http://www.frege-lang.org/doc/frege/java/Util#Stack
data Stack e 

-- | Tests if this stack is empty.  
@url http://www.frege-lang.org/doc/frege/java/Util#Stack.empty
empty ∷ Mutable s (Stack e) → ST s Bool 
native empty

-- | Creates an empty Stack.  
@url http://www.frege-lang.org/doc/frege/java/Util#Stack._new
new ∷ () → STMutable s (Stack e) 
native new

-- | Looks at the object at the top of this stack without removing it from the stack.  
@url http://www.frege-lang.org/doc/frege/java/Util#Stack.peek
peek ∷ Mutable s (Stack e) → ST s e 
native peek

-- | Removes the object at the top of this stack and returns that object as the value of this function.  
@url http://www.frege-lang.org/doc/frege/java/Util#Stack.pop
pop ∷ Mutable s (Stack e) → ST s e 
native pop

-- | Pushes an item onto the top of this stack.  
@url http://www.frege-lang.org/doc/frege/java/Util#Stack.push
push ∷ Mutable s (Stack e) → e → ST s e 
native push

-- | Returns the 1-based position where an object is on this stack.  
@url http://www.frege-lang.org/doc/frege/java/Util#Stack.search
search ∷ Mutable s (Stack e) → Object → ST s Int 
native search

-- | A Set that further provides a total ordering on its elements. More: SortedSet JavaDoc 
--   Member Functions
--  ----------------
--  comparator ∷ Mutable s (SortedSet e) → ST s (Comparator e) 
--  native comparator 
--   Returns the comparator used to order the elements in this set, or null if this set uses the 
--  natural ordering of its elements.   
--  first ∷ Mutable s (SortedSet e) → ST s e 
--  native first 
--   Returns the first (lowest) element currently in this set.   
--  headSet ∷ Mutable s (SortedSet e) → e → STMutable s (SortedSet e) 
--  native headSet 
--   Returns a view of the portion of this set whose elements are strictly less than toElement.   
--  last ∷ Mutable s (SortedSet e) → ST s e 
--  native last 
--   Returns the last (highest) element currently in this set.   
--  subSet ∷ Mutable s (SortedSet e) → e → e → STMutable s (SortedSet e) 
--  native subSet 
--   Returns a view of the portion of this set whose elements range from fromElement, inclusive, to toElement, exclusive.   
--  tailSet ∷ Mutable s (SortedSet e) → e → STMutable s (SortedSet e) 
--  native tailSet 
--   Returns a view of the portion of this set whose elements are greater than or equal to fromElement.    
@url http://www.frege-lang.org/doc/frege/java/Util#SortedSet
data SortedSet e 

-- | Returns the comparator used to order the elements in this set, or null if this set uses the 
--  natural ordering of its elements.  
@url http://www.frege-lang.org/doc/frege/java/Util#SortedSet.comparator
comparator ∷ Mutable s (SortedSet e) → ST s (Comparator e) 
native comparator

-- | Returns the first (lowest) element currently in this set.  
@url http://www.frege-lang.org/doc/frege/java/Util#SortedSet.first
first ∷ Mutable s (SortedSet e) → ST s e 
native first

-- | Returns a view of the portion of this set whose elements are strictly less than toElement.  
@url http://www.frege-lang.org/doc/frege/java/Util#SortedSet.headSet
headSet ∷ Mutable s (SortedSet e) → e → STMutable s (SortedSet e) 
native headSet

-- | Returns the last (highest) element currently in this set.  
@url http://www.frege-lang.org/doc/frege/java/Util#SortedSet.last
last ∷ Mutable s (SortedSet e) → ST s e 
native last

-- | Returns a view of the portion of this set whose elements range from fromElement, inclusive, to toElement, exclusive.  
@url http://www.frege-lang.org/doc/frege/java/Util#SortedSet.subSet
subSet ∷ Mutable s (SortedSet e) → e → e → STMutable s (SortedSet e) 
native subSet

-- | Returns a view of the portion of this set whose elements are greater than or equal to fromElement.  
@url http://www.frege-lang.org/doc/frege/java/Util#SortedSet.tailSet
tailSet ∷ Mutable s (SortedSet e) → e → STMutable s (SortedSet e) 
native tailSet

-- | This class represents an observable object, or "data" in the model-view paradigm. More: Observable JavaDoc 
--   Member Functions
--  ----------------
--  addObserver ∷ Mutable s Observable → Mutable s Observer → ST s () 
--  native addObserver 
--   Adds an observer to the set of observers for this object, provided that it is not the same as some observer already in the set.   
--  countObservers ∷ Mutable s Observable → ST s Int 
--  native countObservers 
--   Returns the number of observers of this Observable object.   
--  deleteObserver ∷ Mutable s Observable → Mutable s Observer → ST s () 
--  native deleteObserver 
--   Deletes an observer from the set of observers of this object.   
--  deleteObservers ∷ Mutable s Observable → ST s () 
--  native deleteObservers 
--   Clears the observer list so that this object no longer has any observers.   
--  hasChanged ∷ Mutable s Observable → ST s Bool 
--  native hasChanged 
--   Tests if this object has changed.   
--  new ∷ () → STMutable s Observable 
--  native new 
--   Construct an Observable with zero Observers.   
--  notifyObservers ∷ Mutable s Observable → Object → ST s () 
--                   | Mutable s Observable → ST s () 
--  native notifyObservers 
--   If this object has changed, as indicated by the hasChanged method, then notify all of its observers and 
--   then call the clearChanged method to indicate that this object has no longer changed.   
--  notifyObserversα ∷ Mutable s Observable → Object → ST s () 
--  native notifyObservers  overloads notifyObservers 
--   If this object has changed, as indicated by the hasChanged method, then notify all of its observers and 
--   then call the clearChanged method to indicate that this object has no longer changed.   
--  notifyObserversβ ∷ Mutable s Observable → ST s () 
--  native notifyObservers  overloads notifyObservers 
--   If this object has changed, as indicated by the hasChanged method, then notify all of its observers and 
--   then call the clearChanged method to indicate that this object has no longer changed.    
@url http://www.frege-lang.org/doc/frege/java/Util#Observable
data Observable 

-- | Adds an observer to the set of observers for this object, provided that it is not the same as some observer already in the set.  
@url http://www.frege-lang.org/doc/frege/java/Util#Observable.addObserver
addObserver ∷ Mutable s Observable → Mutable s Observer → ST s () 
native addObserver

-- | Returns the number of observers of this Observable object.  
@url http://www.frege-lang.org/doc/frege/java/Util#Observable.countObservers
countObservers ∷ Mutable s Observable → ST s Int 
native countObservers

-- | Deletes an observer from the set of observers of this object.  
@url http://www.frege-lang.org/doc/frege/java/Util#Observable.deleteObserver
deleteObserver ∷ Mutable s Observable → Mutable s Observer → ST s () 
native deleteObserver

-- | Clears the observer list so that this object no longer has any observers.  
@url http://www.frege-lang.org/doc/frege/java/Util#Observable.deleteObservers
deleteObservers ∷ Mutable s Observable → ST s () 
native deleteObservers

-- | Tests if this object has changed.  
@url http://www.frege-lang.org/doc/frege/java/Util#Observable.hasChanged
hasChanged ∷ Mutable s Observable → ST s Bool 
native hasChanged

-- | Construct an Observable with zero Observers.  
@url http://www.frege-lang.org/doc/frege/java/Util#Observable._new
new ∷ () → STMutable s Observable 
native new

-- | If this object has changed, as indicated by the hasChanged method, then notify all of its observers and 
--   then call the clearChanged method to indicate that this object has no longer changed.  
@url http://www.frege-lang.org/doc/frege/java/Util#Observable.notifyObservers
notifyObservers ∷ Mutable s Observable → Object → ST s () 
                 | Mutable s Observable → ST s () 
native notifyObservers

-- | If this object has changed, as indicated by the hasChanged method, then notify all of its observers and 
--   then call the clearChanged method to indicate that this object has no longer changed.  
@url http://www.frege-lang.org/doc/frege/java/Util#Observable.notifyObserversα
notifyObserversα ∷ Mutable s Observable → Object → ST s () 
native notifyObservers  overloads notifyObservers

-- | If this object has changed, as indicated by the hasChanged method, then notify all of its observers and 
--   then call the clearChanged method to indicate that this object has no longer changed.  
@url http://www.frege-lang.org/doc/frege/java/Util#Observable.notifyObserversβ
notifyObserversβ ∷ Mutable s Observable → ST s () 
native notifyObservers  overloads notifyObservers

-- | A linear collection that supports element insertion and removal at both ends. More: Deque JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (Deque e) → e → ST s Bool 
--  native add 
--   Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning true upon success and throwing an IllegalStateException if no space is currently available.  
--  addFirst ∷ Mutable s (Deque e) → e → ST s () 
--  native addFirst 
--   Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions.   
--  addLast ∷ Mutable s (Deque e) → e → ST s () 
--  native addLast 
--   Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions.   
--  contains ∷ Mutable s (Deque e) → Object → ST s Bool 
--  native contains 
--   Returns true if this deque contains the specified element.   
--  descendingIterator ∷ Mutable s (Deque e) → STMutable s (Iterator e) 
--  native descendingIterator 
--   Returns an iterator over the elements in this deque in reverse sequential order.   
--  element ∷ Mutable s (Deque e) → ST s e 
--  native element 
--   Retrieves, but does not remove, the head of the queue represented by this deque (in other words, the first element of this deque).   
--  getFirst ∷ Mutable s (Deque e) → ST s e 
--  native getFirst 
--   Retrieves, but does not remove, the first element of this deque.   
--  getLast ∷ Mutable s (Deque e) → ST s e 
--  native getLast 
--   Retrieves, but does not remove, the last element of this deque.   
--  iterator ∷ Mutable s (Deque e) → STMutable s (Iterator e) 
--  native iterator 
--   Returns an iterator over the elements in this deque in proper sequence.   
--  offer ∷ Mutable s (Deque e) → e → ST s Bool 
--  native offer 
--   Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) 
--   if it is possible to do so immediately without violating capacity restrictions, returning true upon success and false if no space is currently available.   
--  offerFirst ∷ Mutable s (Deque e) → e → ST s Bool 
--  native offerFirst 
--   Inserts the specified element at the front of this deque unless it would violate capacity restrictions.   
--  offerLast ∷ Mutable s (Deque e) → e → ST s Bool 
--  native offerLast 
--   Inserts the specified element at the end of this deque unless it would violate capacity restrictions.   
--  peek ∷ Mutable s (Deque e) → ST s e 
--  native peek 
--   Retrieves, but does not remove, the head of the queue represented by this deque (in other words, 
--   the first element of this deque), or returns null if this deque is empty.   
--  peekFirst ∷ Mutable s (Deque e) → ST s e 
--  native peekFirst 
--   Retrieves, but does not remove, the first element of this deque, or returns null if this deque is empty.   
--  peekLast ∷ Mutable s (Deque e) → ST s e 
--  native peekLast 
--   Retrieves, but does not remove, the last element of this deque, or returns null if this deque is empty.   
--  poll ∷ Mutable s (Deque e) → ST s e 
--  native poll 
--   Retrieves and removes the head of the queue represented by this deque (in other words, 
--   the first element of this deque), or returns null if this deque is empty.   
--  pollFirst ∷ Mutable s (Deque e) → ST s e 
--  native pollFirst 
--   Retrieves and removes the first element of this deque, or returns null if this deque is empty.   
--  pollLast ∷ Mutable s (Deque e) → ST s e 
--  native pollLast 
--   Retrieves and removes the last element of this deque, or returns null if this deque is empty.   
--  pop ∷ Mutable s (Deque e) → ST s e 
--  native pop 
--   Pops an element from the stack represented by this deque.   
--  push ∷ Mutable s (Deque e) → e → ST s () 
--  native push 
--   Pushes an element onto the stack represented by this deque (in other words, at the head of this deque) 
--   if it is possible to do so immediately without violating capacity restrictions, returning true upon success 
--   and throwing an IllegalStateException if no space is currently available.   
--  remove ∷ Mutable s (Deque e) → ST s e 
--          | Mutable s (Deque e) → Object → ST s Bool 
--  native remove 
--   Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque) or 
--   Removes the first occurrence of the specified element from this deque.   
--  removeFirst ∷ Mutable s (Deque e) → ST s e 
--  native removeFirst 
--   Retrieves and removes the first element of this deque.   
--  removeFirstOccurrence ∷ Mutable s (Deque e) → Object → ST s Bool 
--  native removeFirstOccurrence 
--   Removes the first occurrence of the specified element from this deque.   
--  removeLast ∷ Mutable s (Deque e) → ST s e 
--  native removeLast 
--   Retrieves and removes the last element of this deque.   
--  removeLastOccurrence ∷ Mutable s (Deque e) → Object → ST s Bool 
--  native removeLastOccurrence 
--   Removes the last occurrence of the specified element from this deque.   
--  removeα ∷ Mutable s (Deque e) → ST s e 
--  native remove  overloads remove 
--   Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque) or 
--   Removes the first occurrence of the specified element from this deque.   
--  removeβ ∷ Mutable s (Deque e) → Object → ST s Bool 
--  native remove  overloads remove 
--   Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque) or 
--   Removes the first occurrence of the specified element from this deque.   
--  size ∷ Mutable s (Deque e) → ST s Int 
--  native size 
--   Returns the number of elements in this deque.    
@url http://www.frege-lang.org/doc/frege/java/Util#Deque
data Deque e 

-- | Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning true upon success and throwing an IllegalStateException if no space is currently available. 
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.add
add ∷ Mutable s (Deque e) → e → ST s Bool 
native add

-- | Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.addFirst
addFirst ∷ Mutable s (Deque e) → e → ST s () 
native addFirst

-- | Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.addLast
addLast ∷ Mutable s (Deque e) → e → ST s () 
native addLast

-- | Returns true if this deque contains the specified element.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.contains
contains ∷ Mutable s (Deque e) → Object → ST s Bool 
native contains

-- | Returns an iterator over the elements in this deque in reverse sequential order.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.descendingIterator
descendingIterator ∷ Mutable s (Deque e) → STMutable s (Iterator e) 
native descendingIterator

-- | Retrieves, but does not remove, the head of the queue represented by this deque (in other words, the first element of this deque).  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.element
element ∷ Mutable s (Deque e) → ST s e 
native element

-- | Retrieves, but does not remove, the first element of this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.getFirst
getFirst ∷ Mutable s (Deque e) → ST s e 
native getFirst

-- | Retrieves, but does not remove, the last element of this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.getLast
getLast ∷ Mutable s (Deque e) → ST s e 
native getLast

-- | Returns an iterator over the elements in this deque in proper sequence.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.iterator
iterator ∷ Mutable s (Deque e) → STMutable s (Iterator e) 
native iterator

-- | Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) 
--   if it is possible to do so immediately without violating capacity restrictions, returning true upon success and false if no space is currently available.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.offer
offer ∷ Mutable s (Deque e) → e → ST s Bool 
native offer

-- | Inserts the specified element at the front of this deque unless it would violate capacity restrictions.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.offerFirst
offerFirst ∷ Mutable s (Deque e) → e → ST s Bool 
native offerFirst

-- | Inserts the specified element at the end of this deque unless it would violate capacity restrictions.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.offerLast
offerLast ∷ Mutable s (Deque e) → e → ST s Bool 
native offerLast

-- | Retrieves, but does not remove, the head of the queue represented by this deque (in other words, 
--   the first element of this deque), or returns null if this deque is empty.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.peek
peek ∷ Mutable s (Deque e) → ST s e 
native peek

-- | Retrieves, but does not remove, the first element of this deque, or returns null if this deque is empty.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.peekFirst
peekFirst ∷ Mutable s (Deque e) → ST s e 
native peekFirst

-- | Retrieves, but does not remove, the last element of this deque, or returns null if this deque is empty.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.peekLast
peekLast ∷ Mutable s (Deque e) → ST s e 
native peekLast

-- | Retrieves and removes the head of the queue represented by this deque (in other words, 
--   the first element of this deque), or returns null if this deque is empty.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.poll
poll ∷ Mutable s (Deque e) → ST s e 
native poll

-- | Retrieves and removes the first element of this deque, or returns null if this deque is empty.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.pollFirst
pollFirst ∷ Mutable s (Deque e) → ST s e 
native pollFirst

-- | Retrieves and removes the last element of this deque, or returns null if this deque is empty.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.pollLast
pollLast ∷ Mutable s (Deque e) → ST s e 
native pollLast

-- | Pops an element from the stack represented by this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.pop
pop ∷ Mutable s (Deque e) → ST s e 
native pop

-- | Pushes an element onto the stack represented by this deque (in other words, at the head of this deque) 
--   if it is possible to do so immediately without violating capacity restrictions, returning true upon success 
--   and throwing an IllegalStateException if no space is currently available.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.push
push ∷ Mutable s (Deque e) → e → ST s () 
native push

-- | Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque) or 
--   Removes the first occurrence of the specified element from this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.remove
remove ∷ Mutable s (Deque e) → ST s e 
        | Mutable s (Deque e) → Object → ST s Bool 
native remove

-- | Retrieves and removes the first element of this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.removeFirst
removeFirst ∷ Mutable s (Deque e) → ST s e 
native removeFirst

-- | Removes the first occurrence of the specified element from this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.removeFirstOccurrence
removeFirstOccurrence ∷ Mutable s (Deque e) → Object → ST s Bool 
native removeFirstOccurrence

-- | Retrieves and removes the last element of this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.removeLast
removeLast ∷ Mutable s (Deque e) → ST s e 
native removeLast

-- | Removes the last occurrence of the specified element from this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.removeLastOccurrence
removeLastOccurrence ∷ Mutable s (Deque e) → Object → ST s Bool 
native removeLastOccurrence

-- | Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque) or 
--   Removes the first occurrence of the specified element from this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.removeα
removeα ∷ Mutable s (Deque e) → ST s e 
native remove  overloads remove

-- | Retrieves and removes the head of the queue represented by this deque (in other words, the first element of this deque) or 
--   Removes the first occurrence of the specified element from this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.removeβ
removeβ ∷ Mutable s (Deque e) → Object → ST s Bool 
native remove  overloads remove

-- | Returns the number of elements in this deque.  
@url http://www.frege-lang.org/doc/frege/java/Util#Deque.size
size ∷ Mutable s (Deque e) → ST s Int 
native size

-- | This class provides a skeletal implementation of the List interface to minimize the effort required to implement this interface backed by a "sequential access" data store (such as a linked list). For random access data (such as an array), AbstractList should be used in preference to this class. 
--   More: AbstractSequentialList JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (AbstractSequentialList e) → Int → e → ST s () 
--  native add 
--   Inserts the specified element at the specified position in this list (optional operation).   
--  addAll ∷ Mutable s (AbstractSequentialList e) → Int → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--   Inserts all of the elements in the specified collection into this list at the specified position (optional operation).   
--  get ∷ Mutable s (AbstractSequentialList e) → Int → ST s e 
--  native get 
--   Returns the element at the specified position in this list.   
--  iterator ∷ Mutable s (AbstractSequentialList e) → STMutable s (Iterator e) 
--  native iterator 
--   Returns an iterator over the elements in this list (in proper sequence).   
--  listIterator ∷ Mutable s (AbstractSequentialList e) → Int → STMutable s (ListIterator e) 
--  native listIterator 
--   Returns a list iterator over the elements in this list (in proper sequence).   
--  remove ∷ Mutable s (AbstractSequentialList e) → Int → ST s e 
--  native remove 
--   Removes the element at the specified position in this list (optional operation).   
--  set ∷ Mutable s (AbstractSequentialList e) → Int → e → ST s e 
--  native set 
--   Replaces the element at the specified position in this list with the specified element (optional operation).    
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSequentialList
data AbstractSequentialList e 

-- | Inserts the specified element at the specified position in this list (optional operation).  
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSequentialList.add
add ∷ Mutable s (AbstractSequentialList e) → Int → e → ST s () 
native add

-- | Inserts all of the elements in the specified collection into this list at the specified position (optional operation).  
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSequentialList.addAll
addAll ∷ Mutable s (AbstractSequentialList e) → Int → Mutable s (Collection e) → ST s Bool 
native addAll

-- | Returns the element at the specified position in this list.  
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSequentialList.get
get ∷ Mutable s (AbstractSequentialList e) → Int → ST s e 
native get

-- | Returns an iterator over the elements in this list (in proper sequence).  
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSequentialList.iterator
iterator ∷ Mutable s (AbstractSequentialList e) → STMutable s (Iterator e) 
native iterator

-- | Returns a list iterator over the elements in this list (in proper sequence).  
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSequentialList.listIterator
listIterator ∷ Mutable s (AbstractSequentialList e) → Int → STMutable s (ListIterator e) 
native listIterator

-- | Removes the element at the specified position in this list (optional operation).  
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSequentialList.remove
remove ∷ Mutable s (AbstractSequentialList e) → Int → ST s e 
native remove

-- | Replaces the element at the specified position in this list with the specified element (optional operation).  
@url http://www.frege-lang.org/doc/frege/java/Util#AbstractSequentialList.set
set ∷ Mutable s (AbstractSequentialList e) → Int → e → ST s e 
native set

-- | An interpreter for printf-style format strings. More: Formatter JavaDoc 
--   Member Functions
--  ----------------
--  close ∷ Mutable s Formatter → ST s () 
--  native close 
--   Closes this formatter.   
--  flush ∷ Mutable s Formatter → ST s () 
--  native flush 
--   Flushes this formatter.   
--  format ∷ Mutable s Formatter → String → ArrayOf s Object → STMutable s Formatter 
--          | Mutable s Formatter → Locale → String → ArrayOf s Object → STMutable s Formatter 
--  native format 
--   Writes a formatted string to this object's destination using the specified locale, format string, and arguments 
--   or Writes a formatted string to this object's destination using the specified format string and arguments.   
--  formatα ∷ Mutable s Formatter → String → ArrayOf s Object → STMutable s Formatter 
--  native format  overloads format 
--   Writes a formatted string to this object's destination using the specified locale, format string, and arguments 
--   or Writes a formatted string to this object's destination using the specified format string and arguments.   
--  formatβ ∷ Mutable s Formatter → Locale → String → ArrayOf s Object → STMutable s Formatter 
--  native format  overloads format 
--   Writes a formatted string to this object's destination using the specified locale, format string, and arguments 
--   or Writes a formatted string to this object's destination using the specified format string and arguments.   
--  ioException ∷ Mutable s Formatter → ST s IOException 
--  native ioException 
--   Returns the IOException last thrown by this formatter's Appendable.   
--  locale ∷ Mutable s Formatter → ST s Locale 
--  native locale 
--   Returns the locale set by the construction of this formatter.   
--  new ∷ MutableIO File → String → STMutable RealWorld Formatter 
--           throws FileNotFoundException, UnsupportedEncodingException 
--       | MutableIO File → STMutable RealWorld Formatter 
--           throws FileNotFoundException 
--       | String → String → Locale → STMutable s Formatter 
--           throws FileNotFoundException, UnsupportedEncodingException 
--       | String → String → STMutable s Formatter 
--           throws FileNotFoundException, UnsupportedEncodingException 
--       | String → STMutable s Formatter 
--           throws FileNotFoundException 
--       | OutputStream → String → STMutable RealWorld Formatter 
--           throws UnsupportedEncodingException 
--       | OutputStream → STMutable RealWorld Formatter 
--       | PrintStream → STMutable RealWorld Formatter 
--       | MutableIO File → String → Locale → STMutable RealWorld Formatter 
--           throws FileNotFoundException, UnsupportedEncodingException 
--       | () → STMutable s Formatter 
--       | OutputStream → String → Locale → STMutable RealWorld Formatter 
--           throws UnsupportedEncodingException 
--       | Mutable s Appendable → Locale → STMutable s Formatter 
--       | Locale → STMutable s Formatter 
--       | Mutable s Appendable → STMutable s Formatter 
--  native new 
--  newß ∷ () → STMutable s Formatter 
--  native new  overloads new 
--  newα ∷ MutableIO File → String → STMutable RealWorld Formatter 
--  native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new 
--  newβ ∷ MutableIO File → STMutable RealWorld Formatter 
--  native new  throws FileNotFoundException  overloads new 
--  newγ ∷ String → String → Locale → STMutable s Formatter 
--  native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new 
--  newδ ∷ String → String → STMutable s Formatter 
--  native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new 
--  newε ∷ String → STMutable s Formatter 
--  native new  throws FileNotFoundException  overloads new 
--  newζ ∷ OutputStream → String → STMutable RealWorld Formatter 
--  native new  throws UnsupportedEncodingException  overloads new 
--  newη ∷ OutputStream → STMutable RealWorld Formatter 
--  native new  overloads new 
--  newθ ∷ PrintStream → STMutable RealWorld Formatter 
--  native new  overloads new 
--  newι ∷ MutableIO File → String → Locale → STMutable RealWorld Formatter 
--  native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new 
--  newκ ∷ OutputStream → String → Locale → STMutable RealWorld Formatter 
--  native new  throws UnsupportedEncodingException  overloads new 
--  newλ ∷ Mutable s Appendable → Locale → STMutable s Formatter 
--  native new  overloads new 
--  newμ ∷ Locale → STMutable s Formatter 
--  native new  overloads new 
--  newν ∷ Mutable s Appendable → STMutable s Formatter 
--  native new  overloads new 
--  out ∷ Mutable s Formatter → STMutable s Appendable 
--  native out 
--   Returns the destination for the output.   
--  toString ∷ Mutable s Formatter → ST s String 
--  native toString 
--   Returns the result of invoking toString() on the destination for the output.    
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter
data Formatter 

-- | Closes this formatter.  
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.close
close ∷ Mutable s Formatter → ST s () 
native close

-- | Flushes this formatter.  
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.flush
flush ∷ Mutable s Formatter → ST s () 
native flush

-- | Writes a formatted string to this object's destination using the specified locale, format string, and arguments 
--   or Writes a formatted string to this object's destination using the specified format string and arguments.  
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.format
format ∷ Mutable s Formatter → String → ArrayOf s Object → STMutable s Formatter 
        | Mutable s Formatter → Locale → String → ArrayOf s Object → STMutable s Formatter 
native format

-- | Writes a formatted string to this object's destination using the specified locale, format string, and arguments 
--   or Writes a formatted string to this object's destination using the specified format string and arguments.  
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.formatα
formatα ∷ Mutable s Formatter → String → ArrayOf s Object → STMutable s Formatter 
native format  overloads format

-- | Writes a formatted string to this object's destination using the specified locale, format string, and arguments 
--   or Writes a formatted string to this object's destination using the specified format string and arguments.  
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.formatβ
formatβ ∷ Mutable s Formatter → Locale → String → ArrayOf s Object → STMutable s Formatter 
native format  overloads format

-- | Returns the IOException last thrown by this formatter's Appendable.  
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.ioException
ioException ∷ Mutable s Formatter → ST s IOException 
native ioException

-- | Returns the locale set by the construction of this formatter.  
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.locale
locale ∷ Mutable s Formatter → ST s Locale 
native locale


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter._new
new ∷ MutableIO File → String → STMutable RealWorld Formatter 
         throws FileNotFoundException, UnsupportedEncodingException 
     | MutableIO File → STMutable RealWorld Formatter 
         throws FileNotFoundException 
     | String → String → Locale → STMutable s Formatter 
         throws FileNotFoundException, UnsupportedEncodingException 
     | String → String → STMutable s Formatter 
         throws FileNotFoundException, UnsupportedEncodingException 
     | String → STMutable s Formatter 
         throws FileNotFoundException 
     | OutputStream → String → STMutable RealWorld Formatter 
         throws UnsupportedEncodingException 
     | OutputStream → STMutable RealWorld Formatter 
     | PrintStream → STMutable RealWorld Formatter 
     | MutableIO File → String → Locale → STMutable RealWorld Formatter 
         throws FileNotFoundException, UnsupportedEncodingException 
     | () → STMutable s Formatter 
     | OutputStream → String → Locale → STMutable RealWorld Formatter 
         throws UnsupportedEncodingException 
     | Mutable s Appendable → Locale → STMutable s Formatter 
     | Locale → STMutable s Formatter 
     | Mutable s Appendable → STMutable s Formatter 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newß
newß ∷ () → STMutable s Formatter 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newα
newα ∷ MutableIO File → String → STMutable RealWorld Formatter 
native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newβ
newβ ∷ MutableIO File → STMutable RealWorld Formatter 
native new  throws FileNotFoundException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newγ
newγ ∷ String → String → Locale → STMutable s Formatter 
native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newδ
newδ ∷ String → String → STMutable s Formatter 
native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newε
newε ∷ String → STMutable s Formatter 
native new  throws FileNotFoundException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newζ
newζ ∷ OutputStream → String → STMutable RealWorld Formatter 
native new  throws UnsupportedEncodingException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newη
newη ∷ OutputStream → STMutable RealWorld Formatter 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newθ
newθ ∷ PrintStream → STMutable RealWorld Formatter 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newι
newι ∷ MutableIO File → String → Locale → STMutable RealWorld Formatter 
native new  throws FileNotFoundException, UnsupportedEncodingException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newκ
newκ ∷ OutputStream → String → Locale → STMutable RealWorld Formatter 
native new  throws UnsupportedEncodingException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newλ
newλ ∷ Mutable s Appendable → Locale → STMutable s Formatter 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newμ
newμ ∷ Locale → STMutable s Formatter 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.newν
newν ∷ Mutable s Appendable → STMutable s Formatter 
native new  overloads new

-- | Returns the destination for the output.  
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.out
out ∷ Mutable s Formatter → STMutable s Appendable 
native out

-- | Returns the result of invoking toString() on the destination for the output.  
@url http://www.frege-lang.org/doc/frege/java/Util#Formatter.toString
toString ∷ Mutable s Formatter → ST s String 
native toString

-- | An unbounded priority queue based on a priority heap. More: PriorityQueue JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (PriorityQueue e) → e → ST s Bool 
--  native add 
--  clear ∷ Mutable s (PriorityQueue e) → ST s () 
--  native clear 
--  comparator ∷ Mutable s (PriorityQueue e) → ST s (Comparator e) 
--  native comparator 
--  contains ∷ Mutable s (PriorityQueue e) → Object → ST s Bool 
--  native contains 
--  iterator ∷ Mutable s (PriorityQueue e) → STMutable s (Iterator e) 
--  native iterator 
--  new ∷ Mutable s (SortedSet e) → STMutable s (PriorityQueue e) 
--       | Mutable s (PriorityQueue e) → STMutable s (PriorityQueue e) 
--       | Mutable s (Collection e) → STMutable s (PriorityQueue e) 
--       | () → STMutable s (PriorityQueue e) 
--       | Int → STMutable s (PriorityQueue e) 
--       | Int → Comparator e → STMutable s (PriorityQueue e) 
--  native new 
--  newα ∷ Mutable s (SortedSet e) → STMutable s (PriorityQueue e) 
--  native new  overloads new 
--  newβ ∷ Mutable s (PriorityQueue e) → STMutable s (PriorityQueue e) 
--  native new  overloads new 
--  newγ ∷ Mutable s (Collection e) → STMutable s (PriorityQueue e) 
--  native new  overloads new 
--  newδ ∷ () → STMutable s (PriorityQueue e) 
--  native new  overloads new 
--  newε ∷ Int → STMutable s (PriorityQueue e) 
--  native new  overloads new 
--  newζ ∷ Int → Comparator e → STMutable s (PriorityQueue e) 
--  native new  overloads new 
--  offer ∷ Mutable s (PriorityQueue e) → e → ST s Bool 
--  native offer 
--  peek ∷ Mutable s (PriorityQueue e) → ST s e 
--  native peek 
--  poll ∷ Mutable s (PriorityQueue e) → ST s e 
--  native poll 
--  remove ∷ Mutable s (PriorityQueue e) → Object → ST s Bool 
--  native remove 
--  size ∷ Mutable s (PriorityQueue e) → ST s Int 
--  native size 
--  toArray ∷ Mutable s (PriorityQueue e) → STMutable s (JArray Object) 
--           | Mutable s (PriorityQueue e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray 
--  toArrayα ∷ Mutable s (PriorityQueue e) → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toArrayβ ∷ Mutable s (PriorityQueue e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray  overloads toArray 

@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue
data PriorityQueue e 


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.add
add ∷ Mutable s (PriorityQueue e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.clear
clear ∷ Mutable s (PriorityQueue e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.comparator
comparator ∷ Mutable s (PriorityQueue e) → ST s (Comparator e) 
native comparator


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.contains
contains ∷ Mutable s (PriorityQueue e) → Object → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.iterator
iterator ∷ Mutable s (PriorityQueue e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue._new
new ∷ Mutable s (SortedSet e) → STMutable s (PriorityQueue e) 
     | Mutable s (PriorityQueue e) → STMutable s (PriorityQueue e) 
     | Mutable s (Collection e) → STMutable s (PriorityQueue e) 
     | () → STMutable s (PriorityQueue e) 
     | Int → STMutable s (PriorityQueue e) 
     | Int → Comparator e → STMutable s (PriorityQueue e) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.newα
newα ∷ Mutable s (SortedSet e) → STMutable s (PriorityQueue e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.newβ
newβ ∷ Mutable s (PriorityQueue e) → STMutable s (PriorityQueue e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.newγ
newγ ∷ Mutable s (Collection e) → STMutable s (PriorityQueue e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.newδ
newδ ∷ () → STMutable s (PriorityQueue e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.newε
newε ∷ Int → STMutable s (PriorityQueue e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.newζ
newζ ∷ Int → Comparator e → STMutable s (PriorityQueue e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.offer
offer ∷ Mutable s (PriorityQueue e) → e → ST s Bool 
native offer


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.peek
peek ∷ Mutable s (PriorityQueue e) → ST s e 
native peek


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.poll
poll ∷ Mutable s (PriorityQueue e) → ST s e 
native poll


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.remove
remove ∷ Mutable s (PriorityQueue e) → Object → ST s Bool 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.size
size ∷ Mutable s (PriorityQueue e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.toArray
toArray ∷ Mutable s (PriorityQueue e) → STMutable s (JArray Object) 
         | Mutable s (PriorityQueue e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.toArrayα
toArrayα ∷ Mutable s (PriorityQueue e) → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#PriorityQueue.toArrayβ
toArrayβ ∷ Mutable s (PriorityQueue e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray  overloads toArray

-- | A SortedMap extended with navigation methods returning the closest matches for given search targets. 
--   More: NavigableMap JavaDoc 
--   Member Functions
--  ----------------
--  ceilingEntry ∷ Mutable s (NavigableMap k v) → k → STMutable s (MapEntry k v) 
--  native ceilingEntry 
--  ceilingKey ∷ Mutable s (NavigableMap k v) → k → ST s k 
--  native ceilingKey 
--  descendingKeySet ∷ Mutable s (NavigableMap k v) → STMutable s (NavigableSet k) 
--  native descendingKeySet 
--  descendingMap ∷ Mutable s (NavigableMap k v) → STMutable s (NavigableMap k v) 
--  native descendingMap 
--  firstEntry ∷ Mutable s (NavigableMap k v) → STMutable s (MapEntry k v) 
--  native firstEntry 
--  floorEntry ∷ Mutable s (NavigableMap k v) → k → STMutable s (MapEntry k v) 
--  native floorEntry 
--  floorKey ∷ Mutable s (NavigableMap k v) → k → ST s k 
--  native floorKey 
--  headMap ∷ Mutable s (NavigableMap k v) → k → Bool → STMutable s (NavigableMap k v) 
--           | Mutable s (NavigableMap k v) → k → STMutable s (SortedMap k v) 
--  native headMap 
--  headMapα ∷ Mutable s (NavigableMap k v) → k → Bool → STMutable s (NavigableMap k v) 
--  native headMap  overloads headMap 
--  headMapβ ∷ Mutable s (NavigableMap k v) → k → STMutable s (SortedMap k v) 
--  native headMap  overloads headMap 
--  higherEntry ∷ Mutable s (NavigableMap k v) → k → STMutable s (MapEntry k v) 
--  native higherEntry 
--  higherKey ∷ Mutable s (NavigableMap k v) → k → ST s k 
--  native higherKey 
--  lastEntry ∷ Mutable s (NavigableMap k v) → STMutable s (MapEntry k v) 
--  native lastEntry 
--  lowerEntry ∷ Mutable s (NavigableMap k v) → k → STMutable s (MapEntry k v) 
--  native lowerEntry 
--  lowerKey ∷ Mutable s (NavigableMap k v) → k → ST s k 
--  native lowerKey 
--  navigableKeySet ∷ Mutable s (NavigableMap k v) → STMutable s (NavigableSet k) 
--  native navigableKeySet 
--  pollFirstEntry ∷ Mutable s (NavigableMap k v) → STMutable s (MapEntry k v) 
--  native pollFirstEntry 
--  pollLastEntry ∷ Mutable s (NavigableMap k v) → STMutable s (MapEntry k v) 
--  native pollLastEntry 
--  subMap ∷ Mutable s (NavigableMap k v) → k → k → STMutable s (SortedMap k v) 
--          | Mutable s (NavigableMap k v) → k → Bool → k → Bool → STMutable s (NavigableMap k v) 
--  native subMap 
--  subMapα ∷ Mutable s (NavigableMap k v) → k → k → STMutable s (SortedMap k v) 
--  native subMap  overloads subMap 
--  subMapβ ∷ Mutable s (NavigableMap k v) → k → Bool → k → Bool → STMutable s (NavigableMap k v) 
--  native subMap  overloads subMap 
--  tailMap ∷ Mutable s (NavigableMap k v) → k → Bool → STMutable s (NavigableMap k v) 
--           | Mutable s (NavigableMap k v) → k → STMutable s (SortedMap k v) 
--  native tailMap 
--  tailMapα ∷ Mutable s (NavigableMap k v) → k → Bool → STMutable s (NavigableMap k v) 
--  native tailMap  overloads tailMap 
--  tailMapβ ∷ Mutable s (NavigableMap k v) → k → STMutable s (SortedMap k v) 
--  native tailMap  overloads tailMap 

@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap
data NavigableMap k v 


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.ceilingEntry
ceilingEntry ∷ Mutable s (NavigableMap k v) → k → STMutable s (MapEntry k v) 
native ceilingEntry


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.ceilingKey
ceilingKey ∷ Mutable s (NavigableMap k v) → k → ST s k 
native ceilingKey


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.descendingKeySet
descendingKeySet ∷ Mutable s (NavigableMap k v) → STMutable s (NavigableSet k) 
native descendingKeySet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.descendingMap
descendingMap ∷ Mutable s (NavigableMap k v) → STMutable s (NavigableMap k v) 
native descendingMap


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.firstEntry
firstEntry ∷ Mutable s (NavigableMap k v) → STMutable s (MapEntry k v) 
native firstEntry


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.floorEntry
floorEntry ∷ Mutable s (NavigableMap k v) → k → STMutable s (MapEntry k v) 
native floorEntry


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.floorKey
floorKey ∷ Mutable s (NavigableMap k v) → k → ST s k 
native floorKey


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.headMap
headMap ∷ Mutable s (NavigableMap k v) → k → Bool → STMutable s (NavigableMap k v) 
         | Mutable s (NavigableMap k v) → k → STMutable s (SortedMap k v) 
native headMap


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.headMapα
headMapα ∷ Mutable s (NavigableMap k v) → k → Bool → STMutable s (NavigableMap k v) 
native headMap  overloads headMap


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.headMapβ
headMapβ ∷ Mutable s (NavigableMap k v) → k → STMutable s (SortedMap k v) 
native headMap  overloads headMap


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.higherEntry
higherEntry ∷ Mutable s (NavigableMap k v) → k → STMutable s (MapEntry k v) 
native higherEntry


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.higherKey
higherKey ∷ Mutable s (NavigableMap k v) → k → ST s k 
native higherKey


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.lastEntry
lastEntry ∷ Mutable s (NavigableMap k v) → STMutable s (MapEntry k v) 
native lastEntry


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.lowerEntry
lowerEntry ∷ Mutable s (NavigableMap k v) → k → STMutable s (MapEntry k v) 
native lowerEntry


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.lowerKey
lowerKey ∷ Mutable s (NavigableMap k v) → k → ST s k 
native lowerKey


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.navigableKeySet
navigableKeySet ∷ Mutable s (NavigableMap k v) → STMutable s (NavigableSet k) 
native navigableKeySet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.pollFirstEntry
pollFirstEntry ∷ Mutable s (NavigableMap k v) → STMutable s (MapEntry k v) 
native pollFirstEntry


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.pollLastEntry
pollLastEntry ∷ Mutable s (NavigableMap k v) → STMutable s (MapEntry k v) 
native pollLastEntry


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.subMap
subMap ∷ Mutable s (NavigableMap k v) → k → k → STMutable s (SortedMap k v) 
        | Mutable s (NavigableMap k v) → k → Bool → k → Bool → STMutable s (NavigableMap k v) 
native subMap


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.subMapα
subMapα ∷ Mutable s (NavigableMap k v) → k → k → STMutable s (SortedMap k v) 
native subMap  overloads subMap


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.subMapβ
subMapβ ∷ Mutable s (NavigableMap k v) → k → Bool → k → Bool → STMutable s (NavigableMap k v) 
native subMap  overloads subMap


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.tailMap
tailMap ∷ Mutable s (NavigableMap k v) → k → Bool → STMutable s (NavigableMap k v) 
         | Mutable s (NavigableMap k v) → k → STMutable s (SortedMap k v) 
native tailMap


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.tailMapα
tailMapα ∷ Mutable s (NavigableMap k v) → k → Bool → STMutable s (NavigableMap k v) 
native tailMap  overloads tailMap


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableMap.tailMapβ
tailMapβ ∷ Mutable s (NavigableMap k v) → k → STMutable s (SortedMap k v) 
native tailMap  overloads tailMap

-- | A tagging interface that all event listener interfaces must extend. 
--   More: JavaDoc 
@url http://www.frege-lang.org/doc/frege/java/Util#EventListener
data EventListener 

-- | Hash table and linked list implementation of the Map interface, with predictable iteration order. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  clear ∷ Mutable s (LinkedHashMap k v) → ST s () 
--  native clear 
--  containsValue ∷ Mutable s (LinkedHashMap k v) → Object → ST s Bool 
--  native containsValue 
--  fromList ∷ [(k, v)] → STMutable s (LinkedHashMap k v) 
--  get ∷ Mutable s (LinkedHashMap k v) → a → ST s v 
--  native get 
--  new ∷ Int → Float → Bool → STMutable s (LinkedHashMap k v) 
--       | Mutable s (Map k v) → STMutable s (LinkedHashMap k v) 
--       | () → STMutable s (LinkedHashMap k v) 
--       | Int → STMutable s (LinkedHashMap k v) 
--       | Int → Float → STMutable s (LinkedHashMap k v) 
--  native new 
--  newα ∷ Int → Float → Bool → STMutable s (LinkedHashMap k v) 
--  native new  overloads new 
--  newβ ∷ Mutable s (Map k v) → STMutable s (LinkedHashMap k v) 
--  native new  overloads new 
--  newγ ∷ () → STMutable s (LinkedHashMap k v) 
--  native new  overloads new 
--  newδ ∷ Int → STMutable s (LinkedHashMap k v) 
--  native new  overloads new 
--  newε ∷ Int → Float → STMutable s (LinkedHashMap k v) 
--  native new  overloads new 

@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap
data LinkedHashMap k v 


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap.clear
clear ∷ Mutable s (LinkedHashMap k v) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap.containsValue
containsValue ∷ Mutable s (LinkedHashMap k v) → Object → ST s Bool 
native containsValue


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap.fromList
fromList ∷ [(k, v)] → STMutable s (LinkedHashMap k v)


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap.get
get ∷ Mutable s (LinkedHashMap k v) → a → ST s v 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap._new
new ∷ Int → Float → Bool → STMutable s (LinkedHashMap k v) 
     | Mutable s (Map k v) → STMutable s (LinkedHashMap k v) 
     | () → STMutable s (LinkedHashMap k v) 
     | Int → STMutable s (LinkedHashMap k v) 
     | Int → Float → STMutable s (LinkedHashMap k v) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap.newα
newα ∷ Int → Float → Bool → STMutable s (LinkedHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap.newβ
newβ ∷ Mutable s (Map k v) → STMutable s (LinkedHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap.newγ
newγ ∷ () → STMutable s (LinkedHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap.newδ
newδ ∷ Int → STMutable s (LinkedHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashMap.newε
newε ∷ Int → Float → STMutable s (LinkedHashMap k v) 
native new  overloads new

-- | Member Functions
--  ----------------
--  decimal_float ∷ FormatterBigDecimalLayoutForm 
--  pure native java.util.Formatter.BigDecimalLayoutForm.DECIMAL_FLOAT 
--  scientific ∷ FormatterBigDecimalLayoutForm 
--  pure native java.util.Formatter.BigDecimalLayoutForm.SCIENTIFIC 
--  valueOf ∷ String → FormatterBigDecimalLayoutForm 
--  pure native java.util.Formatter.BigDecimalLayoutForm.valueOf 
--  values ∷ () → STMutable s (JArray FormatterBigDecimalLayoutForm) 
--  native java.util.Formatter.BigDecimalLayoutForm.values 

@url http://www.frege-lang.org/doc/frege/java/Util#FormatterBigDecimalLayoutForm
data FormatterBigDecimalLayoutForm 


@url http://www.frege-lang.org/doc/frege/java/Util#FormatterBigDecimalLayoutForm.decimal_float
decimal_float ∷ FormatterBigDecimalLayoutForm 
pure native java.util.Formatter.BigDecimalLayoutForm.DECIMAL_FLOAT


@url http://www.frege-lang.org/doc/frege/java/Util#FormatterBigDecimalLayoutForm.scientific
scientific ∷ FormatterBigDecimalLayoutForm 
pure native java.util.Formatter.BigDecimalLayoutForm.SCIENTIFIC


@url http://www.frege-lang.org/doc/frege/java/Util#FormatterBigDecimalLayoutForm.valueOf
valueOf ∷ String → FormatterBigDecimalLayoutForm 
pure native java.util.Formatter.BigDecimalLayoutForm.valueOf


@url http://www.frege-lang.org/doc/frege/java/Util#FormatterBigDecimalLayoutForm.values
values ∷ () → STMutable s (JArray FormatterBigDecimalLayoutForm) 
native java.util.Formatter.BigDecimalLayoutForm.values

-- | Resizable-array implementation of the Deque interface. More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (ArrayDeque e) → e → ST s Bool 
--  native add 
--  addFirst ∷ Mutable s (ArrayDeque e) → e → ST s () 
--  native addFirst 
--  addLast ∷ Mutable s (ArrayDeque e) → e → ST s () 
--  native addLast 
--  clear ∷ Mutable s (ArrayDeque e) → ST s () 
--  native clear 
--  clone ∷ Mutable s (ArrayDeque e) → STMutable s (ArrayDeque e) 
--  native clone 
--  contains ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
--  native contains 
--  descendingIterator ∷ Mutable s (ArrayDeque e) → STMutable s (Iterator e) 
--  native descendingIterator 
--  element ∷ Mutable s (ArrayDeque e) → ST s e 
--  native element 
--  getFirst ∷ Mutable s (ArrayDeque e) → ST s e 
--  native getFirst 
--  getLast ∷ Mutable s (ArrayDeque e) → ST s e 
--  native getLast 
--  isEmpty ∷ Mutable s (ArrayDeque e) → ST s Bool 
--  native isEmpty 
--  iterator ∷ Mutable s (ArrayDeque e) → STMutable s (Iterator e) 
--  native iterator 
--  new ∷ () → STMutable s (ArrayDeque e) 
--       | Int → STMutable s (ArrayDeque e) 
--       | Mutable s (Collection e) → STMutable s (ArrayDeque e) 
--  native new 
--  newα ∷ () → STMutable s (ArrayDeque e) 
--  native new  overloads new 
--  newβ ∷ Int → STMutable s (ArrayDeque e) 
--  native new  overloads new 
--  newγ ∷ Mutable s (Collection e) → STMutable s (ArrayDeque e) 
--  native new  overloads new 
--  offer ∷ Mutable s (ArrayDeque e) → e → ST s Bool 
--  native offer 
--  offerFirst ∷ Mutable s (ArrayDeque e) → e → ST s Bool 
--  native offerFirst 
--  offerLast ∷ Mutable s (ArrayDeque e) → e → ST s Bool 
--  native offerLast 
--  peek ∷ Mutable s (ArrayDeque e) → ST s e 
--  native peek 
--  peekFirst ∷ Mutable s (ArrayDeque e) → ST s e 
--  native peekFirst 
--  peekLast ∷ Mutable s (ArrayDeque e) → ST s e 
--  native peekLast 
--  poll ∷ Mutable s (ArrayDeque e) → ST s e 
--  native poll 
--  pollFirst ∷ Mutable s (ArrayDeque e) → ST s e 
--  native pollFirst 
--  pollLast ∷ Mutable s (ArrayDeque e) → ST s e 
--  native pollLast 
--  pop ∷ Mutable s (ArrayDeque e) → ST s e 
--  native pop 
--  push ∷ Mutable s (ArrayDeque e) → e → ST s () 
--  native push 
--  remove ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
--          | Mutable s (ArrayDeque e) → ST s e 
--  native remove 
--  removeFirst ∷ Mutable s (ArrayDeque e) → ST s e 
--  native removeFirst 
--  removeFirstOccurrence ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
--  native removeFirstOccurrence 
--  removeLast ∷ Mutable s (ArrayDeque e) → ST s e 
--  native removeLast 
--  removeLastOccurrence ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
--  native removeLastOccurrence 
--  removeα ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
--  native remove  overloads remove 
--  removeβ ∷ Mutable s (ArrayDeque e) → ST s e 
--  native remove  overloads remove 
--  size ∷ Mutable s (ArrayDeque e) → ST s Int 
--  native size 
--  toArray ∷ Mutable s (ArrayDeque e) → ArrayOf s Object → STMutable s (JArray Object) 
--           | Mutable s (ArrayDeque e) → STMutable s (JArray Object) 
--  native toArray 
--  toArrayα ∷ Mutable s (ArrayDeque e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toArrayβ ∷ Mutable s (ArrayDeque e) → STMutable s (JArray Object) 
--  native toArray  overloads toArray 

@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque
data ArrayDeque e 


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.add
add ∷ Mutable s (ArrayDeque e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.addFirst
addFirst ∷ Mutable s (ArrayDeque e) → e → ST s () 
native addFirst


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.addLast
addLast ∷ Mutable s (ArrayDeque e) → e → ST s () 
native addLast


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.clear
clear ∷ Mutable s (ArrayDeque e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.clone
clone ∷ Mutable s (ArrayDeque e) → STMutable s (ArrayDeque e) 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.contains
contains ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.descendingIterator
descendingIterator ∷ Mutable s (ArrayDeque e) → STMutable s (Iterator e) 
native descendingIterator


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.element
element ∷ Mutable s (ArrayDeque e) → ST s e 
native element


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.getFirst
getFirst ∷ Mutable s (ArrayDeque e) → ST s e 
native getFirst


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.getLast
getLast ∷ Mutable s (ArrayDeque e) → ST s e 
native getLast


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.isEmpty
isEmpty ∷ Mutable s (ArrayDeque e) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.iterator
iterator ∷ Mutable s (ArrayDeque e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque._new
new ∷ () → STMutable s (ArrayDeque e) 
     | Int → STMutable s (ArrayDeque e) 
     | Mutable s (Collection e) → STMutable s (ArrayDeque e) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.newα
newα ∷ () → STMutable s (ArrayDeque e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.newβ
newβ ∷ Int → STMutable s (ArrayDeque e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.newγ
newγ ∷ Mutable s (Collection e) → STMutable s (ArrayDeque e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.offer
offer ∷ Mutable s (ArrayDeque e) → e → ST s Bool 
native offer


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.offerFirst
offerFirst ∷ Mutable s (ArrayDeque e) → e → ST s Bool 
native offerFirst


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.offerLast
offerLast ∷ Mutable s (ArrayDeque e) → e → ST s Bool 
native offerLast


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.peek
peek ∷ Mutable s (ArrayDeque e) → ST s e 
native peek


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.peekFirst
peekFirst ∷ Mutable s (ArrayDeque e) → ST s e 
native peekFirst


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.peekLast
peekLast ∷ Mutable s (ArrayDeque e) → ST s e 
native peekLast


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.poll
poll ∷ Mutable s (ArrayDeque e) → ST s e 
native poll


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.pollFirst
pollFirst ∷ Mutable s (ArrayDeque e) → ST s e 
native pollFirst


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.pollLast
pollLast ∷ Mutable s (ArrayDeque e) → ST s e 
native pollLast


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.pop
pop ∷ Mutable s (ArrayDeque e) → ST s e 
native pop


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.push
push ∷ Mutable s (ArrayDeque e) → e → ST s () 
native push


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.remove
remove ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
        | Mutable s (ArrayDeque e) → ST s e 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.removeFirst
removeFirst ∷ Mutable s (ArrayDeque e) → ST s e 
native removeFirst


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.removeFirstOccurrence
removeFirstOccurrence ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
native removeFirstOccurrence


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.removeLast
removeLast ∷ Mutable s (ArrayDeque e) → ST s e 
native removeLast


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.removeLastOccurrence
removeLastOccurrence ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
native removeLastOccurrence


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.removeα
removeα ∷ Mutable s (ArrayDeque e) → Object → ST s Bool 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.removeβ
removeβ ∷ Mutable s (ArrayDeque e) → ST s e 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.size
size ∷ Mutable s (ArrayDeque e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.toArray
toArray ∷ Mutable s (ArrayDeque e) → ArrayOf s Object → STMutable s (JArray Object) 
         | Mutable s (ArrayDeque e) → STMutable s (JArray Object) 
native toArray


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.toArrayα
toArrayα ∷ Mutable s (ArrayDeque e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayDeque.toArrayβ
toArrayβ ∷ Mutable s (ArrayDeque e) → STMutable s (JArray Object) 
native toArray  overloads toArray

-- | Enum for locale categories. These locale categories are used to get/set the default locale for the specific functionality represented by the category. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  display ∷ LocaleCategory 
--  pure native java.util.Locale.Category.DISPLAY 
--  format ∷ LocaleCategory 
--  pure native java.util.Locale.Category.FORMAT 
--  valueOf ∷ String → LocaleCategory 
--  pure native java.util.Locale.Category.valueOf 
--  values ∷ () → STMutable s (JArray LocaleCategory) 
--  native java.util.Locale.Category.values 

@url http://www.frege-lang.org/doc/frege/java/Util#LocaleCategory
data LocaleCategory 


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleCategory.display
display ∷ LocaleCategory 
pure native java.util.Locale.Category.DISPLAY


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleCategory.format
format ∷ LocaleCategory 
pure native java.util.Locale.Category.FORMAT


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleCategory.valueOf
valueOf ∷ String → LocaleCategory 
pure native java.util.Locale.Category.valueOf


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleCategory.values
values ∷ () → STMutable s (JArray LocaleCategory) 
native java.util.Locale.Category.values

-- | This class implements the Map interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values). 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  clear ∷ Mutable s (IdentityHashMap k v) → ST s () 
--  native clear 
--  clone ∷ Mutable s (IdentityHashMap k v) → ST s Object 
--  native clone 
--  containsKey ∷ Mutable s (IdentityHashMap k v) → Object → ST s Bool 
--  native containsKey 
--  containsValue ∷ Mutable s (IdentityHashMap k v) → Object → ST s Bool 
--  native containsValue 
--  entrySet ∷ Mutable s (IdentityHashMap k v) → STMutable s (Set (MapEntry k v)) 
--  native entrySet 
--  equals ∷ Mutable s (IdentityHashMap k v) → Object → ST s Bool 
--  native equals 
--  fromList ∷ [(k, v)] → STMutable s (IdentityHashMap k v) 
--  get ∷ Mutable s (IdentityHashMap k v) → Object → ST s v 
--  native get 
--  hashCode ∷ Mutable s (IdentityHashMap k v) → ST s Int 
--  native hashCode 
--  isEmpty ∷ Mutable s (IdentityHashMap k v) → ST s Bool 
--  native isEmpty 
--  keySet ∷ Mutable s (IdentityHashMap k v) → STMutable s (Set k) 
--  native keySet 
--  new ∷ Int → STMutable s (IdentityHashMap k v) 
--       | () → STMutable s (IdentityHashMap k v) 
--       | Mutable s (Map k v) → STMutable s (IdentityHashMap k v) 
--  native new 
--  newα ∷ Int → STMutable s (IdentityHashMap k v) 
--  native new  overloads new 
--  newβ ∷ () → STMutable s (IdentityHashMap k v) 
--  native new  overloads new 
--  newγ ∷ Mutable s (Map k v) → STMutable s (IdentityHashMap k v) 
--  native new  overloads new 
--  put ∷ Mutable s (IdentityHashMap k v) → k → v → ST s v 
--  native put 
--  putAll ∷ Mutable s (IdentityHashMap k v) → Mutable s (Map k v) → ST s () 
--  native putAll 
--  remove ∷ Mutable s (IdentityHashMap k v) → Object → ST s v 
--  native remove 
--  size ∷ Mutable s (IdentityHashMap k v) → ST s Int 
--  native size 
--  values ∷ Mutable s (IdentityHashMap k v) → STMutable s (Collection v) 
--  native values 

@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap
data IdentityHashMap k v 


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.clear
clear ∷ Mutable s (IdentityHashMap k v) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.clone
clone ∷ Mutable s (IdentityHashMap k v) → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.containsKey
containsKey ∷ Mutable s (IdentityHashMap k v) → Object → ST s Bool 
native containsKey


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.containsValue
containsValue ∷ Mutable s (IdentityHashMap k v) → Object → ST s Bool 
native containsValue


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.entrySet
entrySet ∷ Mutable s (IdentityHashMap k v) → STMutable s (Set (MapEntry k v)) 
native entrySet


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.equals
equals ∷ Mutable s (IdentityHashMap k v) → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.fromList
fromList ∷ [(k, v)] → STMutable s (IdentityHashMap k v)


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.get
get ∷ Mutable s (IdentityHashMap k v) → Object → ST s v 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.hashCode
hashCode ∷ Mutable s (IdentityHashMap k v) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.isEmpty
isEmpty ∷ Mutable s (IdentityHashMap k v) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.keySet
keySet ∷ Mutable s (IdentityHashMap k v) → STMutable s (Set k) 
native keySet


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap._new
new ∷ Int → STMutable s (IdentityHashMap k v) 
     | () → STMutable s (IdentityHashMap k v) 
     | Mutable s (Map k v) → STMutable s (IdentityHashMap k v) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.newα
newα ∷ Int → STMutable s (IdentityHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.newβ
newβ ∷ () → STMutable s (IdentityHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.newγ
newγ ∷ Mutable s (Map k v) → STMutable s (IdentityHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.put
put ∷ Mutable s (IdentityHashMap k v) → k → v → ST s v 
native put


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.putAll
putAll ∷ Mutable s (IdentityHashMap k v) → Mutable s (Map k v) → ST s () 
native putAll


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.remove
remove ∷ Mutable s (IdentityHashMap k v) → Object → ST s v 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.size
size ∷ Mutable s (IdentityHashMap k v) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#IdentityHashMap.values
values ∷ Mutable s (IdentityHashMap k v) → STMutable s (Collection v) 
native values

-- | A SortedSet extended with navigation methods reporting closest matches for given search targets. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  ceiling ∷ Mutable s (NavigableSet e) → e → ST s e 
--  native ceiling 
--  descendingIterator ∷ Mutable s (NavigableSet e) → STMutable s (Iterator e) 
--  native descendingIterator 
--  descendingSet ∷ Mutable s (NavigableSet e) → STMutable s (NavigableSet e) 
--  native descendingSet 
--  floor ∷ Mutable s (NavigableSet e) → e → ST s e 
--  native floor 
--  headSet ∷ Mutable s (NavigableSet e) → e → Bool → STMutable s (NavigableSet e) 
--           | Mutable s (NavigableSet e) → e → STMutable s (SortedSet e) 
--  native headSet 
--  headSetα ∷ Mutable s (NavigableSet e) → e → Bool → STMutable s (NavigableSet e) 
--  native headSet  overloads headSet 
--  headSetβ ∷ Mutable s (NavigableSet e) → e → STMutable s (SortedSet e) 
--  native headSet  overloads headSet 
--  higher ∷ Mutable s (NavigableSet e) → e → ST s e 
--  native higher 
--  iterator ∷ Mutable s (NavigableSet e) → STMutable s (Iterator e) 
--  native iterator 
--  lower ∷ Mutable s (NavigableSet e) → e → ST s e 
--  native lower 
--  pollFirst ∷ Mutable s (NavigableSet e) → ST s e 
--  native pollFirst 
--  pollLast ∷ Mutable s (NavigableSet e) → ST s e 
--  native pollLast 
--  subSet ∷ Mutable s (NavigableSet e) → e → Bool → e → Bool → STMutable s (NavigableSet e) 
--          | Mutable s (NavigableSet e) → e → e → STMutable s (SortedSet e) 
--  native subSet 
--  subSetα ∷ Mutable s (NavigableSet e) → e → Bool → e → Bool → STMutable s (NavigableSet e) 
--  native subSet  overloads subSet 
--  subSetβ ∷ Mutable s (NavigableSet e) → e → e → STMutable s (SortedSet e) 
--  native subSet  overloads subSet 
--  tailSet ∷ Mutable s (NavigableSet e) → e → Bool → STMutable s (NavigableSet e) 
--           | Mutable s (NavigableSet e) → e → STMutable s (SortedSet e) 
--  native tailSet 
--  tailSetα ∷ Mutable s (NavigableSet e) → e → Bool → STMutable s (NavigableSet e) 
--  native tailSet  overloads tailSet 
--  tailSetβ ∷ Mutable s (NavigableSet e) → e → STMutable s (SortedSet e) 
--  native tailSet  overloads tailSet 

@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet
data NavigableSet e 


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.ceiling
ceiling ∷ Mutable s (NavigableSet e) → e → ST s e 
native ceiling


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.descendingIterator
descendingIterator ∷ Mutable s (NavigableSet e) → STMutable s (Iterator e) 
native descendingIterator


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.descendingSet
descendingSet ∷ Mutable s (NavigableSet e) → STMutable s (NavigableSet e) 
native descendingSet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.floor
floor ∷ Mutable s (NavigableSet e) → e → ST s e 
native floor


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.headSet
headSet ∷ Mutable s (NavigableSet e) → e → Bool → STMutable s (NavigableSet e) 
         | Mutable s (NavigableSet e) → e → STMutable s (SortedSet e) 
native headSet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.headSetα
headSetα ∷ Mutable s (NavigableSet e) → e → Bool → STMutable s (NavigableSet e) 
native headSet  overloads headSet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.headSetβ
headSetβ ∷ Mutable s (NavigableSet e) → e → STMutable s (SortedSet e) 
native headSet  overloads headSet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.higher
higher ∷ Mutable s (NavigableSet e) → e → ST s e 
native higher


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.iterator
iterator ∷ Mutable s (NavigableSet e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.lower
lower ∷ Mutable s (NavigableSet e) → e → ST s e 
native lower


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.pollFirst
pollFirst ∷ Mutable s (NavigableSet e) → ST s e 
native pollFirst


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.pollLast
pollLast ∷ Mutable s (NavigableSet e) → ST s e 
native pollLast


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.subSet
subSet ∷ Mutable s (NavigableSet e) → e → Bool → e → Bool → STMutable s (NavigableSet e) 
        | Mutable s (NavigableSet e) → e → e → STMutable s (SortedSet e) 
native subSet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.subSetα
subSetα ∷ Mutable s (NavigableSet e) → e → Bool → e → Bool → STMutable s (NavigableSet e) 
native subSet  overloads subSet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.subSetβ
subSetβ ∷ Mutable s (NavigableSet e) → e → e → STMutable s (SortedSet e) 
native subSet  overloads subSet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.tailSet
tailSet ∷ Mutable s (NavigableSet e) → e → Bool → STMutable s (NavigableSet e) 
         | Mutable s (NavigableSet e) → e → STMutable s (SortedSet e) 
native tailSet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.tailSetα
tailSetα ∷ Mutable s (NavigableSet e) → e → Bool → STMutable s (NavigableSet e) 
native tailSet  overloads tailSet


@url http://www.frege-lang.org/doc/frege/java/Util#NavigableSet.tailSetβ
tailSetβ ∷ Mutable s (NavigableSet e) → e → STMutable s (SortedSet e) 
native tailSet  overloads tailSet

-- | Hash table and linked list implementation of the Set interface, with predictable iteration order. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  new ∷ Mutable s (Collection e) → STMutable s (LinkedHashSet e) 
--       | () → STMutable s (LinkedHashSet e) 
--       | Int → STMutable s (LinkedHashSet e) 
--       | Int → Float → STMutable s (LinkedHashSet e) 
--  native new 
--  newα ∷ Mutable s (Collection e) → STMutable s (LinkedHashSet e) 
--  native new  overloads new 
--  newβ ∷ () → STMutable s (LinkedHashSet e) 
--  native new  overloads new 
--  newγ ∷ Int → STMutable s (LinkedHashSet e) 
--  native new  overloads new 
--  newδ ∷ Int → Float → STMutable s (LinkedHashSet e) 
--  native new  overloads new 

@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashSet
data LinkedHashSet e 


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashSet._new
new ∷ Mutable s (Collection e) → STMutable s (LinkedHashSet e) 
     | () → STMutable s (LinkedHashSet e) 
     | Int → STMutable s (LinkedHashSet e) 
     | Int → Float → STMutable s (LinkedHashSet e) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashSet.newα
newα ∷ Mutable s (Collection e) → STMutable s (LinkedHashSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashSet.newβ
newβ ∷ () → STMutable s (LinkedHashSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashSet.newγ
newγ ∷ Int → STMutable s (LinkedHashSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedHashSet.newδ
newδ ∷ Int → Float → STMutable s (LinkedHashSet e) 
native new  overloads new

-- | An Entry maintaining a key and a value. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  equals ∷ Mutable s (AbstractMapSimpleEntry k v) → Object → ST s Bool 
--  native equals 
--  getKey ∷ Mutable s (AbstractMapSimpleEntry k v) → ST s k 
--  native getKey 
--  getValue ∷ Mutable s (AbstractMapSimpleEntry k v) → ST s v 
--  native getValue 
--  hashCode ∷ Mutable s (AbstractMapSimpleEntry k v) → ST s Int 
--  native hashCode 
--  new ∷ k → v → STMutable s (AbstractMapSimpleEntry k v) 
--       | Mutable s (MapEntry k v) → STMutable s (AbstractMapSimpleEntry k v) 
--  native new 
--  newα ∷ k → v → STMutable s (AbstractMapSimpleEntry k v) 
--  native new  overloads new 
--  newβ ∷ Mutable s (MapEntry k v) → STMutable s (AbstractMapSimpleEntry k v) 
--  native new  overloads new 
--  setValue ∷ Mutable s (AbstractMapSimpleEntry k v) → v → ST s v 
--  native setValue 
--  toString ∷ Mutable s (AbstractMapSimpleEntry k v) → ST s String 
--  native toString 

@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry
data AbstractMapSimpleEntry k v 


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry.equals
equals ∷ Mutable s (AbstractMapSimpleEntry k v) → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry.getKey
getKey ∷ Mutable s (AbstractMapSimpleEntry k v) → ST s k 
native getKey


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry.getValue
getValue ∷ Mutable s (AbstractMapSimpleEntry k v) → ST s v 
native getValue


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry.hashCode
hashCode ∷ Mutable s (AbstractMapSimpleEntry k v) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry._new
new ∷ k → v → STMutable s (AbstractMapSimpleEntry k v) 
     | Mutable s (MapEntry k v) → STMutable s (AbstractMapSimpleEntry k v) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry.newα
newα ∷ k → v → STMutable s (AbstractMapSimpleEntry k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry.newβ
newβ ∷ Mutable s (MapEntry k v) → STMutable s (AbstractMapSimpleEntry k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry.setValue
setValue ∷ Mutable s (AbstractMapSimpleEntry k v) → v → ST s v 
native setValue


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMapSimpleEntry.toString
toString ∷ Mutable s (AbstractMapSimpleEntry k v) → ST s String 
native toString

-- | This class provides skeletal implementations of some Queue operations. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (AbstractQueue e) → e → ST s Bool 
--  native add 
--  addAll ∷ Mutable s (AbstractQueue e) → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  clear ∷ Mutable s (AbstractQueue e) → ST s () 
--  native clear 
--  element ∷ Mutable s (AbstractQueue e) → ST s e 
--  native element 
--  remove ∷ Mutable s (AbstractQueue e) → ST s e 
--  native remove 

@url http://www.frege-lang.org/doc/frege/java/Util#AbstractQueue
data AbstractQueue e 


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractQueue.add
add ∷ Mutable s (AbstractQueue e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractQueue.addAll
addAll ∷ Mutable s (AbstractQueue e) → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractQueue.clear
clear ∷ Mutable s (AbstractQueue e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractQueue.element
element ∷ Mutable s (AbstractQueue e) → ST s e 
native element


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractQueue.remove
remove ∷ Mutable s (AbstractQueue e) → ST s e 
native remove

-- | This class provides a skeletal implementation of the List interface to minimize the effort required to implement this interface backed by a "random access" data store (such as an array). 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (AbstractList e) → Int → e → ST s () 
--       | Mutable s (AbstractList e) → e → ST s Bool 
--  native add 
--  addAll ∷ Mutable s (AbstractList e) → Int → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  addα ∷ Mutable s (AbstractList e) → Int → e → ST s () 
--  native add  overloads add 
--  addβ ∷ Mutable s (AbstractList e) → e → ST s Bool 
--  native add  overloads add 
--  clear ∷ Mutable s (AbstractList e) → ST s () 
--  native clear 
--  equals ∷ Mutable s (AbstractList e) → Object → ST s Bool 
--  native equals 
--  get ∷ Mutable s (AbstractList e) → Int → ST s e 
--  native get 
--  hashCode ∷ Mutable s (AbstractList e) → ST s Int 
--  native hashCode 
--  indexOf ∷ Mutable s (AbstractList e) → Object → ST s Int 
--  native indexOf 
--  iterator ∷ Mutable s (AbstractList e) → STMutable s (Iterator e) 
--  native iterator 
--  lastIndexOf ∷ Mutable s (AbstractList e) → Object → ST s Int 
--  native lastIndexOf 
--  listIterator ∷ Mutable s (AbstractList e) → STMutable s (ListIterator e) 
--                | Mutable s (AbstractList e) → Int → STMutable s (ListIterator e) 
--  native listIterator 
--  listIteratorα ∷ Mutable s (AbstractList e) → STMutable s (ListIterator e) 
--  native listIterator  overloads listIterator 
--  listIteratorβ ∷ Mutable s (AbstractList e) → Int → STMutable s (ListIterator e) 
--  native listIterator  overloads listIterator 
--  remove ∷ Mutable s (AbstractList e) → Int → ST s e 
--  native remove 
--  set ∷ Mutable s (AbstractList e) → Int → e → ST s e 
--  native set 
--  subList ∷ Mutable s (AbstractList e) → Int → Int → STMutable s (List e) 
--  native subList 

@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList
data AbstractList e 


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.add
add ∷ Mutable s (AbstractList e) → Int → e → ST s () 
     | Mutable s (AbstractList e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.addAll
addAll ∷ Mutable s (AbstractList e) → Int → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.addα
addα ∷ Mutable s (AbstractList e) → Int → e → ST s () 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.addβ
addβ ∷ Mutable s (AbstractList e) → e → ST s Bool 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.clear
clear ∷ Mutable s (AbstractList e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.equals
equals ∷ Mutable s (AbstractList e) → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.get
get ∷ Mutable s (AbstractList e) → Int → ST s e 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.hashCode
hashCode ∷ Mutable s (AbstractList e) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.indexOf
indexOf ∷ Mutable s (AbstractList e) → Object → ST s Int 
native indexOf


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.iterator
iterator ∷ Mutable s (AbstractList e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.lastIndexOf
lastIndexOf ∷ Mutable s (AbstractList e) → Object → ST s Int 
native lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.listIterator
listIterator ∷ Mutable s (AbstractList e) → STMutable s (ListIterator e) 
              | Mutable s (AbstractList e) → Int → STMutable s (ListIterator e) 
native listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.listIteratorα
listIteratorα ∷ Mutable s (AbstractList e) → STMutable s (ListIterator e) 
native listIterator  overloads listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.listIteratorβ
listIteratorβ ∷ Mutable s (AbstractList e) → Int → STMutable s (ListIterator e) 
native listIterator  overloads listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.remove
remove ∷ Mutable s (AbstractList e) → Int → ST s e 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.set
set ∷ Mutable s (AbstractList e) → Int → e → ST s e 
native set


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractList.subList
subList ∷ Mutable s (AbstractList e) → Int → Int → STMutable s (List e) 
native subList

-- | Hash table based implementation of the Map interface. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  clear ∷ Mutable s (HashMap k v) → ST s () 
--  native clear 
--  clone ∷ Mutable s (HashMap k v) → ST s Object 
--  native clone 
--  containsKey ∷ Mutable s (HashMap k v) → a → ST s Bool 
--  native containsKey 
--  containsValue ∷ Mutable s (HashMap k v) → a → ST s Bool 
--  native containsValue 
--  entrySet ∷ Mutable s (HashMap k v) → STMutable s (Set (Mutable s (MapEntry k v))) 
--  native entrySet 
--  fromList ∷ [(k, v)] → STMutable s (HashMap k v) 
--  get ∷ Mutable s (HashMap k v) → k → ST s (Maybe v) 
--  native get 
--  isEmpty ∷ Mutable s (HashMap k v) → ST s Bool 
--  native isEmpty 
--  keySet ∷ Mutable s (HashMap k v) → STMutable s (Set k) 
--  native keySet 
--  new ∷ Mutable s (Map k v) → STMutable s (HashMap k v) 
--       | () → STMutable s (HashMap k v) 
--       | Int → STMutable s (HashMap k v) 
--       | Int → Float → STMutable s (HashMap k v) 
--  native new 
--  newα ∷ Mutable s (Map k v) → STMutable s (HashMap k v) 
--  native new  overloads new 
--  newβ ∷ () → STMutable s (HashMap k v) 
--  native new  overloads new 
--  newγ ∷ Int → STMutable s (HashMap k v) 
--  native new  overloads new 
--  newδ ∷ Int → Float → STMutable s (HashMap k v) 
--  native new  overloads new 
--  put ∷ Mutable s (HashMap k v) → k → v → ST s (Maybe v) 
--  native put 
--  putAll ∷ Mutable s (HashMap k v) → Mutable s (Map k v) → ST s () 
--  native putAll 
--  remove ∷ Mutable s (HashMap k v) → k → ST s v 
--  native remove 
--  size ∷ Mutable s (HashMap k v) → ST s Int 
--  native size 
--  values ∷ Mutable s (HashMap k v) → STMutable s (Collection v) 
--  native values 

@url http://www.frege-lang.org/doc/frege/java/Util#HashMap
data HashMap k v 


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.clear
clear ∷ Mutable s (HashMap k v) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.clone
clone ∷ Mutable s (HashMap k v) → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.containsKey
containsKey ∷ Mutable s (HashMap k v) → a → ST s Bool 
native containsKey


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.containsValue
containsValue ∷ Mutable s (HashMap k v) → a → ST s Bool 
native containsValue


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.entrySet
entrySet ∷ Mutable s (HashMap k v) → STMutable s (Set (Mutable s (MapEntry k v))) 
native entrySet


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.fromList
fromList ∷ [(k, v)] → STMutable s (HashMap k v)


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.get
get ∷ Mutable s (HashMap k v) → k → ST s (Maybe v) 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.isEmpty
isEmpty ∷ Mutable s (HashMap k v) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.keySet
keySet ∷ Mutable s (HashMap k v) → STMutable s (Set k) 
native keySet


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap._new
new ∷ Mutable s (Map k v) → STMutable s (HashMap k v) 
     | () → STMutable s (HashMap k v) 
     | Int → STMutable s (HashMap k v) 
     | Int → Float → STMutable s (HashMap k v) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.newα
newα ∷ Mutable s (Map k v) → STMutable s (HashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.newβ
newβ ∷ () → STMutable s (HashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.newγ
newγ ∷ Int → STMutable s (HashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.newδ
newδ ∷ Int → Float → STMutable s (HashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.put
put ∷ Mutable s (HashMap k v) → k → v → ST s (Maybe v) 
native put


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.putAll
putAll ∷ Mutable s (HashMap k v) → Mutable s (Map k v) → ST s () 
native putAll


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.remove
remove ∷ Mutable s (HashMap k v) → k → ST s v 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.size
size ∷ Mutable s (HashMap k v) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#HashMap.values
values ∷ Mutable s (HashMap k v) → STMutable s (Collection v) 
native values

-- | A Red-Black tree based NavigableMap implementation. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  ceilingEntry ∷ Mutable s (TreeMap k v) → k → STMutable s (MapEntry k v) 
--  native ceilingEntry 
--  ceilingKey ∷ Mutable s (TreeMap k v) → k → ST s k 
--  native ceilingKey 
--  clear ∷ Mutable s (TreeMap k v) → ST s () 
--  native clear 
--  clone ∷ Mutable s (TreeMap k v) → ST s Object 
--  native clone 
--  comparator ∷ Mutable s (TreeMap k v) → ST s (Comparator k) 
--  native comparator 
--  containsKey ∷ Mutable s (TreeMap k v) → a → ST s Bool 
--  native containsKey 
--  containsValue ∷ Mutable s (TreeMap k v) → a → ST s Bool 
--  native containsValue 
--  descendingKeySet ∷ Mutable s (TreeMap k v) → STMutable s (NavigableSet k) 
--  native descendingKeySet 
--  descendingMap ∷ Mutable s (TreeMap k v) → STMutable s (NavigableMap k v) 
--  native descendingMap 
--  entrySet ∷ Mutable s (TreeMap k v) → STMutable s (Set (MapEntry k v)) 
--  native entrySet 
--  firstEntry ∷ Mutable s (TreeMap k v) → STMutable s (MapEntry k v) 
--  native firstEntry 
--  firstKey ∷ Mutable s (TreeMap k v) → ST s k 
--  native firstKey 
--  floorEntry ∷ Mutable s (TreeMap k v) → k → STMutable s (MapEntry k v) 
--  native floorEntry 
--  floorKey ∷ Mutable s (TreeMap k v) → k → ST s k 
--  native floorKey 
--  fromList ∷ [(k, v)] → STMutable s (TreeMap k v) 
--  get ∷ Mutable s (TreeMap k v) → a → ST s v 
--  native get 
--  headMap ∷ Mutable s (TreeMap k v) → k → Bool → STMutable s (NavigableMap k v) 
--           | Mutable s (TreeMap k v) → k → STMutable s (SortedMap k v) 
--  native headMap 
--  headMapα ∷ Mutable s (TreeMap k v) → k → Bool → STMutable s (NavigableMap k v) 
--  native headMap  overloads headMap 
--  headMapβ ∷ Mutable s (TreeMap k v) → k → STMutable s (SortedMap k v) 
--  native headMap  overloads headMap 
--  higherEntry ∷ Mutable s (TreeMap k v) → k → STMutable s (MapEntry k v) 
--  native higherEntry 
--  higherKey ∷ Mutable s (TreeMap k v) → k → ST s k 
--  native higherKey 
--  keySet ∷ Mutable s (TreeMap k v) → STMutable s (Set k) 
--  native keySet 
--  lastEntry ∷ Mutable s (TreeMap k v) → STMutable s (MapEntry k v) 
--  native lastEntry 
--  lastKey ∷ Mutable s (TreeMap k v) → ST s k 
--  native lastKey 
--  lowerEntry ∷ Mutable s (TreeMap k v) → k → STMutable s (MapEntry k v) 
--  native lowerEntry 
--  lowerKey ∷ Mutable s (TreeMap k v) → k → ST s k 
--  native lowerKey 
--  navigableKeySet ∷ Mutable s (TreeMap k v) → STMutable s (NavigableSet k) 
--  native navigableKeySet 
--  new ∷ Mutable s (SortedMap k v) → STMutable s (TreeMap k v) 
--       | Mutable s (Map k v) → STMutable s (TreeMap k v) 
--       | Comparator k → STMutable s (TreeMap k v) 
--       | () → STMutable s (TreeMap k v) 
--  native new 
--  newα ∷ Mutable s (SortedMap k v) → STMutable s (TreeMap k v) 
--  native new  overloads new 
--  newβ ∷ Mutable s (Map k v) → STMutable s (TreeMap k v) 
--  native new  overloads new 
--  newγ ∷ Comparator k → STMutable s (TreeMap k v) 
--  native new  overloads new 
--  newδ ∷ () → STMutable s (TreeMap k v) 
--  native new  overloads new 
--  pollFirstEntry ∷ Mutable s (TreeMap k v) → STMutable s (MapEntry k v) 
--  native pollFirstEntry 
--  pollLastEntry ∷ Mutable s (TreeMap k v) → STMutable s (MapEntry k v) 
--  native pollLastEntry 
--  put ∷ Mutable s (TreeMap k v) → k → v → ST s v 
--  native put 
--  putAll ∷ Mutable s (TreeMap k v) → Mutable s (Map k v) → ST s () 
--  native putAll 
--  remove ∷ Mutable s (TreeMap k v) → a → ST s v 
--  native remove 
--  size ∷ Mutable s (TreeMap k v) → ST s Int 
--  native size 
--  subMap ∷ Mutable s (TreeMap k v) → k → Bool → k → Bool → STMutable s (NavigableMap k v) 
--          | Mutable s (TreeMap k v) → k → k → STMutable s (SortedMap k v) 
--  native subMap 
--  subMapα ∷ Mutable s (TreeMap k v) → k → Bool → k → Bool → STMutable s (NavigableMap k v) 
--  native subMap  overloads subMap 
--  subMapβ ∷ Mutable s (TreeMap k v) → k → k → STMutable s (SortedMap k v) 
--  native subMap  overloads subMap 
--  tailMap ∷ Mutable s (TreeMap k v) → k → Bool → STMutable s (NavigableMap k v) 
--           | Mutable s (TreeMap k v) → k → STMutable s (SortedMap k v) 
--  native tailMap 
--  tailMapα ∷ Mutable s (TreeMap k v) → k → Bool → STMutable s (NavigableMap k v) 
--  native tailMap  overloads tailMap 
--  tailMapβ ∷ Mutable s (TreeMap k v) → k → STMutable s (SortedMap k v) 
--  native tailMap  overloads tailMap 
--  values ∷ Mutable s (TreeMap k v) → STMutable s (Collection v) 
--  native values 

@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap
data TreeMap k v 


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.ceilingEntry
ceilingEntry ∷ Mutable s (TreeMap k v) → k → STMutable s (MapEntry k v) 
native ceilingEntry


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.ceilingKey
ceilingKey ∷ Mutable s (TreeMap k v) → k → ST s k 
native ceilingKey


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.clear
clear ∷ Mutable s (TreeMap k v) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.clone
clone ∷ Mutable s (TreeMap k v) → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.comparator
comparator ∷ Mutable s (TreeMap k v) → ST s (Comparator k) 
native comparator


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.containsKey
containsKey ∷ Mutable s (TreeMap k v) → a → ST s Bool 
native containsKey


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.containsValue
containsValue ∷ Mutable s (TreeMap k v) → a → ST s Bool 
native containsValue


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.descendingKeySet
descendingKeySet ∷ Mutable s (TreeMap k v) → STMutable s (NavigableSet k) 
native descendingKeySet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.descendingMap
descendingMap ∷ Mutable s (TreeMap k v) → STMutable s (NavigableMap k v) 
native descendingMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.entrySet
entrySet ∷ Mutable s (TreeMap k v) → STMutable s (Set (MapEntry k v)) 
native entrySet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.firstEntry
firstEntry ∷ Mutable s (TreeMap k v) → STMutable s (MapEntry k v) 
native firstEntry


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.firstKey
firstKey ∷ Mutable s (TreeMap k v) → ST s k 
native firstKey


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.floorEntry
floorEntry ∷ Mutable s (TreeMap k v) → k → STMutable s (MapEntry k v) 
native floorEntry


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.floorKey
floorKey ∷ Mutable s (TreeMap k v) → k → ST s k 
native floorKey


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.fromList
fromList ∷ [(k, v)] → STMutable s (TreeMap k v)


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.get
get ∷ Mutable s (TreeMap k v) → a → ST s v 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.headMap
headMap ∷ Mutable s (TreeMap k v) → k → Bool → STMutable s (NavigableMap k v) 
         | Mutable s (TreeMap k v) → k → STMutable s (SortedMap k v) 
native headMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.headMapα
headMapα ∷ Mutable s (TreeMap k v) → k → Bool → STMutable s (NavigableMap k v) 
native headMap  overloads headMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.headMapβ
headMapβ ∷ Mutable s (TreeMap k v) → k → STMutable s (SortedMap k v) 
native headMap  overloads headMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.higherEntry
higherEntry ∷ Mutable s (TreeMap k v) → k → STMutable s (MapEntry k v) 
native higherEntry


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.higherKey
higherKey ∷ Mutable s (TreeMap k v) → k → ST s k 
native higherKey


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.keySet
keySet ∷ Mutable s (TreeMap k v) → STMutable s (Set k) 
native keySet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.lastEntry
lastEntry ∷ Mutable s (TreeMap k v) → STMutable s (MapEntry k v) 
native lastEntry


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.lastKey
lastKey ∷ Mutable s (TreeMap k v) → ST s k 
native lastKey


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.lowerEntry
lowerEntry ∷ Mutable s (TreeMap k v) → k → STMutable s (MapEntry k v) 
native lowerEntry


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.lowerKey
lowerKey ∷ Mutable s (TreeMap k v) → k → ST s k 
native lowerKey


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.navigableKeySet
navigableKeySet ∷ Mutable s (TreeMap k v) → STMutable s (NavigableSet k) 
native navigableKeySet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap._new
new ∷ Mutable s (SortedMap k v) → STMutable s (TreeMap k v) 
     | Mutable s (Map k v) → STMutable s (TreeMap k v) 
     | Comparator k → STMutable s (TreeMap k v) 
     | () → STMutable s (TreeMap k v) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.newα
newα ∷ Mutable s (SortedMap k v) → STMutable s (TreeMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.newβ
newβ ∷ Mutable s (Map k v) → STMutable s (TreeMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.newγ
newγ ∷ Comparator k → STMutable s (TreeMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.newδ
newδ ∷ () → STMutable s (TreeMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.pollFirstEntry
pollFirstEntry ∷ Mutable s (TreeMap k v) → STMutable s (MapEntry k v) 
native pollFirstEntry


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.pollLastEntry
pollLastEntry ∷ Mutable s (TreeMap k v) → STMutable s (MapEntry k v) 
native pollLastEntry


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.put
put ∷ Mutable s (TreeMap k v) → k → v → ST s v 
native put


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.putAll
putAll ∷ Mutable s (TreeMap k v) → Mutable s (Map k v) → ST s () 
native putAll


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.remove
remove ∷ Mutable s (TreeMap k v) → a → ST s v 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.size
size ∷ Mutable s (TreeMap k v) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.subMap
subMap ∷ Mutable s (TreeMap k v) → k → Bool → k → Bool → STMutable s (NavigableMap k v) 
        | Mutable s (TreeMap k v) → k → k → STMutable s (SortedMap k v) 
native subMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.subMapα
subMapα ∷ Mutable s (TreeMap k v) → k → Bool → k → Bool → STMutable s (NavigableMap k v) 
native subMap  overloads subMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.subMapβ
subMapβ ∷ Mutable s (TreeMap k v) → k → k → STMutable s (SortedMap k v) 
native subMap  overloads subMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.tailMap
tailMap ∷ Mutable s (TreeMap k v) → k → Bool → STMutable s (NavigableMap k v) 
         | Mutable s (TreeMap k v) → k → STMutable s (SortedMap k v) 
native tailMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.tailMapα
tailMapα ∷ Mutable s (TreeMap k v) → k → Bool → STMutable s (NavigableMap k v) 
native tailMap  overloads tailMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.tailMapβ
tailMapβ ∷ Mutable s (TreeMap k v) → k → STMutable s (SortedMap k v) 
native tailMap  overloads tailMap


@url http://www.frege-lang.org/doc/frege/java/Util#TreeMap.values
values ∷ Mutable s (TreeMap k v) → STMutable s (Collection v) 
native values

-- | A collection designed for holding elements prior to processing. Queues typically, but do not necessarily, order elements in a FIFO (first-in-first-out) manner. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (Queue e) → e → ST s Bool 
--  native add 
--  element ∷ Mutable s (Queue e) → ST s e 
--  native element 
--  offer ∷ Mutable s (Queue e) → e → ST s Bool 
--  native offer 
--  peek ∷ Mutable s (Queue e) → ST s e 
--  native peek 
--  poll ∷ Mutable s (Queue e) → ST s e 
--  native poll 
--  remove ∷ Mutable s (Queue e) → ST s e 
--  native remove 

@url http://www.frege-lang.org/doc/frege/java/Util#Queue
data Queue e 


@url http://www.frege-lang.org/doc/frege/java/Util#Queue.add
add ∷ Mutable s (Queue e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#Queue.element
element ∷ Mutable s (Queue e) → ST s e 
native element


@url http://www.frege-lang.org/doc/frege/java/Util#Queue.offer
offer ∷ Mutable s (Queue e) → e → ST s Bool 
native offer


@url http://www.frege-lang.org/doc/frege/java/Util#Queue.peek
peek ∷ Mutable s (Queue e) → ST s e 
native peek


@url http://www.frege-lang.org/doc/frege/java/Util#Queue.poll
poll ∷ Mutable s (Queue e) → ST s e 
native poll


@url http://www.frege-lang.org/doc/frege/java/Util#Queue.remove
remove ∷ Mutable s (Queue e) → ST s e 
native remove

-- | This class provides a skeletal implementation of the Collection interface, to minimize the effort required to implement this interface. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (AbstractCollection e) → e → ST s Bool 
--  native add 
--  addAll ∷ Mutable s (AbstractCollection e) → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  clear ∷ Mutable s (AbstractCollection e) → ST s () 
--  native clear 
--  contains ∷ Mutable s (AbstractCollection e) → Object → ST s Bool 
--  native contains 
--  containsAll ∷ Mutable s (AbstractCollection e) → Mutable s (Collection Object) → ST s Bool 
--  native containsAll 
--  isEmpty ∷ Mutable s (AbstractCollection e) → ST s Bool 
--  native isEmpty 
--  iterator ∷ Mutable s (AbstractCollection e) → STMutable s (Iterator e) 
--  native iterator 
--  remove ∷ Mutable s (AbstractCollection e) → Object → ST s Bool 
--  native remove 
--  removeAll ∷ Mutable s (AbstractCollection e) → Mutable s (Collection Object) → ST s Bool 
--  native removeAll 
--  retainAll ∷ Mutable s (AbstractCollection e) → Mutable s (Collection Object) → ST s Bool 
--  native retainAll 
--  size ∷ Mutable s (AbstractCollection e) → ST s Int 
--  native size 
--  toArray ∷ Mutable s (AbstractCollection e) → ArrayOf s Object → STMutable s (JArray Object) 
--           | Mutable s (AbstractCollection e) → STMutable s (JArray Object) 
--  native toArray 
--  toArrayα ∷ Mutable s (AbstractCollection e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toArrayβ ∷ Mutable s (AbstractCollection e) → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toString ∷ Mutable s (AbstractCollection e) → ST s String 
--  native toString 

@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection
data AbstractCollection e 


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.add
add ∷ Mutable s (AbstractCollection e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.addAll
addAll ∷ Mutable s (AbstractCollection e) → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.clear
clear ∷ Mutable s (AbstractCollection e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.contains
contains ∷ Mutable s (AbstractCollection e) → Object → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.containsAll
containsAll ∷ Mutable s (AbstractCollection e) → Mutable s (Collection Object) → ST s Bool 
native containsAll


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.isEmpty
isEmpty ∷ Mutable s (AbstractCollection e) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.iterator
iterator ∷ Mutable s (AbstractCollection e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.remove
remove ∷ Mutable s (AbstractCollection e) → Object → ST s Bool 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.removeAll
removeAll ∷ Mutable s (AbstractCollection e) → Mutable s (Collection Object) → ST s Bool 
native removeAll


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.retainAll
retainAll ∷ Mutable s (AbstractCollection e) → Mutable s (Collection Object) → ST s Bool 
native retainAll


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.size
size ∷ Mutable s (AbstractCollection e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.toArray
toArray ∷ Mutable s (AbstractCollection e) → ArrayOf s Object → STMutable s (JArray Object) 
         | Mutable s (AbstractCollection e) → STMutable s (JArray Object) 
native toArray


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.toArrayα
toArrayα ∷ Mutable s (AbstractCollection e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.toArrayβ
toArrayβ ∷ Mutable s (AbstractCollection e) → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractCollection.toString
toString ∷ Mutable s (AbstractCollection e) → ST s String 
native toString

-- | This class implements the Set interface, backed by a hash table (actually a HashMap instance). More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (HashSet e) → e → ST s Bool 
--  native add 
--  clear ∷ Mutable s (HashSet e) → ST s () 
--  native clear 
--  clone ∷ Mutable s (HashSet e) → ST s Object 
--  native clone 
--  contains ∷ Mutable s (HashSet e) → Object → ST s Bool 
--  native contains 
--  isEmpty ∷ Mutable s (HashSet e) → ST s Bool 
--  native isEmpty 
--  iterator ∷ Mutable s (HashSet e) → STMutable s (Iterator e) 
--  native iterator 
--  new ∷ Int → STMutable s (HashSet e) 
--       | Int → Float → STMutable s (HashSet e) 
--       | Mutable s (Collection e) → STMutable s (HashSet e) 
--       | () → STMutable s (HashSet e) 
--  native new 
--  newα ∷ Int → STMutable s (HashSet e) 
--  native new  overloads new 
--  newβ ∷ Int → Float → STMutable s (HashSet e) 
--  native new  overloads new 
--  newγ ∷ Mutable s (Collection e) → STMutable s (HashSet e) 
--  native new  overloads new 
--  newδ ∷ () → STMutable s (HashSet e) 
--  native new  overloads new 
--  remove ∷ Mutable s (HashSet e) → Object → ST s Bool 
--  native remove 
--  size ∷ Mutable s (HashSet e) → ST s Int 
--  native size 

@url http://www.frege-lang.org/doc/frege/java/Util#HashSet
data HashSet e 


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.add
add ∷ Mutable s (HashSet e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.clear
clear ∷ Mutable s (HashSet e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.clone
clone ∷ Mutable s (HashSet e) → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.contains
contains ∷ Mutable s (HashSet e) → Object → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.isEmpty
isEmpty ∷ Mutable s (HashSet e) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.iterator
iterator ∷ Mutable s (HashSet e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet._new
new ∷ Int → STMutable s (HashSet e) 
     | Int → Float → STMutable s (HashSet e) 
     | Mutable s (Collection e) → STMutable s (HashSet e) 
     | () → STMutable s (HashSet e) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.newα
newα ∷ Int → STMutable s (HashSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.newβ
newβ ∷ Int → Float → STMutable s (HashSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.newγ
newγ ∷ Mutable s (Collection e) → STMutable s (HashSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.newδ
newδ ∷ () → STMutable s (HashSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.remove
remove ∷ Mutable s (HashSet e) → Object → ST s Bool 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#HashSet.size
size ∷ Mutable s (HashSet e) → ST s Int 
native size

-- | A Locale object represents a specific geographical, political, or cultural region. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  canada ∷ Locale 
--  pure native java.util.Locale.CANADA 
--  canada_french ∷ Locale 
--  pure native java.util.Locale.CANADA_FRENCH 
--  china ∷ Locale 
--  pure native java.util.Locale.CHINA 
--  chinese ∷ Locale 
--  pure native java.util.Locale.CHINESE 
--  clone ∷ Locale → Object 
--  pure native clone 
--  english ∷ Locale 
--  pure native java.util.Locale.ENGLISH 
--  equals ∷ Locale → Object → Bool 
--  pure native equals 
--  forLanguageTag ∷ String → Locale 
--  pure native java.util.Locale.forLanguageTag 
--  france ∷ Locale 
--  pure native java.util.Locale.FRANCE 
--  french ∷ Locale 
--  pure native java.util.Locale.FRENCH 
--  german ∷ Locale 
--  pure native java.util.Locale.GERMAN 
--  germany ∷ Locale 
--  pure native java.util.Locale.GERMANY 
--  getAvailableLocales ∷ () → STMutable s (JArray Locale) 
--  native java.util.Locale.getAvailableLocales 
--  getCountry ∷ Locale → String 
--  pure native getCountry 
--  getDefault ∷ LocaleCategory → ST s Locale 
--              | () → ST s Locale 
--  native java.util.Locale.getDefault 
--  getDefaultα ∷ LocaleCategory → ST s Locale 
--  native java.util.Locale.getDefault  overloads getDefault 
--  getDefaultβ ∷ () → ST s Locale 
--  native java.util.Locale.getDefault  overloads getDefault 
--  getDisplayCountry ∷ Locale → String 
--                     | Locale → Locale → String 
--  pure native getDisplayCountry 
--  getDisplayCountryα ∷ Locale → String 
--  pure native getDisplayCountry  overloads getDisplayCountry 
--  getDisplayCountryβ ∷ Locale → Locale → String 
--  pure native getDisplayCountry  overloads getDisplayCountry 
--  getDisplayLanguage ∷ Locale → String 
--                      | Locale → Locale → String 
--  pure native getDisplayLanguage 
--  getDisplayLanguageα ∷ Locale → String 
--  pure native getDisplayLanguage  overloads getDisplayLanguage 
--  getDisplayLanguageβ ∷ Locale → Locale → String 
--  pure native getDisplayLanguage  overloads getDisplayLanguage 
--  getDisplayName ∷ Locale → Locale → String 
--                  | Locale → String 
--  pure native getDisplayName 
--  getDisplayNameα ∷ Locale → Locale → String 
--  pure native getDisplayName  overloads getDisplayName 
--  getDisplayNameβ ∷ Locale → String 
--  pure native getDisplayName  overloads getDisplayName 
--  getDisplayScript ∷ Locale → String 
--                    | Locale → Locale → String 
--  pure native getDisplayScript 
--  getDisplayScriptα ∷ Locale → String 
--  pure native getDisplayScript  overloads getDisplayScript 
--  getDisplayScriptβ ∷ Locale → Locale → String 
--  pure native getDisplayScript  overloads getDisplayScript 
--  getDisplayVariant ∷ Locale → Locale → String 
--                     | Locale → String 
--  pure native getDisplayVariant 
--  getDisplayVariantα ∷ Locale → Locale → String 
--  pure native getDisplayVariant  overloads getDisplayVariant 
--  getDisplayVariantβ ∷ Locale → String 
--  pure native getDisplayVariant  overloads getDisplayVariant 
--  getExtension ∷ Locale → Char → String 
--  pure native getExtension 
--  getExtensionKeys ∷ Locale → STMutable s (Set Character) 
--  native getExtensionKeys 
--  getISO3Country ∷ Locale → String 
--  pure native getISO3Country 
--  getISO3Language ∷ Locale → String 
--  pure native getISO3Language 
--  getISOCountries ∷ () → STMutable s (JArray String) 
--  native java.util.Locale.getISOCountries 
--  getISOLanguages ∷ () → STMutable s (JArray String) 
--  native java.util.Locale.getISOLanguages 
--  getLanguage ∷ Locale → String 
--  pure native getLanguage 
--  getScript ∷ Locale → String 
--  pure native getScript 
--  getUnicodeLocaleAttributes ∷ Locale → STMutable s (Set String) 
--  native getUnicodeLocaleAttributes 
--  getUnicodeLocaleKeys ∷ Locale → STMutable s (Set String) 
--  native getUnicodeLocaleKeys 
--  getUnicodeLocaleType ∷ Locale → String → String 
--  pure native getUnicodeLocaleType 
--  getVariant ∷ Locale → String 
--  pure native getVariant 
--  hashCode ∷ Locale → Int 
--  pure native hashCode 
--  italian ∷ Locale 
--  pure native java.util.Locale.ITALIAN 
--  italy ∷ Locale 
--  pure native java.util.Locale.ITALY 
--  japan ∷ Locale 
--  pure native java.util.Locale.JAPAN 
--  japanese ∷ Locale 
--  pure native java.util.Locale.JAPANESE 
--  korea ∷ Locale 
--  pure native java.util.Locale.KOREA 
--  korean ∷ Locale 
--  pure native java.util.Locale.KOREAN 
--  new ∷ String → Locale 
--       | String → String → Locale 
--       | String → String → String → Locale 
--  pure native new 
--   Create a Locale like so: 
--   Locale.new "de" 
--   Locale.new "de" "AT"   
--  newα ∷ String → Locale 
--  pure native new  overloads new 
--   Create a Locale like so: 
--   Locale.new "de" 
--   Locale.new "de" "AT"   
--  newβ ∷ String → String → Locale 
--  pure native new  overloads new 
--   Create a Locale like so: 
--   Locale.new "de" 
--   Locale.new "de" "AT"   
--  newγ ∷ String → String → String → Locale 
--  pure native new  overloads new 
--   Create a Locale like so: 
--   Locale.new "de" 
--   Locale.new "de" "AT"   
--  prc ∷ Locale 
--  pure native java.util.Locale.PRC 
--  private_use_extension ∷ Char 
--  pure native java.util.Locale.PRIVATE_USE_EXTENSION 
--  root ∷ Locale 
--  pure native java.util.Locale.ROOT 
--  setDefault ∷ Locale → ST s () 
--              | LocaleCategory → Locale → ST s () 
--  native java.util.Locale.setDefault 
--  setDefaultα ∷ Locale → ST s () 
--  native java.util.Locale.setDefault  overloads setDefault 
--  setDefaultβ ∷ LocaleCategory → Locale → ST s () 
--  native java.util.Locale.setDefault  overloads setDefault 
--  simplified_chinese ∷ Locale 
--  pure native java.util.Locale.SIMPLIFIED_CHINESE 
--  taiwan ∷ Locale 
--  pure native java.util.Locale.TAIWAN 
--  toLanguageTag ∷ Locale → String 
--  pure native toLanguageTag 
--  toString ∷ Locale → String 
--  pure native toString 
--  traditional_chinese ∷ Locale 
--  pure native java.util.Locale.TRADITIONAL_CHINESE 
--  uk ∷ Locale 
--  pure native java.util.Locale.UK 
--  unicode_locale_extension ∷ Char 
--  pure native java.util.Locale.UNICODE_LOCALE_EXTENSION 
--  us ∷ Locale 
--  pure native java.util.Locale.US 

@url http://www.frege-lang.org/doc/frege/java/Util#Locale
data Locale 


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.canada
canada ∷ Locale 
pure native java.util.Locale.CANADA


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.canada_french
canada_french ∷ Locale 
pure native java.util.Locale.CANADA_FRENCH


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.china
china ∷ Locale 
pure native java.util.Locale.CHINA


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.chinese
chinese ∷ Locale 
pure native java.util.Locale.CHINESE


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.clone
clone ∷ Locale → Object 
pure native clone


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.english
english ∷ Locale 
pure native java.util.Locale.ENGLISH


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.equals
equals ∷ Locale → Object → Bool 
pure native equals


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.forLanguageTag
forLanguageTag ∷ String → Locale 
pure native java.util.Locale.forLanguageTag


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.france
france ∷ Locale 
pure native java.util.Locale.FRANCE


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.french
french ∷ Locale 
pure native java.util.Locale.FRENCH


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.german
german ∷ Locale 
pure native java.util.Locale.GERMAN


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.germany
germany ∷ Locale 
pure native java.util.Locale.GERMANY


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getAvailableLocales
getAvailableLocales ∷ () → STMutable s (JArray Locale) 
native java.util.Locale.getAvailableLocales


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getCountry
getCountry ∷ Locale → String 
pure native getCountry


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDefault
getDefault ∷ LocaleCategory → ST s Locale 
            | () → ST s Locale 
native java.util.Locale.getDefault


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDefaultα
getDefaultα ∷ LocaleCategory → ST s Locale 
native java.util.Locale.getDefault  overloads getDefault


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDefaultβ
getDefaultβ ∷ () → ST s Locale 
native java.util.Locale.getDefault  overloads getDefault


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayCountry
getDisplayCountry ∷ Locale → String 
                   | Locale → Locale → String 
pure native getDisplayCountry


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayCountryα
getDisplayCountryα ∷ Locale → String 
pure native getDisplayCountry  overloads getDisplayCountry


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayCountryβ
getDisplayCountryβ ∷ Locale → Locale → String 
pure native getDisplayCountry  overloads getDisplayCountry


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayLanguage
getDisplayLanguage ∷ Locale → String 
                    | Locale → Locale → String 
pure native getDisplayLanguage


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayLanguageα
getDisplayLanguageα ∷ Locale → String 
pure native getDisplayLanguage  overloads getDisplayLanguage


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayLanguageβ
getDisplayLanguageβ ∷ Locale → Locale → String 
pure native getDisplayLanguage  overloads getDisplayLanguage


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayName
getDisplayName ∷ Locale → Locale → String 
                | Locale → String 
pure native getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayNameα
getDisplayNameα ∷ Locale → Locale → String 
pure native getDisplayName  overloads getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayNameβ
getDisplayNameβ ∷ Locale → String 
pure native getDisplayName  overloads getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayScript
getDisplayScript ∷ Locale → String 
                  | Locale → Locale → String 
pure native getDisplayScript


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayScriptα
getDisplayScriptα ∷ Locale → String 
pure native getDisplayScript  overloads getDisplayScript


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayScriptβ
getDisplayScriptβ ∷ Locale → Locale → String 
pure native getDisplayScript  overloads getDisplayScript


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayVariant
getDisplayVariant ∷ Locale → Locale → String 
                   | Locale → String 
pure native getDisplayVariant


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayVariantα
getDisplayVariantα ∷ Locale → Locale → String 
pure native getDisplayVariant  overloads getDisplayVariant


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getDisplayVariantβ
getDisplayVariantβ ∷ Locale → String 
pure native getDisplayVariant  overloads getDisplayVariant


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getExtension
getExtension ∷ Locale → Char → String 
pure native getExtension


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getExtensionKeys
getExtensionKeys ∷ Locale → STMutable s (Set Character) 
native getExtensionKeys


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getISO3Country
getISO3Country ∷ Locale → String 
pure native getISO3Country


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getISO3Language
getISO3Language ∷ Locale → String 
pure native getISO3Language


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getISOCountries
getISOCountries ∷ () → STMutable s (JArray String) 
native java.util.Locale.getISOCountries


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getISOLanguages
getISOLanguages ∷ () → STMutable s (JArray String) 
native java.util.Locale.getISOLanguages


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getLanguage
getLanguage ∷ Locale → String 
pure native getLanguage


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getScript
getScript ∷ Locale → String 
pure native getScript


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getUnicodeLocaleAttributes
getUnicodeLocaleAttributes ∷ Locale → STMutable s (Set String) 
native getUnicodeLocaleAttributes


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getUnicodeLocaleKeys
getUnicodeLocaleKeys ∷ Locale → STMutable s (Set String) 
native getUnicodeLocaleKeys


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getUnicodeLocaleType
getUnicodeLocaleType ∷ Locale → String → String 
pure native getUnicodeLocaleType


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.getVariant
getVariant ∷ Locale → String 
pure native getVariant


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.hashCode
hashCode ∷ Locale → Int 
pure native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.italian
italian ∷ Locale 
pure native java.util.Locale.ITALIAN


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.italy
italy ∷ Locale 
pure native java.util.Locale.ITALY


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.japan
japan ∷ Locale 
pure native java.util.Locale.JAPAN


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.japanese
japanese ∷ Locale 
pure native java.util.Locale.JAPANESE


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.korea
korea ∷ Locale 
pure native java.util.Locale.KOREA


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.korean
korean ∷ Locale 
pure native java.util.Locale.KOREAN

-- | Create a Locale like so: 
--   Locale.new "de" 
--   Locale.new "de" "AT"  
@url http://www.frege-lang.org/doc/frege/java/Util#Locale._new
new ∷ String → Locale 
     | String → String → Locale 
     | String → String → String → Locale 
pure native new

-- | Create a Locale like so: 
--   Locale.new "de" 
--   Locale.new "de" "AT"  
@url http://www.frege-lang.org/doc/frege/java/Util#Locale.newα
newα ∷ String → Locale 
pure native new  overloads new

-- | Create a Locale like so: 
--   Locale.new "de" 
--   Locale.new "de" "AT"  
@url http://www.frege-lang.org/doc/frege/java/Util#Locale.newβ
newβ ∷ String → String → Locale 
pure native new  overloads new

-- | Create a Locale like so: 
--   Locale.new "de" 
--   Locale.new "de" "AT"  
@url http://www.frege-lang.org/doc/frege/java/Util#Locale.newγ
newγ ∷ String → String → String → Locale 
pure native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.prc
prc ∷ Locale 
pure native java.util.Locale.PRC


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.private_use_extension
private_use_extension ∷ Char 
pure native java.util.Locale.PRIVATE_USE_EXTENSION


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.root
root ∷ Locale 
pure native java.util.Locale.ROOT


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.setDefault
setDefault ∷ Locale → ST s () 
            | LocaleCategory → Locale → ST s () 
native java.util.Locale.setDefault


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.setDefaultα
setDefaultα ∷ Locale → ST s () 
native java.util.Locale.setDefault  overloads setDefault


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.setDefaultβ
setDefaultβ ∷ LocaleCategory → Locale → ST s () 
native java.util.Locale.setDefault  overloads setDefault


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.simplified_chinese
simplified_chinese ∷ Locale 
pure native java.util.Locale.SIMPLIFIED_CHINESE


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.taiwan
taiwan ∷ Locale 
pure native java.util.Locale.TAIWAN


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.toLanguageTag
toLanguageTag ∷ Locale → String 
pure native toLanguageTag


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.toString
toString ∷ Locale → String 
pure native toString


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.traditional_chinese
traditional_chinese ∷ Locale 
pure native java.util.Locale.TRADITIONAL_CHINESE


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.uk
uk ∷ Locale 
pure native java.util.Locale.UK


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.unicode_locale_extension
unicode_locale_extension ∷ Char 
pure native java.util.Locale.UNICODE_LOCALE_EXTENSION


@url http://www.frege-lang.org/doc/frege/java/Util#Locale.us
us ∷ Locale 
pure native java.util.Locale.US

-- | A NavigableSet implementation based on a TreeMap. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (TreeSet e) → e → ST s Bool 
--  native add 
--  addAll ∷ Mutable s (TreeSet e) → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  ceiling ∷ Mutable s (TreeSet e) → e → ST s e 
--  native ceiling 
--  clear ∷ Mutable s (TreeSet e) → ST s () 
--  native clear 
--  clone ∷ Mutable s (TreeSet e) → ST s Object 
--  native clone 
--  comparator ∷ Mutable s (TreeSet e) → ST s (Comparator e) 
--  native comparator 
--  contains ∷ Mutable s (TreeSet e) → Object → ST s Bool 
--  native contains 
--  descendingIterator ∷ Mutable s (TreeSet e) → STMutable s (Iterator e) 
--  native descendingIterator 
--  descendingSet ∷ Mutable s (TreeSet e) → STMutable s (NavigableSet e) 
--  native descendingSet 
--  first ∷ Mutable s (TreeSet e) → ST s e 
--  native first 
--  floor ∷ Mutable s (TreeSet e) → e → ST s e 
--  native floor 
--  headSet ∷ Mutable s (TreeSet e) → e → STMutable s (SortedSet e) 
--           | Mutable s (TreeSet e) → e → Bool → STMutable s (NavigableSet e) 
--  native headSet 
--  headSetα ∷ Mutable s (TreeSet e) → e → STMutable s (SortedSet e) 
--  native headSet  overloads headSet 
--  headSetβ ∷ Mutable s (TreeSet e) → e → Bool → STMutable s (NavigableSet e) 
--  native headSet  overloads headSet 
--  higher ∷ Mutable s (TreeSet e) → e → ST s e 
--  native higher 
--  isEmpty ∷ Mutable s (TreeSet e) → ST s Bool 
--  native isEmpty 
--  iterator ∷ Mutable s (TreeSet e) → STMutable s (Iterator e) 
--  native iterator 
--  last ∷ Mutable s (TreeSet e) → ST s e 
--  native last 
--  lower ∷ Mutable s (TreeSet e) → e → ST s e 
--  native lower 
--  new ∷ Mutable s (SortedSet e) → STMutable s (TreeSet e) 
--       | Mutable s (Collection e) → STMutable s (TreeSet e) 
--       | Comparator e → STMutable s (TreeSet e) 
--       | () → STMutable s (TreeSet e) 
--  native new 
--  newα ∷ Mutable s (SortedSet e) → STMutable s (TreeSet e) 
--  native new  overloads new 
--  newβ ∷ Mutable s (Collection e) → STMutable s (TreeSet e) 
--  native new  overloads new 
--  newγ ∷ Comparator e → STMutable s (TreeSet e) 
--  native new  overloads new 
--  newδ ∷ () → STMutable s (TreeSet e) 
--  native new  overloads new 
--  pollFirst ∷ Mutable s (TreeSet e) → ST s e 
--  native pollFirst 
--  pollLast ∷ Mutable s (TreeSet e) → ST s e 
--  native pollLast 
--  remove ∷ Mutable s (TreeSet e) → Object → ST s Bool 
--  native remove 
--  size ∷ Mutable s (TreeSet e) → ST s Int 
--  native size 
--  subSet ∷ Mutable s (TreeSet e) → e → e → STMutable s (SortedSet e) 
--          | Mutable s (TreeSet e) → e → Bool → e → Bool → STMutable s (NavigableSet e) 
--  native subSet 
--  subSetα ∷ Mutable s (TreeSet e) → e → e → STMutable s (SortedSet e) 
--  native subSet  overloads subSet 
--  subSetβ ∷ Mutable s (TreeSet e) → e → Bool → e → Bool → STMutable s (NavigableSet e) 
--  native subSet  overloads subSet 
--  tailSet ∷ Mutable s (TreeSet e) → e → Bool → STMutable s (NavigableSet e) 
--           | Mutable s (TreeSet e) → e → STMutable s (SortedSet e) 
--  native tailSet 
--  tailSetα ∷ Mutable s (TreeSet e) → e → Bool → STMutable s (NavigableSet e) 
--  native tailSet  overloads tailSet 
--  tailSetβ ∷ Mutable s (TreeSet e) → e → STMutable s (SortedSet e) 
--  native tailSet  overloads tailSet 

@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet
data TreeSet e 


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.add
add ∷ Mutable s (TreeSet e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.addAll
addAll ∷ Mutable s (TreeSet e) → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.ceiling
ceiling ∷ Mutable s (TreeSet e) → e → ST s e 
native ceiling


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.clear
clear ∷ Mutable s (TreeSet e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.clone
clone ∷ Mutable s (TreeSet e) → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.comparator
comparator ∷ Mutable s (TreeSet e) → ST s (Comparator e) 
native comparator


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.contains
contains ∷ Mutable s (TreeSet e) → Object → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.descendingIterator
descendingIterator ∷ Mutable s (TreeSet e) → STMutable s (Iterator e) 
native descendingIterator


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.descendingSet
descendingSet ∷ Mutable s (TreeSet e) → STMutable s (NavigableSet e) 
native descendingSet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.first
first ∷ Mutable s (TreeSet e) → ST s e 
native first


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.floor
floor ∷ Mutable s (TreeSet e) → e → ST s e 
native floor


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.headSet
headSet ∷ Mutable s (TreeSet e) → e → STMutable s (SortedSet e) 
         | Mutable s (TreeSet e) → e → Bool → STMutable s (NavigableSet e) 
native headSet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.headSetα
headSetα ∷ Mutable s (TreeSet e) → e → STMutable s (SortedSet e) 
native headSet  overloads headSet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.headSetβ
headSetβ ∷ Mutable s (TreeSet e) → e → Bool → STMutable s (NavigableSet e) 
native headSet  overloads headSet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.higher
higher ∷ Mutable s (TreeSet e) → e → ST s e 
native higher


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.isEmpty
isEmpty ∷ Mutable s (TreeSet e) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.iterator
iterator ∷ Mutable s (TreeSet e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.last
last ∷ Mutable s (TreeSet e) → ST s e 
native last


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.lower
lower ∷ Mutable s (TreeSet e) → e → ST s e 
native lower


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet._new
new ∷ Mutable s (SortedSet e) → STMutable s (TreeSet e) 
     | Mutable s (Collection e) → STMutable s (TreeSet e) 
     | Comparator e → STMutable s (TreeSet e) 
     | () → STMutable s (TreeSet e) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.newα
newα ∷ Mutable s (SortedSet e) → STMutable s (TreeSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.newβ
newβ ∷ Mutable s (Collection e) → STMutable s (TreeSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.newγ
newγ ∷ Comparator e → STMutable s (TreeSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.newδ
newδ ∷ () → STMutable s (TreeSet e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.pollFirst
pollFirst ∷ Mutable s (TreeSet e) → ST s e 
native pollFirst


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.pollLast
pollLast ∷ Mutable s (TreeSet e) → ST s e 
native pollLast


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.remove
remove ∷ Mutable s (TreeSet e) → Object → ST s Bool 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.size
size ∷ Mutable s (TreeSet e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.subSet
subSet ∷ Mutable s (TreeSet e) → e → e → STMutable s (SortedSet e) 
        | Mutable s (TreeSet e) → e → Bool → e → Bool → STMutable s (NavigableSet e) 
native subSet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.subSetα
subSetα ∷ Mutable s (TreeSet e) → e → e → STMutable s (SortedSet e) 
native subSet  overloads subSet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.subSetβ
subSetβ ∷ Mutable s (TreeSet e) → e → Bool → e → Bool → STMutable s (NavigableSet e) 
native subSet  overloads subSet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.tailSet
tailSet ∷ Mutable s (TreeSet e) → e → Bool → STMutable s (NavigableSet e) 
         | Mutable s (TreeSet e) → e → STMutable s (SortedSet e) 
native tailSet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.tailSetα
tailSetα ∷ Mutable s (TreeSet e) → e → Bool → STMutable s (NavigableSet e) 
native tailSet  overloads tailSet


@url http://www.frege-lang.org/doc/frege/java/Util#TreeSet.tailSetβ
tailSetβ ∷ Mutable s (TreeSet e) → e → STMutable s (SortedSet e) 
native tailSet  overloads tailSet

-- | A simple text scanner which can parse primitive types and strings using regular expressions. More: JavaDoc 
--   Member Functions
--  ----------------
--  close ∷ Mutable s Scanner → ST s () 
--  native close 
--  delimiter ∷ Mutable s Scanner → ST s Regex 
--  native delimiter 
--  findInLine ∷ Mutable s Scanner → Regex → ST s String 
--              | Mutable s Scanner → String → ST s String 
--  native findInLine 
--  findInLineα ∷ Mutable s Scanner → Regex → ST s String 
--  native findInLine  overloads findInLine 
--  findInLineβ ∷ Mutable s Scanner → String → ST s String 
--  native findInLine  overloads findInLine 
--  findWithinHorizon ∷ Mutable s Scanner → String → Int → ST s String 
--                     | Mutable s Scanner → Regex → Int → ST s String 
--  native findWithinHorizon 
--  findWithinHorizonα ∷ Mutable s Scanner → String → Int → ST s String 
--  native findWithinHorizon  overloads findWithinHorizon 
--  findWithinHorizonβ ∷ Mutable s Scanner → Regex → Int → ST s String 
--  native findWithinHorizon  overloads findWithinHorizon 
--  hasNext ∷ Mutable s Scanner → ST s Bool 
--           | Mutable s Scanner → String → ST s Bool 
--           | Mutable s Scanner → Regex → ST s Bool 
--  native hasNext 
--  hasNextBigDecimal ∷ Mutable s Scanner → ST s Bool 
--  native hasNextBigDecimal 
--  hasNextBigInteger ∷ Mutable s Scanner → Int → ST s Bool 
--                     | Mutable s Scanner → ST s Bool 
--  native hasNextBigInteger 
--  hasNextBigIntegerα ∷ Mutable s Scanner → Int → ST s Bool 
--  native hasNextBigInteger  overloads hasNextBigInteger 
--  hasNextBigIntegerβ ∷ Mutable s Scanner → ST s Bool 
--  native hasNextBigInteger  overloads hasNextBigInteger 
--  hasNextBoolean ∷ Mutable s Scanner → ST s Bool 
--  native hasNextBoolean 
--  hasNextByte ∷ Mutable s Scanner → Int → ST s Bool 
--               | Mutable s Scanner → ST s Bool 
--  native hasNextByte 
--  hasNextByteα ∷ Mutable s Scanner → Int → ST s Bool 
--  native hasNextByte  overloads hasNextByte 
--  hasNextByteβ ∷ Mutable s Scanner → ST s Bool 
--  native hasNextByte  overloads hasNextByte 
--  hasNextDouble ∷ Mutable s Scanner → ST s Bool 
--  native hasNextDouble 
--  hasNextFloat ∷ Mutable s Scanner → ST s Bool 
--  native hasNextFloat 
--  hasNextInt ∷ Mutable s Scanner → Int → ST s Bool 
--              | Mutable s Scanner → ST s Bool 
--  native hasNextInt 
--  hasNextIntα ∷ Mutable s Scanner → Int → ST s Bool 
--  native hasNextInt  overloads hasNextInt 
--  hasNextIntβ ∷ Mutable s Scanner → ST s Bool 
--  native hasNextInt  overloads hasNextInt 
--  hasNextLine ∷ Mutable s Scanner → ST s Bool 
--  native hasNextLine 
--  hasNextLong ∷ Mutable s Scanner → ST s Bool 
--               | Mutable s Scanner → Int → ST s Bool 
--  native hasNextLong 
--  hasNextLongα ∷ Mutable s Scanner → ST s Bool 
--  native hasNextLong  overloads hasNextLong 
--  hasNextLongβ ∷ Mutable s Scanner → Int → ST s Bool 
--  native hasNextLong  overloads hasNextLong 
--  hasNextShort ∷ Mutable s Scanner → Int → ST s Bool 
--                | Mutable s Scanner → ST s Bool 
--  native hasNextShort 
--  hasNextShortα ∷ Mutable s Scanner → Int → ST s Bool 
--  native hasNextShort  overloads hasNextShort 
--  hasNextShortβ ∷ Mutable s Scanner → ST s Bool 
--  native hasNextShort  overloads hasNextShort 
--  hasNextα ∷ Mutable s Scanner → ST s Bool 
--  native hasNext  overloads hasNext 
--  hasNextβ ∷ Mutable s Scanner → String → ST s Bool 
--  native hasNext  overloads hasNext 
--  hasNextγ ∷ Mutable s Scanner → Regex → ST s Bool 
--  native hasNext  overloads hasNext 
--  ioException ∷ Mutable s Scanner → ST s IOException 
--  native ioException 
--  locale ∷ Mutable s Scanner → ST s Locale 
--  native locale 
--  match ∷ Mutable s Scanner → ST s MatchResult 
--  native match 
--  new ∷ InputStream → STMutable RealWorld Scanner 
--       | Mutable s Readable → STMutable s Scanner 
--       | Reader → STMutable RealWorld Scanner 
--       | InputStream → String → STMutable RealWorld Scanner 
--       | Mutable s File → String → STMutable s Scanner 
--           throws FileNotFoundException 
--       | Mutable s File → STMutable s Scanner 
--           throws FileNotFoundException 
--       | String → STMutable s Scanner 
--       | Mutable s ReadableByteChannel → STMutable s Scanner 
--       | Mutable s ReadableByteChannel → String → STMutable s Scanner 
--       | Path → String → STMutable s Scanner 
--           throws IOException 
--       | Path → STMutable s Scanner 
--           throws IOException 
--  native new 
--  newß ∷ Path → String → STMutable s Scanner 
--  native new  throws IOException  overloads new 
--  newα ∷ InputStream → STMutable RealWorld Scanner 
--  native new  overloads new 
--  newβ ∷ Mutable s Readable → STMutable s Scanner 
--  native new  overloads new 
--  newγ ∷ Reader → STMutable RealWorld Scanner 
--  native new  overloads new 
--  newδ ∷ InputStream → String → STMutable RealWorld Scanner 
--  native new  overloads new 
--  newε ∷ Mutable s File → String → STMutable s Scanner 
--  native new  throws FileNotFoundException  overloads new 
--  newζ ∷ Mutable s File → STMutable s Scanner 
--  native new  throws FileNotFoundException  overloads new 
--  newη ∷ String → STMutable s Scanner 
--  native new  overloads new 
--  newθ ∷ Mutable s ReadableByteChannel → STMutable s Scanner 
--  native new  overloads new 
--  newι ∷ Mutable s ReadableByteChannel → String → STMutable s Scanner 
--  native new  overloads new 
--  newκ ∷ Path → STMutable s Scanner 
--  native new  throws IOException  overloads new 
--  next ∷ Mutable s Scanner → String → ST s String 
--        | Mutable s Scanner → Regex → ST s String 
--        | Mutable s Scanner → ST s String 
--  native next 
--  nextBigDecimal ∷ Mutable s Scanner → ST s BigDecimal 
--  native nextBigDecimal 
--  nextBigInteger ∷ Mutable s Scanner → ST s Integer 
--                  | Mutable s Scanner → Int → ST s Integer 
--  native nextBigInteger 
--  nextBigIntegerα ∷ Mutable s Scanner → ST s Integer 
--  native nextBigInteger  overloads nextBigInteger 
--  nextBigIntegerβ ∷ Mutable s Scanner → Int → ST s Integer 
--  native nextBigInteger  overloads nextBigInteger 
--  nextBoolean ∷ Mutable s Scanner → ST s Bool 
--  native nextBoolean 
--  nextByte ∷ Mutable s Scanner → ST s Byte 
--            | Mutable s Scanner → Int → ST s Byte 
--  native nextByte 
--  nextByteα ∷ Mutable s Scanner → ST s Byte 
--  native nextByte  overloads nextByte 
--  nextByteβ ∷ Mutable s Scanner → Int → ST s Byte 
--  native nextByte  overloads nextByte 
--  nextDouble ∷ Mutable s Scanner → ST s Double 
--  native nextDouble 
--  nextFloat ∷ Mutable s Scanner → ST s Float 
--  native nextFloat 
--  nextInt ∷ Mutable s Scanner → ST s Int 
--           | Mutable s Scanner → Int → ST s Int 
--  native nextInt 
--  nextIntα ∷ Mutable s Scanner → ST s Int 
--  native nextInt  overloads nextInt 
--  nextIntβ ∷ Mutable s Scanner → Int → ST s Int 
--  native nextInt  overloads nextInt 
--  nextLine ∷ Mutable s Scanner → ST s String 
--  native nextLine 
--  nextLong ∷ Mutable s Scanner → ST s Long 
--            | Mutable s Scanner → Int → ST s Long 
--  native nextLong 
--  nextLongα ∷ Mutable s Scanner → ST s Long 
--  native nextLong  overloads nextLong 
--  nextLongβ ∷ Mutable s Scanner → Int → ST s Long 
--  native nextLong  overloads nextLong 
--  nextShort ∷ Mutable s Scanner → ST s Short 
--             | Mutable s Scanner → Int → ST s Short 
--  native nextShort 
--  nextShortα ∷ Mutable s Scanner → ST s Short 
--  native nextShort  overloads nextShort 
--  nextShortβ ∷ Mutable s Scanner → Int → ST s Short 
--  native nextShort  overloads nextShort 
--  nextα ∷ Mutable s Scanner → String → ST s String 
--  native next  overloads next 
--  nextβ ∷ Mutable s Scanner → Regex → ST s String 
--  native next  overloads next 
--  nextγ ∷ Mutable s Scanner → ST s String 
--  native next  overloads next 
--  radix ∷ Mutable s Scanner → ST s Int 
--  native radix 
--  remove ∷ Mutable s Scanner → ST s () 
--  native remove 
--  reset ∷ Mutable s Scanner → STMutable s Scanner 
--  native reset 
--  skip ∷ Mutable s Scanner → String → STMutable s Scanner 
--        | Mutable s Scanner → Regex → STMutable s Scanner 
--  native skip 
--  skipα ∷ Mutable s Scanner → String → STMutable s Scanner 
--  native skip  overloads skip 
--  skipβ ∷ Mutable s Scanner → Regex → STMutable s Scanner 
--  native skip  overloads skip 
--  toString ∷ Mutable s Scanner → ST s String 
--  native toString 
--  useDelimiter ∷ Mutable s Scanner → String → STMutable s Scanner 
--                | Mutable s Scanner → Regex → STMutable s Scanner 
--  native useDelimiter 
--  useDelimiterα ∷ Mutable s Scanner → String → STMutable s Scanner 
--  native useDelimiter  overloads useDelimiter 
--  useDelimiterβ ∷ Mutable s Scanner → Regex → STMutable s Scanner 
--  native useDelimiter  overloads useDelimiter 
--  useLocale ∷ Mutable s Scanner → Locale → STMutable s Scanner 
--  native useLocale 
--  useRadix ∷ Mutable s Scanner → Int → STMutable s Scanner 
--  native useRadix 

@url http://www.frege-lang.org/doc/frege/java/Util#Scanner
data Scanner 


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.close
close ∷ Mutable s Scanner → ST s () 
native close


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.delimiter
delimiter ∷ Mutable s Scanner → ST s Regex 
native delimiter


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.findInLine
findInLine ∷ Mutable s Scanner → Regex → ST s String 
            | Mutable s Scanner → String → ST s String 
native findInLine


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.findInLineα
findInLineα ∷ Mutable s Scanner → Regex → ST s String 
native findInLine  overloads findInLine


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.findInLineβ
findInLineβ ∷ Mutable s Scanner → String → ST s String 
native findInLine  overloads findInLine


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.findWithinHorizon
findWithinHorizon ∷ Mutable s Scanner → String → Int → ST s String 
                   | Mutable s Scanner → Regex → Int → ST s String 
native findWithinHorizon


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.findWithinHorizonα
findWithinHorizonα ∷ Mutable s Scanner → String → Int → ST s String 
native findWithinHorizon  overloads findWithinHorizon


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.findWithinHorizonβ
findWithinHorizonβ ∷ Mutable s Scanner → Regex → Int → ST s String 
native findWithinHorizon  overloads findWithinHorizon


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNext
hasNext ∷ Mutable s Scanner → ST s Bool 
         | Mutable s Scanner → String → ST s Bool 
         | Mutable s Scanner → Regex → ST s Bool 
native hasNext


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextBigDecimal
hasNextBigDecimal ∷ Mutable s Scanner → ST s Bool 
native hasNextBigDecimal


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextBigInteger
hasNextBigInteger ∷ Mutable s Scanner → Int → ST s Bool 
                   | Mutable s Scanner → ST s Bool 
native hasNextBigInteger


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextBigIntegerα
hasNextBigIntegerα ∷ Mutable s Scanner → Int → ST s Bool 
native hasNextBigInteger  overloads hasNextBigInteger


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextBigIntegerβ
hasNextBigIntegerβ ∷ Mutable s Scanner → ST s Bool 
native hasNextBigInteger  overloads hasNextBigInteger


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextBoolean
hasNextBoolean ∷ Mutable s Scanner → ST s Bool 
native hasNextBoolean


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextByte
hasNextByte ∷ Mutable s Scanner → Int → ST s Bool 
             | Mutable s Scanner → ST s Bool 
native hasNextByte


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextByteα
hasNextByteα ∷ Mutable s Scanner → Int → ST s Bool 
native hasNextByte  overloads hasNextByte


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextByteβ
hasNextByteβ ∷ Mutable s Scanner → ST s Bool 
native hasNextByte  overloads hasNextByte


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextDouble
hasNextDouble ∷ Mutable s Scanner → ST s Bool 
native hasNextDouble


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextFloat
hasNextFloat ∷ Mutable s Scanner → ST s Bool 
native hasNextFloat


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextInt
hasNextInt ∷ Mutable s Scanner → Int → ST s Bool 
            | Mutable s Scanner → ST s Bool 
native hasNextInt


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextIntα
hasNextIntα ∷ Mutable s Scanner → Int → ST s Bool 
native hasNextInt  overloads hasNextInt


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextIntβ
hasNextIntβ ∷ Mutable s Scanner → ST s Bool 
native hasNextInt  overloads hasNextInt


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextLine
hasNextLine ∷ Mutable s Scanner → ST s Bool 
native hasNextLine


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextLong
hasNextLong ∷ Mutable s Scanner → ST s Bool 
             | Mutable s Scanner → Int → ST s Bool 
native hasNextLong


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextLongα
hasNextLongα ∷ Mutable s Scanner → ST s Bool 
native hasNextLong  overloads hasNextLong


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextLongβ
hasNextLongβ ∷ Mutable s Scanner → Int → ST s Bool 
native hasNextLong  overloads hasNextLong


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextShort
hasNextShort ∷ Mutable s Scanner → Int → ST s Bool 
              | Mutable s Scanner → ST s Bool 
native hasNextShort


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextShortα
hasNextShortα ∷ Mutable s Scanner → Int → ST s Bool 
native hasNextShort  overloads hasNextShort


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextShortβ
hasNextShortβ ∷ Mutable s Scanner → ST s Bool 
native hasNextShort  overloads hasNextShort


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextα
hasNextα ∷ Mutable s Scanner → ST s Bool 
native hasNext  overloads hasNext


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextβ
hasNextβ ∷ Mutable s Scanner → String → ST s Bool 
native hasNext  overloads hasNext


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.hasNextγ
hasNextγ ∷ Mutable s Scanner → Regex → ST s Bool 
native hasNext  overloads hasNext


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.ioException
ioException ∷ Mutable s Scanner → ST s IOException 
native ioException


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.locale
locale ∷ Mutable s Scanner → ST s Locale 
native locale


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.match
match ∷ Mutable s Scanner → ST s MatchResult 
native match


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner._new
new ∷ InputStream → STMutable RealWorld Scanner 
     | Mutable s Readable → STMutable s Scanner 
     | Reader → STMutable RealWorld Scanner 
     | InputStream → String → STMutable RealWorld Scanner 
     | Mutable s File → String → STMutable s Scanner 
         throws FileNotFoundException 
     | Mutable s File → STMutable s Scanner 
         throws FileNotFoundException 
     | String → STMutable s Scanner 
     | Mutable s ReadableByteChannel → STMutable s Scanner 
     | Mutable s ReadableByteChannel → String → STMutable s Scanner 
     | Path → String → STMutable s Scanner 
         throws IOException 
     | Path → STMutable s Scanner 
         throws IOException 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newß
newß ∷ Path → String → STMutable s Scanner 
native new  throws IOException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newα
newα ∷ InputStream → STMutable RealWorld Scanner 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newβ
newβ ∷ Mutable s Readable → STMutable s Scanner 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newγ
newγ ∷ Reader → STMutable RealWorld Scanner 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newδ
newδ ∷ InputStream → String → STMutable RealWorld Scanner 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newε
newε ∷ Mutable s File → String → STMutable s Scanner 
native new  throws FileNotFoundException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newζ
newζ ∷ Mutable s File → STMutable s Scanner 
native new  throws FileNotFoundException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newη
newη ∷ String → STMutable s Scanner 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newθ
newθ ∷ Mutable s ReadableByteChannel → STMutable s Scanner 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newι
newι ∷ Mutable s ReadableByteChannel → String → STMutable s Scanner 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.newκ
newκ ∷ Path → STMutable s Scanner 
native new  throws IOException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.next
next ∷ Mutable s Scanner → String → ST s String 
      | Mutable s Scanner → Regex → ST s String 
      | Mutable s Scanner → ST s String 
native next


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextBigDecimal
nextBigDecimal ∷ Mutable s Scanner → ST s BigDecimal 
native nextBigDecimal


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextBigInteger
nextBigInteger ∷ Mutable s Scanner → ST s Integer 
                | Mutable s Scanner → Int → ST s Integer 
native nextBigInteger


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextBigIntegerα
nextBigIntegerα ∷ Mutable s Scanner → ST s Integer 
native nextBigInteger  overloads nextBigInteger


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextBigIntegerβ
nextBigIntegerβ ∷ Mutable s Scanner → Int → ST s Integer 
native nextBigInteger  overloads nextBigInteger


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextBoolean
nextBoolean ∷ Mutable s Scanner → ST s Bool 
native nextBoolean


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextByte
nextByte ∷ Mutable s Scanner → ST s Byte 
          | Mutable s Scanner → Int → ST s Byte 
native nextByte


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextByteα
nextByteα ∷ Mutable s Scanner → ST s Byte 
native nextByte  overloads nextByte


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextByteβ
nextByteβ ∷ Mutable s Scanner → Int → ST s Byte 
native nextByte  overloads nextByte


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextDouble
nextDouble ∷ Mutable s Scanner → ST s Double 
native nextDouble


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextFloat
nextFloat ∷ Mutable s Scanner → ST s Float 
native nextFloat


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextInt
nextInt ∷ Mutable s Scanner → ST s Int 
         | Mutable s Scanner → Int → ST s Int 
native nextInt


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextIntα
nextIntα ∷ Mutable s Scanner → ST s Int 
native nextInt  overloads nextInt


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextIntβ
nextIntβ ∷ Mutable s Scanner → Int → ST s Int 
native nextInt  overloads nextInt


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextLine
nextLine ∷ Mutable s Scanner → ST s String 
native nextLine


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextLong
nextLong ∷ Mutable s Scanner → ST s Long 
          | Mutable s Scanner → Int → ST s Long 
native nextLong


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextLongα
nextLongα ∷ Mutable s Scanner → ST s Long 
native nextLong  overloads nextLong


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextLongβ
nextLongβ ∷ Mutable s Scanner → Int → ST s Long 
native nextLong  overloads nextLong


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextShort
nextShort ∷ Mutable s Scanner → ST s Short 
           | Mutable s Scanner → Int → ST s Short 
native nextShort


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextShortα
nextShortα ∷ Mutable s Scanner → ST s Short 
native nextShort  overloads nextShort


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextShortβ
nextShortβ ∷ Mutable s Scanner → Int → ST s Short 
native nextShort  overloads nextShort


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextα
nextα ∷ Mutable s Scanner → String → ST s String 
native next  overloads next


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextβ
nextβ ∷ Mutable s Scanner → Regex → ST s String 
native next  overloads next


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.nextγ
nextγ ∷ Mutable s Scanner → ST s String 
native next  overloads next


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.radix
radix ∷ Mutable s Scanner → ST s Int 
native radix


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.remove
remove ∷ Mutable s Scanner → ST s () 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.reset
reset ∷ Mutable s Scanner → STMutable s Scanner 
native reset


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.skip
skip ∷ Mutable s Scanner → String → STMutable s Scanner 
      | Mutable s Scanner → Regex → STMutable s Scanner 
native skip


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.skipα
skipα ∷ Mutable s Scanner → String → STMutable s Scanner 
native skip  overloads skip


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.skipβ
skipβ ∷ Mutable s Scanner → Regex → STMutable s Scanner 
native skip  overloads skip


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.toString
toString ∷ Mutable s Scanner → ST s String 
native toString


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.useDelimiter
useDelimiter ∷ Mutable s Scanner → String → STMutable s Scanner 
              | Mutable s Scanner → Regex → STMutable s Scanner 
native useDelimiter


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.useDelimiterα
useDelimiterα ∷ Mutable s Scanner → String → STMutable s Scanner 
native useDelimiter  overloads useDelimiter


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.useDelimiterβ
useDelimiterβ ∷ Mutable s Scanner → Regex → STMutable s Scanner 
native useDelimiter  overloads useDelimiter


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.useLocale
useLocale ∷ Mutable s Scanner → Locale → STMutable s Scanner 
native useLocale


@url http://www.frege-lang.org/doc/frege/java/Util#Scanner.useRadix
useRadix ∷ Mutable s Scanner → Int → STMutable s Scanner 
native useRadix

-- | The root interface in the collection hierarchy. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (Collection e) → e → ST s Bool 
--  native add 
--  addAll ∷ Mutable s (Collection e) → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  addAllFromList ∷ Mutable s (Collection a) → [a] → ST s () 
--  clear ∷ Mutable s (Collection e) → ST s () 
--  native clear 
--  contains ∷ Mutable s (Collection e) → Object → ST s Bool 
--  native contains 
--  containsAll ∷ Mutable s (Collection e) → Mutable s (Collection Object) → ST s Bool 
--  native containsAll 
--  equals ∷ Mutable s (Collection e) → Object → ST s Bool 
--  native equals 
--  hashCode ∷ Mutable s (Collection e) → ST s Int 
--  native hashCode 
--  isEmpty ∷ Mutable s (Collection e) → ST s Bool 
--  native isEmpty 
--  iterator ∷ Mutable s (Collection e) → STMutable s (Iterator e) 
--  native iterator 
--  remove ∷ Mutable s (Collection e) → Object → ST s Bool 
--  native remove 
--  removeAll ∷ Mutable s (Collection e) → Mutable s (Collection Object) → ST s Bool 
--  native removeAll 
--  retainAll ∷ Mutable s (Collection e) → Mutable s (Collection Object) → ST s Bool 
--  native retainAll 
--  size ∷ Mutable s (Collection e) → ST s Int 
--  native size 
--  toArray ∷ Mutable s (Collection e) → STMutable s (JArray Object) 
--           | Mutable s (Collection e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray 
--  toArrayα ∷ Mutable s (Collection e) → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toArrayβ ∷ Mutable s (Collection e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toList ∷ Mutable s (Collection e) → ST s [e] 

@url http://www.frege-lang.org/doc/frege/java/Util#Collection
data Collection e 


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.add
add ∷ Mutable s (Collection e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.addAll
addAll ∷ Mutable s (Collection e) → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.addAllFromList
addAllFromList ∷ Mutable s (Collection a) → [a] → ST s ()


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.clear
clear ∷ Mutable s (Collection e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.contains
contains ∷ Mutable s (Collection e) → Object → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.containsAll
containsAll ∷ Mutable s (Collection e) → Mutable s (Collection Object) → ST s Bool 
native containsAll


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.equals
equals ∷ Mutable s (Collection e) → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.hashCode
hashCode ∷ Mutable s (Collection e) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.isEmpty
isEmpty ∷ Mutable s (Collection e) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.iterator
iterator ∷ Mutable s (Collection e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.remove
remove ∷ Mutable s (Collection e) → Object → ST s Bool 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.removeAll
removeAll ∷ Mutable s (Collection e) → Mutable s (Collection Object) → ST s Bool 
native removeAll


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.retainAll
retainAll ∷ Mutable s (Collection e) → Mutable s (Collection Object) → ST s Bool 
native retainAll


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.size
size ∷ Mutable s (Collection e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.toArray
toArray ∷ Mutable s (Collection e) → STMutable s (JArray Object) 
         | Mutable s (Collection e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.toArrayα
toArrayα ∷ Mutable s (Collection e) → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.toArrayβ
toArrayβ ∷ Mutable s (Collection e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#Collection.toList
toList ∷ Mutable s (Collection e) → ST s [e]

-- | A specialized Map implementation for use with enum type keys. More: JavaDoc 
--   Member Functions
--  ----------------
--  clear ∷ Mutable s (EnumMap k v) → ST s () 
--  native clear 
--  clone ∷ Mutable s (EnumMap k v) → STMutable s (EnumMap k v) 
--  native clone 
--  containsKey ∷ Mutable s (EnumMap k v) → Object → ST s Bool 
--  native containsKey 
--  containsValue ∷ Mutable s (EnumMap k v) → Object → ST s Bool 
--  native containsValue 
--  entrySet ∷ Mutable s (EnumMap k v) → STMutable s (Set (MapEntry k v)) 
--  native entrySet 
--  equals ∷ Mutable s (EnumMap k v) → a → ST s Bool 
--  native equals 
--  get ∷ Mutable s (EnumMap k v) → k → ST s v 
--  native get 
--  hashCode ∷ Mutable s (EnumMap k v) → ST s Int 
--  native hashCode 
--  keySet ∷ Mutable s (EnumMap k v) → STMutable s (Set k) 
--  native keySet 
--  new ∷ Class k → STMutable s (EnumMap k v) 
--       | Mutable s (Map k v) → STMutable s (EnumMap k v) 
--       | Mutable s (EnumMap k v) → STMutable s (EnumMap k v) 
--  native new 
--  newα ∷ Class k → STMutable s (EnumMap k v) 
--  native new  overloads new 
--  newβ ∷ Mutable s (Map k v) → STMutable s (EnumMap k v) 
--  native new  overloads new 
--  newγ ∷ Mutable s (EnumMap k v) → STMutable s (EnumMap k v) 
--  native new  overloads new 
--  put ∷ Mutable s (EnumMap k v) → JEnum k → v → ST s v 
--  native put 
--  putAll ∷ Mutable s (EnumMap k v) → Mutable s (Map k v) → ST s () 
--  native putAll 
--  remove ∷ Mutable s (EnumMap k v) → k → ST s v 
--  native remove 
--  size ∷ Mutable s (EnumMap k v) → ST s Int 
--  native size 
--  values ∷ Mutable s (EnumMap k v) → STMutable s (Collection v) 
--  native values 

@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap
data EnumMap k v 


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.clear
clear ∷ Mutable s (EnumMap k v) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.clone
clone ∷ Mutable s (EnumMap k v) → STMutable s (EnumMap k v) 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.containsKey
containsKey ∷ Mutable s (EnumMap k v) → Object → ST s Bool 
native containsKey


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.containsValue
containsValue ∷ Mutable s (EnumMap k v) → Object → ST s Bool 
native containsValue


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.entrySet
entrySet ∷ Mutable s (EnumMap k v) → STMutable s (Set (MapEntry k v)) 
native entrySet


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.equals
equals ∷ Mutable s (EnumMap k v) → a → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.get
get ∷ Mutable s (EnumMap k v) → k → ST s v 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.hashCode
hashCode ∷ Mutable s (EnumMap k v) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.keySet
keySet ∷ Mutable s (EnumMap k v) → STMutable s (Set k) 
native keySet


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap._new
new ∷ Class k → STMutable s (EnumMap k v) 
     | Mutable s (Map k v) → STMutable s (EnumMap k v) 
     | Mutable s (EnumMap k v) → STMutable s (EnumMap k v) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.newα
newα ∷ Class k → STMutable s (EnumMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.newβ
newβ ∷ Mutable s (Map k v) → STMutable s (EnumMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.newγ
newγ ∷ Mutable s (EnumMap k v) → STMutable s (EnumMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.put
put ∷ Mutable s (EnumMap k v) → JEnum k → v → ST s v 
native put


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.putAll
putAll ∷ Mutable s (EnumMap k v) → Mutable s (Map k v) → ST s () 
native putAll


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.remove
remove ∷ Mutable s (EnumMap k v) → k → ST s v 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.size
size ∷ Mutable s (EnumMap k v) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#EnumMap.values
values ∷ Mutable s (EnumMap k v) → STMutable s (Collection v) 
native values

-- | A class can implement the Observer interface when it wants to be informed of changes in observable objects. More: JavaDoc 
--   Member Functions
--  ----------------
--  update ∷ Mutable s Observer → Mutable s Observable → a → ST s () 
--  native update 

@url http://www.frege-lang.org/doc/frege/java/Util#Observer
data Observer 


@url http://www.frege-lang.org/doc/frege/java/Util#Observer.update
update ∷ Mutable s Observer → Mutable s Observable → a → ST s () 
native update

-- | Hash table based implementation of the Map interface, with weak keys. More: JavaDoc 
--   Member Functions
--  ----------------
--  clear ∷ Mutable s (WeakHashMap k v) → ST s () 
--  native clear 
--  containsKey ∷ Mutable s (WeakHashMap k v) → a → ST s Bool 
--  native containsKey 
--  containsValue ∷ Mutable s (WeakHashMap k v) → a → ST s Bool 
--  native containsValue 
--  entrySet ∷ Mutable s (WeakHashMap k v) → STMutable s (Set (MapEntry k v)) 
--  native entrySet 
--  get ∷ Mutable s (WeakHashMap k v) → a → ST s v 
--  native get 
--  isEmpty ∷ Mutable s (WeakHashMap k v) → ST s Bool 
--  native isEmpty 
--  keySet ∷ Mutable s (WeakHashMap k v) → STMutable s (Set k) 
--  native keySet 
--  new ∷ () → STMutable s (WeakHashMap k v) 
--       | Int → STMutable s (WeakHashMap k v) 
--       | Int → Float → STMutable s (WeakHashMap k v) 
--       | Mutable s (Map k v) → STMutable s (WeakHashMap k v) 
--  native new 
--  newα ∷ () → STMutable s (WeakHashMap k v) 
--  native new  overloads new 
--  newβ ∷ Int → STMutable s (WeakHashMap k v) 
--  native new  overloads new 
--  newγ ∷ Int → Float → STMutable s (WeakHashMap k v) 
--  native new  overloads new 
--  newδ ∷ Mutable s (Map k v) → STMutable s (WeakHashMap k v) 
--  native new  overloads new 
--  put ∷ Mutable s (WeakHashMap k v) → k → v → ST s v 
--  native put 
--  putAll ∷ Mutable s (WeakHashMap k v) → Mutable s (Map k v) → ST s () 
--  native putAll 
--  remove ∷ Mutable s (WeakHashMap k v) → a → ST s v 
--  native remove 
--  size ∷ Mutable s (WeakHashMap k v) → ST s Int 
--  native size 
--  values ∷ Mutable s (WeakHashMap k v) → STMutable s (Collection v) 
--  native values 

@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap
data WeakHashMap k v 


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.clear
clear ∷ Mutable s (WeakHashMap k v) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.containsKey
containsKey ∷ Mutable s (WeakHashMap k v) → a → ST s Bool 
native containsKey


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.containsValue
containsValue ∷ Mutable s (WeakHashMap k v) → a → ST s Bool 
native containsValue


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.entrySet
entrySet ∷ Mutable s (WeakHashMap k v) → STMutable s (Set (MapEntry k v)) 
native entrySet


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.get
get ∷ Mutable s (WeakHashMap k v) → a → ST s v 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.isEmpty
isEmpty ∷ Mutable s (WeakHashMap k v) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.keySet
keySet ∷ Mutable s (WeakHashMap k v) → STMutable s (Set k) 
native keySet


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap._new
new ∷ () → STMutable s (WeakHashMap k v) 
     | Int → STMutable s (WeakHashMap k v) 
     | Int → Float → STMutable s (WeakHashMap k v) 
     | Mutable s (Map k v) → STMutable s (WeakHashMap k v) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.newα
newα ∷ () → STMutable s (WeakHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.newβ
newβ ∷ Int → STMutable s (WeakHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.newγ
newγ ∷ Int → Float → STMutable s (WeakHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.newδ
newδ ∷ Mutable s (Map k v) → STMutable s (WeakHashMap k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.put
put ∷ Mutable s (WeakHashMap k v) → k → v → ST s v 
native put


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.putAll
putAll ∷ Mutable s (WeakHashMap k v) → Mutable s (Map k v) → ST s () 
native putAll


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.remove
remove ∷ Mutable s (WeakHashMap k v) → a → ST s v 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.size
size ∷ Mutable s (WeakHashMap k v) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#WeakHashMap.values
values ∷ Mutable s (WeakHashMap k v) → STMutable s (Collection v) 
native values

-- | An iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator's current position in the list. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (ListIterator e) → e → ST s () 
--  native add 
--  hasNext ∷ Mutable s (ListIterator e) → ST s Bool 
--  native hasNext 
--  hasPrevious ∷ Mutable s (ListIterator e) → ST s Bool 
--  native hasPrevious 
--  next ∷ Mutable s (ListIterator e) → ST s e 
--  native next 
--  nextIndex ∷ Mutable s (ListIterator e) → ST s Int 
--  native nextIndex 
--  previous ∷ Mutable s (ListIterator e) → ST s e 
--  native previous 
--  previousIndex ∷ Mutable s (ListIterator e) → ST s Int 
--  native previousIndex 
--  remove ∷ Mutable s (ListIterator e) → ST s () 
--  native remove 
--  set ∷ Mutable s (ListIterator e) → e → ST s () 
--  native set 

@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator
data ListIterator e 


@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator.add
add ∷ Mutable s (ListIterator e) → e → ST s () 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator.hasNext
hasNext ∷ Mutable s (ListIterator e) → ST s Bool 
native hasNext


@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator.hasPrevious
hasPrevious ∷ Mutable s (ListIterator e) → ST s Bool 
native hasPrevious


@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator.next
next ∷ Mutable s (ListIterator e) → ST s e 
native next


@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator.nextIndex
nextIndex ∷ Mutable s (ListIterator e) → ST s Int 
native nextIndex


@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator.previous
previous ∷ Mutable s (ListIterator e) → ST s e 
native previous


@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator.previousIndex
previousIndex ∷ Mutable s (ListIterator e) → ST s Int 
native previousIndex


@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator.remove
remove ∷ Mutable s (ListIterator e) → ST s () 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#ListIterator.set
set ∷ Mutable s (ListIterator e) → e → ST s () 
native set

-- | Doubly-linked list implementation of the List and Deque interfaces. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (LinkedList e) → e → ST s Bool 
--       | Mutable s (LinkedList e) → Int → e → ST s () 
--  native add 
--  addAll ∷ Mutable s (LinkedList e) → Mutable s (Collection e) → ST s Bool 
--          | Mutable s (LinkedList e) → Int → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  addAllα ∷ Mutable s (LinkedList e) → Mutable s (Collection e) → ST s Bool 
--  native addAll  overloads addAll 
--  addAllβ ∷ Mutable s (LinkedList e) → Int → Mutable s (Collection e) → ST s Bool 
--  native addAll  overloads addAll 
--  addFirst ∷ Mutable s (LinkedList e) → e → ST s () 
--  native addFirst 
--  addLast ∷ Mutable s (LinkedList e) → e → ST s () 
--  native addLast 
--  addα ∷ Mutable s (LinkedList e) → e → ST s Bool 
--  native add  overloads add 
--  addβ ∷ Mutable s (LinkedList e) → Int → e → ST s () 
--  native add  overloads add 
--  clear ∷ Mutable s (LinkedList e) → ST s () 
--  native clear 
--  clone ∷ Mutable s (LinkedList e) → ST s Object 
--  native clone 
--  contains ∷ Mutable s (LinkedList e) → a → ST s Bool 
--  native contains 
--  descendingIterator ∷ Mutable s (LinkedList e) → STMutable s (Iterator e) 
--  native descendingIterator 
--  element ∷ Mutable s (LinkedList e) → ST s e 
--  native element 
--  fromList ∷ [a] → STMutable s (LinkedList a) 
--  get ∷ Mutable s (LinkedList e) → Int → ST s e 
--  native get 
--  getFirst ∷ Mutable s (LinkedList e) → ST s e 
--  native getFirst 
--  getLast ∷ Mutable s (LinkedList e) → ST s e 
--  native getLast 
--  indexOf ∷ Mutable s (LinkedList e) → a → ST s Int 
--  native indexOf 
--  lastIndexOf ∷ Mutable s (LinkedList e) → a → ST s Int 
--  native lastIndexOf 
--  listIterator ∷ Mutable s (LinkedList e) → Int → STMutable s (ListIterator e) 
--  native listIterator 
--  new ∷ () → STMutable s (LinkedList e) 
--       | Mutable s (Collection e) → STMutable s (LinkedList e) 
--  native new 
--  newα ∷ () → STMutable s (LinkedList e) 
--  native new  overloads new 
--  newβ ∷ Mutable s (Collection e) → STMutable s (LinkedList e) 
--  native new  overloads new 
--  offer ∷ Mutable s (LinkedList e) → e → ST s Bool 
--  native offer 
--  offerFirst ∷ Mutable s (LinkedList e) → e → ST s Bool 
--  native offerFirst 
--  offerLast ∷ Mutable s (LinkedList e) → e → ST s Bool 
--  native offerLast 
--  peek ∷ Mutable s (LinkedList e) → ST s e 
--  native peek 
--  peekFirst ∷ Mutable s (LinkedList e) → ST s e 
--  native peekFirst 
--  peekLast ∷ Mutable s (LinkedList e) → ST s e 
--  native peekLast 
--  poll ∷ Mutable s (LinkedList e) → ST s e 
--  native poll 
--  pollFirst ∷ Mutable s (LinkedList e) → ST s e 
--  native pollFirst 
--  pollLast ∷ Mutable s (LinkedList e) → ST s e 
--  native pollLast 
--  pop ∷ Mutable s (LinkedList e) → ST s e 
--  native pop 
--  push ∷ Mutable s (LinkedList e) → e → ST s () 
--  native push 
--  remove ∷ Mutable s (LinkedList e) → Int → ST s e 
--          | Mutable s (LinkedList e) → ST s e 
--          | Mutable s (LinkedList e) → a → ST s Bool 
--  native remove 
--  removeFirst ∷ Mutable s (LinkedList e) → ST s e 
--  native removeFirst 
--  removeFirstOccurrence ∷ Mutable s (LinkedList e) → a → ST s Bool 
--  native removeFirstOccurrence 
--  removeLast ∷ Mutable s (LinkedList e) → ST s e 
--  native removeLast 
--  removeLastOccurrence ∷ Mutable s (LinkedList e) → a → ST s Bool 
--  native removeLastOccurrence 
--  removeα ∷ Mutable s (LinkedList e) → Int → ST s e 
--  native remove  overloads remove 
--  removeβ ∷ Mutable s (LinkedList e) → ST s e 
--  native remove  overloads remove 
--  removeγ ∷ Mutable s (LinkedList e) → a → ST s Bool 
--  native remove  overloads remove 
--  set ∷ Mutable s (LinkedList e) → Int → e → ST s e 
--  native set 
--  size ∷ Mutable s (LinkedList e) → ST s Int 
--  native size 
--  toArray ∷ Mutable s (LinkedList e) → ArrayOf s Object → STMutable s (JArray Object) 
--           | Mutable s (LinkedList e) → STMutable s (JArray Object) 
--  native toArray 
--  toArrayα ∷ Mutable s (LinkedList e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toArrayβ ∷ Mutable s (LinkedList e) → STMutable s (JArray Object) 
--  native toArray  overloads toArray 

@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList
data LinkedList e 


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.add
add ∷ Mutable s (LinkedList e) → e → ST s Bool 
     | Mutable s (LinkedList e) → Int → e → ST s () 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.addAll
addAll ∷ Mutable s (LinkedList e) → Mutable s (Collection e) → ST s Bool 
        | Mutable s (LinkedList e) → Int → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.addAllα
addAllα ∷ Mutable s (LinkedList e) → Mutable s (Collection e) → ST s Bool 
native addAll  overloads addAll


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.addAllβ
addAllβ ∷ Mutable s (LinkedList e) → Int → Mutable s (Collection e) → ST s Bool 
native addAll  overloads addAll


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.addFirst
addFirst ∷ Mutable s (LinkedList e) → e → ST s () 
native addFirst


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.addLast
addLast ∷ Mutable s (LinkedList e) → e → ST s () 
native addLast


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.addα
addα ∷ Mutable s (LinkedList e) → e → ST s Bool 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.addβ
addβ ∷ Mutable s (LinkedList e) → Int → e → ST s () 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.clear
clear ∷ Mutable s (LinkedList e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.clone
clone ∷ Mutable s (LinkedList e) → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.contains
contains ∷ Mutable s (LinkedList e) → a → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.descendingIterator
descendingIterator ∷ Mutable s (LinkedList e) → STMutable s (Iterator e) 
native descendingIterator


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.element
element ∷ Mutable s (LinkedList e) → ST s e 
native element


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.fromList
fromList ∷ [a] → STMutable s (LinkedList a)


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.get
get ∷ Mutable s (LinkedList e) → Int → ST s e 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.getFirst
getFirst ∷ Mutable s (LinkedList e) → ST s e 
native getFirst


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.getLast
getLast ∷ Mutable s (LinkedList e) → ST s e 
native getLast


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.indexOf
indexOf ∷ Mutable s (LinkedList e) → a → ST s Int 
native indexOf


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.lastIndexOf
lastIndexOf ∷ Mutable s (LinkedList e) → a → ST s Int 
native lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.listIterator
listIterator ∷ Mutable s (LinkedList e) → Int → STMutable s (ListIterator e) 
native listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList._new
new ∷ () → STMutable s (LinkedList e) 
     | Mutable s (Collection e) → STMutable s (LinkedList e) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.newα
newα ∷ () → STMutable s (LinkedList e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.newβ
newβ ∷ Mutable s (Collection e) → STMutable s (LinkedList e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.offer
offer ∷ Mutable s (LinkedList e) → e → ST s Bool 
native offer


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.offerFirst
offerFirst ∷ Mutable s (LinkedList e) → e → ST s Bool 
native offerFirst


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.offerLast
offerLast ∷ Mutable s (LinkedList e) → e → ST s Bool 
native offerLast


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.peek
peek ∷ Mutable s (LinkedList e) → ST s e 
native peek


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.peekFirst
peekFirst ∷ Mutable s (LinkedList e) → ST s e 
native peekFirst


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.peekLast
peekLast ∷ Mutable s (LinkedList e) → ST s e 
native peekLast


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.poll
poll ∷ Mutable s (LinkedList e) → ST s e 
native poll


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.pollFirst
pollFirst ∷ Mutable s (LinkedList e) → ST s e 
native pollFirst


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.pollLast
pollLast ∷ Mutable s (LinkedList e) → ST s e 
native pollLast


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.pop
pop ∷ Mutable s (LinkedList e) → ST s e 
native pop


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.push
push ∷ Mutable s (LinkedList e) → e → ST s () 
native push


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.remove
remove ∷ Mutable s (LinkedList e) → Int → ST s e 
        | Mutable s (LinkedList e) → ST s e 
        | Mutable s (LinkedList e) → a → ST s Bool 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.removeFirst
removeFirst ∷ Mutable s (LinkedList e) → ST s e 
native removeFirst


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.removeFirstOccurrence
removeFirstOccurrence ∷ Mutable s (LinkedList e) → a → ST s Bool 
native removeFirstOccurrence


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.removeLast
removeLast ∷ Mutable s (LinkedList e) → ST s e 
native removeLast


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.removeLastOccurrence
removeLastOccurrence ∷ Mutable s (LinkedList e) → a → ST s Bool 
native removeLastOccurrence


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.removeα
removeα ∷ Mutable s (LinkedList e) → Int → ST s e 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.removeβ
removeβ ∷ Mutable s (LinkedList e) → ST s e 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.removeγ
removeγ ∷ Mutable s (LinkedList e) → a → ST s Bool 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.set
set ∷ Mutable s (LinkedList e) → Int → e → ST s e 
native set


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.size
size ∷ Mutable s (LinkedList e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.toArray
toArray ∷ Mutable s (LinkedList e) → ArrayOf s Object → STMutable s (JArray Object) 
         | Mutable s (LinkedList e) → STMutable s (JArray Object) 
native toArray


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.toArrayα
toArrayα ∷ Mutable s (LinkedList e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#LinkedList.toArrayβ
toArrayβ ∷ Mutable s (LinkedList e) → STMutable s (JArray Object) 
native toArray  overloads toArray

-- | Resizable-array implementation of the List interface. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (ArrayList e) → Int → e → ST s () 
--       | Mutable s (ArrayList e) → e → ST s Bool 
--  native add 
--  addAll ∷ Mutable s (ArrayList e) → Int → Mutable s (Collection e) → ST s Bool 
--          | Mutable s (ArrayList e) → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  addAllα ∷ Mutable s (ArrayList e) → Int → Mutable s (Collection e) → ST s Bool 
--  native addAll  overloads addAll 
--  addAllβ ∷ Mutable s (ArrayList e) → Mutable s (Collection e) → ST s Bool 
--  native addAll  overloads addAll 
--  addα ∷ Mutable s (ArrayList e) → Int → e → ST s () 
--  native add  overloads add 
--  addβ ∷ Mutable s (ArrayList e) → e → ST s Bool 
--  native add  overloads add 
--  clear ∷ Mutable s (ArrayList e) → ST s () 
--  native clear 
--  clone ∷ Mutable s (ArrayList e) → ST s Object 
--  native clone 
--  contains ∷ Mutable s (ArrayList e) → a → ST s Bool 
--  native contains 
--  ensureCapacity ∷ Mutable s (ArrayList e) → Int → ST s () 
--  native ensureCapacity 
--  fromList ∷ [a] → STMutable s (ArrayList a) 
--  get ∷ Mutable s (ArrayList e) → Int → ST s e 
--  native get 
--  indexOf ∷ Mutable s (ArrayList e) → a → ST s Int 
--  native indexOf 
--  isEmpty ∷ Mutable s (ArrayList e) → ST s Bool 
--  native isEmpty 
--  iterator ∷ Mutable s (ArrayList e) → STMutable s (Iterator e) 
--  native iterator 
--  lastIndexOf ∷ Mutable s (ArrayList e) → a → ST s Int 
--  native lastIndexOf 
--  listIterator ∷ Mutable s (ArrayList e) → Int → STMutable s (ListIterator e) 
--                | Mutable s (ArrayList e) → STMutable s (ListIterator e) 
--  native listIterator 
--  listIteratorα ∷ Mutable s (ArrayList e) → Int → STMutable s (ListIterator e) 
--  native listIterator  overloads listIterator 
--  listIteratorβ ∷ Mutable s (ArrayList e) → STMutable s (ListIterator e) 
--  native listIterator  overloads listIterator 
--  new ∷ Mutable s (Collection e) → STMutable s (ArrayList e) 
--       | () → STMutable s (ArrayList e) 
--       | Int → STMutable s (ArrayList e) 
--  native new 
--  newα ∷ Mutable s (Collection e) → STMutable s (ArrayList e) 
--  native new  overloads new 
--  newβ ∷ () → STMutable s (ArrayList e) 
--  native new  overloads new 
--  newγ ∷ Int → STMutable s (ArrayList e) 
--  native new  overloads new 
--  remove ∷ Mutable s (ArrayList e) → Int → ST s e 
--          | Mutable s (ArrayList e) → a → ST s Bool 
--  native remove 
--  removeAll ∷ Mutable s (ArrayList e) → Mutable s (Collection a) → ST s Bool 
--  native removeAll 
--  removeα ∷ Mutable s (ArrayList e) → Int → ST s e 
--  native remove  overloads remove 
--  removeβ ∷ Mutable s (ArrayList e) → a → ST s Bool 
--  native remove  overloads remove 
--  retainAll ∷ Mutable s (ArrayList e) → Mutable s (Collection a) → ST s Bool 
--  native retainAll 
--  set ∷ Mutable s (ArrayList e) → Int → e → ST s e 
--  native set 
--  size ∷ Mutable s (ArrayList e) → ST s Int 
--  native size 
--  subList ∷ Mutable s (ArrayList e) → Int → Int → STMutable s (List e) 
--  native subList 
--  toArray ∷ Mutable s (ArrayList e) → STMutable s (JArray Object) 
--           | Mutable s (ArrayList e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray 
--  toArrayα ∷ Mutable s (ArrayList e) → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toArrayβ ∷ Mutable s (ArrayList e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  trimToSize ∷ Mutable s (ArrayList e) → ST s () 
--  native trimToSize 

@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList
data ArrayList e 


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.add
add ∷ Mutable s (ArrayList e) → Int → e → ST s () 
     | Mutable s (ArrayList e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.addAll
addAll ∷ Mutable s (ArrayList e) → Int → Mutable s (Collection e) → ST s Bool 
        | Mutable s (ArrayList e) → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.addAllα
addAllα ∷ Mutable s (ArrayList e) → Int → Mutable s (Collection e) → ST s Bool 
native addAll  overloads addAll


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.addAllβ
addAllβ ∷ Mutable s (ArrayList e) → Mutable s (Collection e) → ST s Bool 
native addAll  overloads addAll


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.addα
addα ∷ Mutable s (ArrayList e) → Int → e → ST s () 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.addβ
addβ ∷ Mutable s (ArrayList e) → e → ST s Bool 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.clear
clear ∷ Mutable s (ArrayList e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.clone
clone ∷ Mutable s (ArrayList e) → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.contains
contains ∷ Mutable s (ArrayList e) → a → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.ensureCapacity
ensureCapacity ∷ Mutable s (ArrayList e) → Int → ST s () 
native ensureCapacity


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.fromList
fromList ∷ [a] → STMutable s (ArrayList a)


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.get
get ∷ Mutable s (ArrayList e) → Int → ST s e 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.indexOf
indexOf ∷ Mutable s (ArrayList e) → a → ST s Int 
native indexOf


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.isEmpty
isEmpty ∷ Mutable s (ArrayList e) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.iterator
iterator ∷ Mutable s (ArrayList e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.lastIndexOf
lastIndexOf ∷ Mutable s (ArrayList e) → a → ST s Int 
native lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.listIterator
listIterator ∷ Mutable s (ArrayList e) → Int → STMutable s (ListIterator e) 
              | Mutable s (ArrayList e) → STMutable s (ListIterator e) 
native listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.listIteratorα
listIteratorα ∷ Mutable s (ArrayList e) → Int → STMutable s (ListIterator e) 
native listIterator  overloads listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.listIteratorβ
listIteratorβ ∷ Mutable s (ArrayList e) → STMutable s (ListIterator e) 
native listIterator  overloads listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList._new
new ∷ Mutable s (Collection e) → STMutable s (ArrayList e) 
     | () → STMutable s (ArrayList e) 
     | Int → STMutable s (ArrayList e) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.newα
newα ∷ Mutable s (Collection e) → STMutable s (ArrayList e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.newβ
newβ ∷ () → STMutable s (ArrayList e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.newγ
newγ ∷ Int → STMutable s (ArrayList e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.remove
remove ∷ Mutable s (ArrayList e) → Int → ST s e 
        | Mutable s (ArrayList e) → a → ST s Bool 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.removeAll
removeAll ∷ Mutable s (ArrayList e) → Mutable s (Collection a) → ST s Bool 
native removeAll


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.removeα
removeα ∷ Mutable s (ArrayList e) → Int → ST s e 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.removeβ
removeβ ∷ Mutable s (ArrayList e) → a → ST s Bool 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.retainAll
retainAll ∷ Mutable s (ArrayList e) → Mutable s (Collection a) → ST s Bool 
native retainAll


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.set
set ∷ Mutable s (ArrayList e) → Int → e → ST s e 
native set


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.size
size ∷ Mutable s (ArrayList e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.subList
subList ∷ Mutable s (ArrayList e) → Int → Int → STMutable s (List e) 
native subList


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.toArray
toArray ∷ Mutable s (ArrayList e) → STMutable s (JArray Object) 
         | Mutable s (ArrayList e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.toArrayα
toArrayα ∷ Mutable s (ArrayList e) → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.toArrayβ
toArrayβ ∷ Mutable s (ArrayList e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#ArrayList.trimToSize
trimToSize ∷ Mutable s (ArrayList e) → ST s () 
native trimToSize

-- | A specialized Set implementation for use with enum types. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  allOf ∷ Class (JEnum e) → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.allOf 
--  clone ∷ Mutable s (EnumSet e) → STMutable s (EnumSet e) 
--  native clone 
--  complementOf ∷ Mutable s (EnumSet (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.complementOf 
--  copyOf ∷ Mutable s (EnumSet (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
--          | Mutable s (Collection (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.copyOf 
--  copyOfα ∷ Mutable s (EnumSet (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.copyOf  overloads copyOf 
--  copyOfβ ∷ Mutable s (Collection (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.copyOf  overloads copyOf 
--  from ∷ JEnum e → JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
--        | JEnum e → JEnum e → JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
--        | JEnum e → ArrayOf s (JEnum e) → STMutable s (EnumSet (JEnum e)) 
--        | JEnum e → STMutable s (EnumSet (JEnum e)) 
--        | JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
--        | JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.of 
--  fromα ∷ JEnum e → JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.of  overloads from 
--  fromβ ∷ JEnum e → JEnum e → JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.of  overloads from 
--  fromγ ∷ JEnum e → ArrayOf s (JEnum e) → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.of  overloads from 
--  fromδ ∷ JEnum e → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.of  overloads from 
--  fromε ∷ JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.of  overloads from 
--  fromζ ∷ JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.of  overloads from 
--  noneOf ∷ Class (JEnum e) → STMutable s (EnumSet (JEnum e)) 
--  native java.util.EnumSet.noneOf 
--  range ∷ JEnum e → JEnum e → STMutable s (EnumSet e) 
--  native java.util.EnumSet.range 

@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet
data EnumSet e 


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.allOf
allOf ∷ Class (JEnum e) → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.allOf


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.clone
clone ∷ Mutable s (EnumSet e) → STMutable s (EnumSet e) 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.complementOf
complementOf ∷ Mutable s (EnumSet (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.complementOf


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.copyOf
copyOf ∷ Mutable s (EnumSet (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
        | Mutable s (Collection (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.copyOfα
copyOfα ∷ Mutable s (EnumSet (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.copyOfβ
copyOfβ ∷ Mutable s (Collection (JEnum e)) → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.from
from ∷ JEnum e → JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
      | JEnum e → JEnum e → JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
      | JEnum e → ArrayOf s (JEnum e) → STMutable s (EnumSet (JEnum e)) 
      | JEnum e → STMutable s (EnumSet (JEnum e)) 
      | JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
      | JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.of


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.fromα
fromα ∷ JEnum e → JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.of  overloads from


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.fromβ
fromβ ∷ JEnum e → JEnum e → JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.of  overloads from


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.fromγ
fromγ ∷ JEnum e → ArrayOf s (JEnum e) → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.of  overloads from


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.fromδ
fromδ ∷ JEnum e → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.of  overloads from


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.fromε
fromε ∷ JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.of  overloads from


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.fromζ
fromζ ∷ JEnum e → JEnum e → JEnum e → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.of  overloads from


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.noneOf
noneOf ∷ Class (JEnum e) → STMutable s (EnumSet (JEnum e)) 
native java.util.EnumSet.noneOf


@url http://www.frege-lang.org/doc/frege/java/Util#EnumSet.range
range ∷ JEnum e → JEnum e → STMutable s (EnumSet e) 
native java.util.EnumSet.range

-- | The Vector class implements a growable array of objects. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (Vector e) → e → ST s Bool 
--       | Mutable s (Vector e) → Int → e → ST s () 
--  native add 
--  addAll ∷ Mutable s (Vector e) → Int → Mutable s (Collection e) → ST s Bool 
--          | Mutable s (Vector e) → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  addAllα ∷ Mutable s (Vector e) → Int → Mutable s (Collection e) → ST s Bool 
--  native addAll  overloads addAll 
--  addAllβ ∷ Mutable s (Vector e) → Mutable s (Collection e) → ST s Bool 
--  native addAll  overloads addAll 
--  addElement ∷ Mutable s (Vector e) → e → ST s () 
--  native addElement 
--  addα ∷ Mutable s (Vector e) → e → ST s Bool 
--  native add  overloads add 
--  addβ ∷ Mutable s (Vector e) → Int → e → ST s () 
--  native add  overloads add 
--  capacity ∷ Mutable s (Vector e) → ST s Int 
--  native capacity 
--  clear ∷ Mutable s (Vector e) → ST s () 
--  native clear 
--  clone ∷ Mutable s (Vector e) → ST s Object 
--  native clone 
--  contains ∷ Mutable s (Vector e) → a → ST s Bool 
--  native contains 
--  containsAll ∷ Mutable s (Vector e) → Mutable s (Collection a) → ST s Bool 
--  native containsAll 
--  copyInto ∷ Mutable s (Vector e) → ArrayOf s Object → ST s () 
--  native copyInto 
--  elementAt ∷ Mutable s (Vector e) → Int → ST s e 
--  native elementAt 
--  elements ∷ Mutable s (Vector e) → STMutable s (Enumeration e) 
--  native elements 
--  ensureCapacity ∷ Mutable s (Vector e) → Int → ST s () 
--  native ensureCapacity 
--  equals ∷ Mutable s (Vector e) → a → ST s Bool 
--  native equals 
--  firstElement ∷ Mutable s (Vector e) → ST s e 
--  native firstElement 
--  fromList ∷ [a] → STMutable s (Vector a) 
--  get ∷ Mutable s (Vector e) → Int → ST s e 
--  native get 
--  hashCode ∷ Mutable s (Vector e) → ST s Int 
--  native hashCode 
--  indexOf ∷ Mutable s (Vector e) → a → ST s Int 
--           | Mutable s (Vector e) → a → Int → ST s Int 
--  native indexOf 
--  indexOfα ∷ Mutable s (Vector e) → a → ST s Int 
--  native indexOf  overloads indexOf 
--  indexOfβ ∷ Mutable s (Vector e) → a → Int → ST s Int 
--  native indexOf  overloads indexOf 
--  insertElementAt ∷ Mutable s (Vector e) → e → Int → ST s () 
--  native insertElementAt 
--  isEmpty ∷ Mutable s (Vector e) → ST s Bool 
--  native isEmpty 
--  iterator ∷ Mutable s (Vector e) → STMutable s (Iterator e) 
--  native iterator 
--  lastElement ∷ Mutable s (Vector e) → ST s e 
--  native lastElement 
--  lastIndexOf ∷ Mutable s (Vector e) → a → Int → ST s Int 
--               | Mutable s (Vector e) → a → ST s Int 
--  native lastIndexOf 
--  lastIndexOfα ∷ Mutable s (Vector e) → a → Int → ST s Int 
--  native lastIndexOf  overloads lastIndexOf 
--  lastIndexOfβ ∷ Mutable s (Vector e) → a → ST s Int 
--  native lastIndexOf  overloads lastIndexOf 
--  listIterator ∷ Mutable s (Vector e) → STMutable s (ListIterator e) 
--                | Mutable s (Vector e) → Int → STMutable s (ListIterator e) 
--  native listIterator 
--  listIteratorα ∷ Mutable s (Vector e) → STMutable s (ListIterator e) 
--  native listIterator  overloads listIterator 
--  listIteratorβ ∷ Mutable s (Vector e) → Int → STMutable s (ListIterator e) 
--  native listIterator  overloads listIterator 
--  new ∷ Mutable s (Collection e) → STMutable s (Vector e) 
--       | () → STMutable s (Vector e) 
--       | Int → STMutable s (Vector e) 
--       | Int → Int → STMutable s (Vector e) 
--  native new 
--  newα ∷ Mutable s (Collection e) → STMutable s (Vector e) 
--  native new  overloads new 
--  newβ ∷ () → STMutable s (Vector e) 
--  native new  overloads new 
--  newγ ∷ Int → STMutable s (Vector e) 
--  native new  overloads new 
--  newδ ∷ Int → Int → STMutable s (Vector e) 
--  native new  overloads new 
--  remove ∷ Mutable s (Vector e) → a → ST s Bool 
--          | Mutable s (Vector e) → Int → ST s e 
--  native remove 
--  removeAll ∷ Mutable s (Vector e) → Mutable s (Collection a) → ST s Bool 
--  native removeAll 
--  removeAllElements ∷ Mutable s (Vector e) → ST s () 
--  native removeAllElements 
--  removeElement ∷ Mutable s (Vector e) → a → ST s Bool 
--  native removeElement 
--  removeElementAt ∷ Mutable s (Vector e) → Int → ST s () 
--  native removeElementAt 
--  removeα ∷ Mutable s (Vector e) → a → ST s Bool 
--  native remove  overloads remove 
--  removeβ ∷ Mutable s (Vector e) → Int → ST s e 
--  native remove  overloads remove 
--  retainAll ∷ Mutable s (Vector e) → Mutable s (Collection a) → ST s Bool 
--  native retainAll 
--  set ∷ Mutable s (Vector e) → Int → e → ST s e 
--  native set 
--  setElementAt ∷ Mutable s (Vector e) → e → Int → ST s () 
--  native setElementAt 
--  setSize ∷ Mutable s (Vector e) → Int → ST s () 
--  native setSize 
--  size ∷ Mutable s (Vector e) → ST s Int 
--  native size 
--  subList ∷ Mutable s (Vector e) → Int → Int → STMutable s (List e) 
--  native subList 
--  toArray ∷ Mutable s (Vector e) → STMutable s (JArray Object) 
--           | Mutable s (Vector e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray 
--  toArrayα ∷ Mutable s (Vector e) → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toArrayβ ∷ Mutable s (Vector e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toString ∷ Mutable s (Vector e) → ST s String 
--  native toString 
--  trimToSize ∷ Mutable s (Vector e) → ST s () 
--  native trimToSize 

@url http://www.frege-lang.org/doc/frege/java/Util#Vector
data Vector e 


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.add
add ∷ Mutable s (Vector e) → e → ST s Bool 
     | Mutable s (Vector e) → Int → e → ST s () 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.addAll
addAll ∷ Mutable s (Vector e) → Int → Mutable s (Collection e) → ST s Bool 
        | Mutable s (Vector e) → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.addAllα
addAllα ∷ Mutable s (Vector e) → Int → Mutable s (Collection e) → ST s Bool 
native addAll  overloads addAll


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.addAllβ
addAllβ ∷ Mutable s (Vector e) → Mutable s (Collection e) → ST s Bool 
native addAll  overloads addAll


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.addElement
addElement ∷ Mutable s (Vector e) → e → ST s () 
native addElement


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.addα
addα ∷ Mutable s (Vector e) → e → ST s Bool 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.addβ
addβ ∷ Mutable s (Vector e) → Int → e → ST s () 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.capacity
capacity ∷ Mutable s (Vector e) → ST s Int 
native capacity


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.clear
clear ∷ Mutable s (Vector e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.clone
clone ∷ Mutable s (Vector e) → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.contains
contains ∷ Mutable s (Vector e) → a → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.containsAll
containsAll ∷ Mutable s (Vector e) → Mutable s (Collection a) → ST s Bool 
native containsAll


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.copyInto
copyInto ∷ Mutable s (Vector e) → ArrayOf s Object → ST s () 
native copyInto


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.elementAt
elementAt ∷ Mutable s (Vector e) → Int → ST s e 
native elementAt


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.elements
elements ∷ Mutable s (Vector e) → STMutable s (Enumeration e) 
native elements


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.ensureCapacity
ensureCapacity ∷ Mutable s (Vector e) → Int → ST s () 
native ensureCapacity


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.equals
equals ∷ Mutable s (Vector e) → a → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.firstElement
firstElement ∷ Mutable s (Vector e) → ST s e 
native firstElement


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.fromList
fromList ∷ [a] → STMutable s (Vector a)


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.get
get ∷ Mutable s (Vector e) → Int → ST s e 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.hashCode
hashCode ∷ Mutable s (Vector e) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.indexOf
indexOf ∷ Mutable s (Vector e) → a → ST s Int 
         | Mutable s (Vector e) → a → Int → ST s Int 
native indexOf


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.indexOfα
indexOfα ∷ Mutable s (Vector e) → a → ST s Int 
native indexOf  overloads indexOf


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.indexOfβ
indexOfβ ∷ Mutable s (Vector e) → a → Int → ST s Int 
native indexOf  overloads indexOf


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.insertElementAt
insertElementAt ∷ Mutable s (Vector e) → e → Int → ST s () 
native insertElementAt


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.isEmpty
isEmpty ∷ Mutable s (Vector e) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.iterator
iterator ∷ Mutable s (Vector e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.lastElement
lastElement ∷ Mutable s (Vector e) → ST s e 
native lastElement


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.lastIndexOf
lastIndexOf ∷ Mutable s (Vector e) → a → Int → ST s Int 
             | Mutable s (Vector e) → a → ST s Int 
native lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.lastIndexOfα
lastIndexOfα ∷ Mutable s (Vector e) → a → Int → ST s Int 
native lastIndexOf  overloads lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.lastIndexOfβ
lastIndexOfβ ∷ Mutable s (Vector e) → a → ST s Int 
native lastIndexOf  overloads lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.listIterator
listIterator ∷ Mutable s (Vector e) → STMutable s (ListIterator e) 
              | Mutable s (Vector e) → Int → STMutable s (ListIterator e) 
native listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.listIteratorα
listIteratorα ∷ Mutable s (Vector e) → STMutable s (ListIterator e) 
native listIterator  overloads listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.listIteratorβ
listIteratorβ ∷ Mutable s (Vector e) → Int → STMutable s (ListIterator e) 
native listIterator  overloads listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#Vector._new
new ∷ Mutable s (Collection e) → STMutable s (Vector e) 
     | () → STMutable s (Vector e) 
     | Int → STMutable s (Vector e) 
     | Int → Int → STMutable s (Vector e) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.newα
newα ∷ Mutable s (Collection e) → STMutable s (Vector e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.newβ
newβ ∷ () → STMutable s (Vector e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.newγ
newγ ∷ Int → STMutable s (Vector e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.newδ
newδ ∷ Int → Int → STMutable s (Vector e) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.remove
remove ∷ Mutable s (Vector e) → a → ST s Bool 
        | Mutable s (Vector e) → Int → ST s e 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.removeAll
removeAll ∷ Mutable s (Vector e) → Mutable s (Collection a) → ST s Bool 
native removeAll


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.removeAllElements
removeAllElements ∷ Mutable s (Vector e) → ST s () 
native removeAllElements


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.removeElement
removeElement ∷ Mutable s (Vector e) → a → ST s Bool 
native removeElement


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.removeElementAt
removeElementAt ∷ Mutable s (Vector e) → Int → ST s () 
native removeElementAt


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.removeα
removeα ∷ Mutable s (Vector e) → a → ST s Bool 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.removeβ
removeβ ∷ Mutable s (Vector e) → Int → ST s e 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.retainAll
retainAll ∷ Mutable s (Vector e) → Mutable s (Collection a) → ST s Bool 
native retainAll


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.set
set ∷ Mutable s (Vector e) → Int → e → ST s e 
native set


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.setElementAt
setElementAt ∷ Mutable s (Vector e) → e → Int → ST s () 
native setElementAt


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.setSize
setSize ∷ Mutable s (Vector e) → Int → ST s () 
native setSize


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.size
size ∷ Mutable s (Vector e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.subList
subList ∷ Mutable s (Vector e) → Int → Int → STMutable s (List e) 
native subList


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.toArray
toArray ∷ Mutable s (Vector e) → STMutable s (JArray Object) 
         | Mutable s (Vector e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.toArrayα
toArrayα ∷ Mutable s (Vector e) → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.toArrayβ
toArrayβ ∷ Mutable s (Vector e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.toString
toString ∷ Mutable s (Vector e) → ST s String 
native toString


@url http://www.frege-lang.org/doc/frege/java/Util#Vector.trimToSize
trimToSize ∷ Mutable s (Vector e) → ST s () 
native trimToSize

-- | An object that maps keys to values. More: JavaDoc 
--   Member Functions
--  ----------------
--  addAllFromList ∷ Mutable s (Map k v) → [(k, v)] → ST s () 
--  clear ∷ Mutable s (Map k v) → ST s () 
--  native clear 
--  containsKey ∷ Mutable s (Map k v) → a → ST s Bool 
--  native containsKey 
--  containsValue ∷ Mutable s (Map k v) → a → ST s Bool 
--  native containsValue 
--  entrySet ∷ Mutable s (Map k v) → STMutable s (Set (Mutable s (MapEntry k v))) 
--  native entrySet 
--  equals ∷ Mutable s (Map k v) → a → ST s Bool 
--  native equals 
--  get ∷ Mutable s (Map k v) → a → ST s (Maybe v) 
--  native get 
--  hashCode ∷ Mutable s (Map k v) → ST s Int 
--  native hashCode 
--  isEmpty ∷ Mutable s (Map k v) → ST s Bool 
--  native isEmpty 
--  keySet ∷ Mutable s (Map k v) → STMutable s (Set k) 
--  native keySet 
--  put ∷ Mutable s (Map k v) → k → v → ST s (Maybe v) 
--  native put 
--  putAll ∷ Mutable s (Map k v) → Mutable s (Map k v) → ST s () 
--  native putAll 
--  remove ∷ Mutable s (Map k v) → a → ST s v 
--  native remove 
--  size ∷ Mutable s (Map k v) → ST s Int 
--  native size 
--  toList ∷ Mutable s (Map k v) → ST s [(k, v)] 
--  values ∷ Mutable s (Map k v) → STMutable s (Collection v) 
--  native values 

@url http://www.frege-lang.org/doc/frege/java/Util#Map
data Map k v 


@url http://www.frege-lang.org/doc/frege/java/Util#Map.addAllFromList
addAllFromList ∷ Mutable s (Map k v) → [(k, v)] → ST s ()


@url http://www.frege-lang.org/doc/frege/java/Util#Map.clear
clear ∷ Mutable s (Map k v) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#Map.containsKey
containsKey ∷ Mutable s (Map k v) → a → ST s Bool 
native containsKey


@url http://www.frege-lang.org/doc/frege/java/Util#Map.containsValue
containsValue ∷ Mutable s (Map k v) → a → ST s Bool 
native containsValue


@url http://www.frege-lang.org/doc/frege/java/Util#Map.entrySet
entrySet ∷ Mutable s (Map k v) → STMutable s (Set (Mutable s (MapEntry k v))) 
native entrySet


@url http://www.frege-lang.org/doc/frege/java/Util#Map.equals
equals ∷ Mutable s (Map k v) → a → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#Map.get
get ∷ Mutable s (Map k v) → a → ST s (Maybe v) 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#Map.hashCode
hashCode ∷ Mutable s (Map k v) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Map.isEmpty
isEmpty ∷ Mutable s (Map k v) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#Map.keySet
keySet ∷ Mutable s (Map k v) → STMutable s (Set k) 
native keySet


@url http://www.frege-lang.org/doc/frege/java/Util#Map.put
put ∷ Mutable s (Map k v) → k → v → ST s (Maybe v) 
native put


@url http://www.frege-lang.org/doc/frege/java/Util#Map.putAll
putAll ∷ Mutable s (Map k v) → Mutable s (Map k v) → ST s () 
native putAll


@url http://www.frege-lang.org/doc/frege/java/Util#Map.remove
remove ∷ Mutable s (Map k v) → a → ST s v 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#Map.size
size ∷ Mutable s (Map k v) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#Map.toList
toList ∷ Mutable s (Map k v) → ST s [(k, v)]


@url http://www.frege-lang.org/doc/frege/java/Util#Map.values
values ∷ Mutable s (Map k v) → STMutable s (Collection v) 
native values

-- | A map entry (key-value pair). More: JavaDoc 
--   Member Functions
--  ----------------
--  equals ∷ Mutable s (MapEntry k v) → a → ST s Bool 
--  native equals 
--  getKey ∷ Mutable s (MapEntry k v) → ST s k 
--  native getKey 
--  getValue ∷ Mutable s (MapEntry k v) → ST s v 
--  native getValue 
--  hashCode ∷ Mutable s (MapEntry k v) → ST s Int 
--  native hashCode 
--  setValue ∷ Mutable s (MapEntry k v) → v → ST s v 
--  native setValue 

@url http://www.frege-lang.org/doc/frege/java/Util#MapEntry
data MapEntry k v 


@url http://www.frege-lang.org/doc/frege/java/Util#MapEntry.equals
equals ∷ Mutable s (MapEntry k v) → a → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#MapEntry.getKey
getKey ∷ Mutable s (MapEntry k v) → ST s k 
native getKey


@url http://www.frege-lang.org/doc/frege/java/Util#MapEntry.getValue
getValue ∷ Mutable s (MapEntry k v) → ST s v 
native getValue


@url http://www.frege-lang.org/doc/frege/java/Util#MapEntry.hashCode
hashCode ∷ Mutable s (MapEntry k v) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#MapEntry.setValue
setValue ∷ Mutable s (MapEntry k v) → v → ST s v 
native setValue

-- | This class provides a skeletal implementation of the Map interface, to minimize the effort required to implement this interface. More: JavaDoc 
--   Member Functions
--  ----------------
--  clear ∷ Mutable s (AbstractMap k v) → ST s () 
--  native clear 
--  containsKey ∷ Mutable s (AbstractMap k v) → k → ST s Bool 
--  native containsKey 
--  containsValue ∷ Mutable s (AbstractMap k v) → v → ST s Bool 
--  native containsValue 
--  entrySet ∷ Mutable s (AbstractMap k v) → STMutable s (Set (Mutable s (MapEntry k v))) 
--  native entrySet 
--  equals ∷ Mutable s (AbstractMap k v) → a → ST s Bool 
--  native equals 
--  get ∷ Mutable s (AbstractMap k v) → k → ST s (Maybe v) 
--  native get 
--  hashCode ∷ Mutable s (AbstractMap k v) → ST s Int 
--  native hashCode 
--  isEmpty ∷ Mutable s (AbstractMap k v) → ST s Bool 
--  native isEmpty 
--  keySet ∷ Mutable s (AbstractMap k v) → STMutable s (Set k) 
--  native keySet 
--  put ∷ Mutable s (AbstractMap k v) → k → v → ST s (Maybe v) 
--  native put 
--  putAll ∷ Mutable s (AbstractMap k v) → Mutable s (Map k v) → ST s () 
--  native putAll 
--  remove ∷ Mutable s (AbstractMap k v) → k → ST s v 
--  native remove 
--  size ∷ Mutable s (AbstractMap k v) → ST s Int 
--  native size 
--  toString ∷ Mutable s (AbstractMap k v) → ST s String 
--  native toString 
--  values ∷ Mutable s (AbstractMap k v) → STMutable s (Collection v) 
--  native values 

@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap
data AbstractMap k v 


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.clear
clear ∷ Mutable s (AbstractMap k v) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.containsKey
containsKey ∷ Mutable s (AbstractMap k v) → k → ST s Bool 
native containsKey


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.containsValue
containsValue ∷ Mutable s (AbstractMap k v) → v → ST s Bool 
native containsValue


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.entrySet
entrySet ∷ Mutable s (AbstractMap k v) → STMutable s (Set (Mutable s (MapEntry k v))) 
native entrySet


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.equals
equals ∷ Mutable s (AbstractMap k v) → a → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.get
get ∷ Mutable s (AbstractMap k v) → k → ST s (Maybe v) 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.hashCode
hashCode ∷ Mutable s (AbstractMap k v) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.isEmpty
isEmpty ∷ Mutable s (AbstractMap k v) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.keySet
keySet ∷ Mutable s (AbstractMap k v) → STMutable s (Set k) 
native keySet


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.put
put ∷ Mutable s (AbstractMap k v) → k → v → ST s (Maybe v) 
native put


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.putAll
putAll ∷ Mutable s (AbstractMap k v) → Mutable s (Map k v) → ST s () 
native putAll


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.remove
remove ∷ Mutable s (AbstractMap k v) → k → ST s v 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.size
size ∷ Mutable s (AbstractMap k v) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.toString
toString ∷ Mutable s (AbstractMap k v) → ST s String 
native toString


@url http://www.frege-lang.org/doc/frege/java/Util#AbstractMap.values
values ∷ Mutable s (AbstractMap k v) → STMutable s (Collection v) 
native values

-- | The Formattable interface must be implemented by any class that needs to perform custom formatting using the s conversion specifier of Formatter. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  formatTo ∷ Mutable s Formattable → Mutable s Formatter → Int → Int → Int → ST s () 
--  native formatTo 

@url http://www.frege-lang.org/doc/frege/java/Util#Formattable
data Formattable 


@url http://www.frege-lang.org/doc/frege/java/Util#Formattable.formatTo
formatTo ∷ Mutable s Formattable → Mutable s Formatter → Int → Int → Int → ST s () 
native formatTo

-- | A Map that further provides a total ordering on its keys. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  comparator ∷ Mutable s (SortedMap k v) → ST s (Comparator k) 
--  native comparator 
--  entrySet ∷ Mutable s (SortedMap k v) → STMutable s (Set (MapEntry k v)) 
--  native entrySet 
--  firstKey ∷ Mutable s (SortedMap k v) → ST s k 
--  native firstKey 
--  headMap ∷ Mutable s (SortedMap k v) → k → STMutable s (SortedMap k v) 
--  native headMap 
--  keySet ∷ Mutable s (SortedMap k v) → STMutable s (Set k) 
--  native keySet 
--  lastKey ∷ Mutable s (SortedMap k v) → ST s k 
--  native lastKey 
--  subMap ∷ Mutable s (SortedMap k v) → k → k → STMutable s (SortedMap k v) 
--  native subMap 
--  tailMap ∷ Mutable s (SortedMap k v) → k → STMutable s (SortedMap k v) 
--  native tailMap 
--  values ∷ Mutable s (SortedMap k v) → STMutable s (Collection v) 
--  native values 

@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap
data SortedMap k v 


@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap.comparator
comparator ∷ Mutable s (SortedMap k v) → ST s (Comparator k) 
native comparator


@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap.entrySet
entrySet ∷ Mutable s (SortedMap k v) → STMutable s (Set (MapEntry k v)) 
native entrySet


@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap.firstKey
firstKey ∷ Mutable s (SortedMap k v) → ST s k 
native firstKey


@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap.headMap
headMap ∷ Mutable s (SortedMap k v) → k → STMutable s (SortedMap k v) 
native headMap


@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap.keySet
keySet ∷ Mutable s (SortedMap k v) → STMutable s (Set k) 
native keySet


@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap.lastKey
lastKey ∷ Mutable s (SortedMap k v) → ST s k 
native lastKey


@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap.subMap
subMap ∷ Mutable s (SortedMap k v) → k → k → STMutable s (SortedMap k v) 
native subMap


@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap.tailMap
tailMap ∷ Mutable s (SortedMap k v) → k → STMutable s (SortedMap k v) 
native tailMap


@url http://www.frege-lang.org/doc/frege/java/Util#SortedMap.values
values ∷ Mutable s (SortedMap k v) → STMutable s (Collection v) 
native values

-- | Marker interface used by List implementations to indicate that they support fast (generally constant time) random access. 
--   More: JavaDoc 
@url http://www.frege-lang.org/doc/frege/java/Util#RandomAccess
data RandomAccess 

-- | An iterator over a collection. More: JavaDoc 
--   Member Functions
--  ----------------
--  fold ∷ (c → a → c) → c → Mutable s (Iterator a) → ST s c 
--   Fold over a java Iterator 
--   Unlike a fold over the result of Iterator.toList, this doesn't need extra memory.   
--  hasNext ∷ Mutable s (Iterator e) → ST s Bool 
--  native hasNext 
--  next ∷ Mutable s (Iterator e) → ST s e 
--  native next 
--  remove ∷ Mutable s (Iterator e) → ST s () 
--  native remove 
--  toList ∷ Mutable s (Iterator e) → ST s [e] 
--   Converts the elements of this Iterator to a Frege list. Unfortunately, because the Iterator is mutable, the list is not constructed lazily, but at once. And since it comes out in the wrong order, it must finally be reversed. 
--   This can be deadly when the Iterator has large amounts of data, as there must be 2n list nodes created, at least temporarily. 
--   If all you want to do is to reduce (i.e. fold) the resulting list, consider Iterator.fold, which doesn't expend any additional memory.   
@url http://www.frege-lang.org/doc/frege/java/Util#Iterator
data Iterator e 

-- | Fold over a java Iterator 
--   Unlike a fold over the result of Iterator.toList, this doesn't need extra memory.  
@url http://www.frege-lang.org/doc/frege/java/Util#Iterator.fold
fold ∷ (c → a → c) → c → Mutable s (Iterator a) → ST s c


@url http://www.frege-lang.org/doc/frege/java/Util#Iterator.hasNext
hasNext ∷ Mutable s (Iterator e) → ST s Bool 
native hasNext


@url http://www.frege-lang.org/doc/frege/java/Util#Iterator.next
next ∷ Mutable s (Iterator e) → ST s e 
native next


@url http://www.frege-lang.org/doc/frege/java/Util#Iterator.remove
remove ∷ Mutable s (Iterator e) → ST s () 
native remove

-- | Converts the elements of this Iterator to a Frege list. Unfortunately, because the Iterator is mutable, the list is not constructed lazily, but at once. And since it comes out in the wrong order, it must finally be reversed. 
--   This can be deadly when the Iterator has large amounts of data, as there must be 2n list nodes created, at least temporarily. 
--   If all you want to do is to reduce (i.e. fold) the resulting list, consider Iterator.fold, which doesn't expend any additional memory. 
@url http://www.frege-lang.org/doc/frege/java/Util#Iterator.toList
toList ∷ Mutable s (Iterator e) → ST s [e]

-- | An ordered collection (also known as a sequence). 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (List e) → e → ST s Bool 
--       | Mutable s (List e) → Int → e → ST s () 
--  native add 
--  addAll ∷ Mutable s (List e) → Int → Mutable s (Collection e) → ST s Bool 
--          | Mutable s (List e) → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  addAllα ∷ Mutable s (List e) → Int → Mutable s (Collection e) → ST s Bool 
--  native addAll  overloads addAll 
--  addAllβ ∷ Mutable s (List e) → Mutable s (Collection e) → ST s Bool 
--  native addAll  overloads addAll 
--  addα ∷ Mutable s (List e) → e → ST s Bool 
--  native add  overloads add 
--  addβ ∷ Mutable s (List e) → Int → e → ST s () 
--  native add  overloads add 
--  clear ∷ Mutable s (List e) → ST s () 
--  native clear 
--  contains ∷ Mutable s (List e) → a → ST s Bool 
--  native contains 
--  containsAll ∷ Mutable s (List e) → Mutable s (Collection a) → ST s Bool 
--  native containsAll 
--  equals ∷ Mutable s (List e) → a → ST s Bool 
--  native equals 
--  get ∷ Mutable s (List e) → Int → ST s e 
--  native get 
--  hashCode ∷ Mutable s (List e) → ST s Int 
--  native hashCode 
--  indexOf ∷ Mutable s (List e) → a → ST s Int 
--  native indexOf 
--  isEmpty ∷ Mutable s (List e) → ST s Bool 
--  native isEmpty 
--  iterator ∷ Mutable s (List e) → STMutable s (Iterator e) 
--  native iterator 
--  lastIndexOf ∷ Mutable s (List e) → a → ST s Int 
--  native lastIndexOf 
--  listIterator ∷ Mutable s (List e) → STMutable s (ListIterator e) 
--                | Mutable s (List e) → Int → STMutable s (ListIterator e) 
--  native listIterator 
--  listIteratorα ∷ Mutable s (List e) → STMutable s (ListIterator e) 
--  native listIterator  overloads listIterator 
--  listIteratorβ ∷ Mutable s (List e) → Int → STMutable s (ListIterator e) 
--  native listIterator  overloads listIterator 
--  remove ∷ Mutable s (List e) → a → ST s Bool 
--          | Mutable s (List e) → Int → ST s e 
--  native remove 
--  removeAll ∷ Mutable s (List e) → Mutable s (Collection a) → ST s Bool 
--  native removeAll 
--  removeα ∷ Mutable s (List e) → a → ST s Bool 
--  native remove  overloads remove 
--  removeβ ∷ Mutable s (List e) → Int → ST s e 
--  native remove  overloads remove 
--  retainAll ∷ Mutable s (List e) → Mutable s (Collection a) → ST s Bool 
--  native retainAll 
--  set ∷ Mutable s (List e) → Int → e → ST s e 
--  native set 
--  size ∷ Mutable s (List e) → ST s Int 
--  native size 
--  subList ∷ Mutable s (List e) → Int → Int → STMutable s (List e) 
--  native subList 
--  toArray ∷ Mutable s (List e) → STMutable s (JArray Object) 
--           | Mutable s (List e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray 
--  toArrayα ∷ Mutable s (List e) → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toArrayβ ∷ Mutable s (List e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray  overloads toArray 

@url http://www.frege-lang.org/doc/frege/java/Util#List
data List e 


@url http://www.frege-lang.org/doc/frege/java/Util#List.add
add ∷ Mutable s (List e) → e → ST s Bool 
     | Mutable s (List e) → Int → e → ST s () 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#List.addAll
addAll ∷ Mutable s (List e) → Int → Mutable s (Collection e) → ST s Bool 
        | Mutable s (List e) → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#List.addAllα
addAllα ∷ Mutable s (List e) → Int → Mutable s (Collection e) → ST s Bool 
native addAll  overloads addAll


@url http://www.frege-lang.org/doc/frege/java/Util#List.addAllβ
addAllβ ∷ Mutable s (List e) → Mutable s (Collection e) → ST s Bool 
native addAll  overloads addAll


@url http://www.frege-lang.org/doc/frege/java/Util#List.addα
addα ∷ Mutable s (List e) → e → ST s Bool 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#List.addβ
addβ ∷ Mutable s (List e) → Int → e → ST s () 
native add  overloads add


@url http://www.frege-lang.org/doc/frege/java/Util#List.clear
clear ∷ Mutable s (List e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#List.contains
contains ∷ Mutable s (List e) → a → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#List.containsAll
containsAll ∷ Mutable s (List e) → Mutable s (Collection a) → ST s Bool 
native containsAll


@url http://www.frege-lang.org/doc/frege/java/Util#List.equals
equals ∷ Mutable s (List e) → a → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#List.get
get ∷ Mutable s (List e) → Int → ST s e 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#List.hashCode
hashCode ∷ Mutable s (List e) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#List.indexOf
indexOf ∷ Mutable s (List e) → a → ST s Int 
native indexOf


@url http://www.frege-lang.org/doc/frege/java/Util#List.isEmpty
isEmpty ∷ Mutable s (List e) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#List.iterator
iterator ∷ Mutable s (List e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#List.lastIndexOf
lastIndexOf ∷ Mutable s (List e) → a → ST s Int 
native lastIndexOf


@url http://www.frege-lang.org/doc/frege/java/Util#List.listIterator
listIterator ∷ Mutable s (List e) → STMutable s (ListIterator e) 
              | Mutable s (List e) → Int → STMutable s (ListIterator e) 
native listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#List.listIteratorα
listIteratorα ∷ Mutable s (List e) → STMutable s (ListIterator e) 
native listIterator  overloads listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#List.listIteratorβ
listIteratorβ ∷ Mutable s (List e) → Int → STMutable s (ListIterator e) 
native listIterator  overloads listIterator


@url http://www.frege-lang.org/doc/frege/java/Util#List.remove
remove ∷ Mutable s (List e) → a → ST s Bool 
        | Mutable s (List e) → Int → ST s e 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#List.removeAll
removeAll ∷ Mutable s (List e) → Mutable s (Collection a) → ST s Bool 
native removeAll


@url http://www.frege-lang.org/doc/frege/java/Util#List.removeα
removeα ∷ Mutable s (List e) → a → ST s Bool 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#List.removeβ
removeβ ∷ Mutable s (List e) → Int → ST s e 
native remove  overloads remove


@url http://www.frege-lang.org/doc/frege/java/Util#List.retainAll
retainAll ∷ Mutable s (List e) → Mutable s (Collection a) → ST s Bool 
native retainAll


@url http://www.frege-lang.org/doc/frege/java/Util#List.set
set ∷ Mutable s (List e) → Int → e → ST s e 
native set


@url http://www.frege-lang.org/doc/frege/java/Util#List.size
size ∷ Mutable s (List e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#List.subList
subList ∷ Mutable s (List e) → Int → Int → STMutable s (List e) 
native subList


@url http://www.frege-lang.org/doc/frege/java/Util#List.toArray
toArray ∷ Mutable s (List e) → STMutable s (JArray Object) 
         | Mutable s (List e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray


@url http://www.frege-lang.org/doc/frege/java/Util#List.toArrayα
toArrayα ∷ Mutable s (List e) → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#List.toArrayβ
toArrayβ ∷ Mutable s (List e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray  overloads toArray

-- | Builder is used to build instances of Locale from values configured by the setters. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  addUnicodeLocaleAttribute ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
--  native addUnicodeLocaleAttribute 
--  build ∷ Mutable s LocaleBuilder → ST s Locale 
--  native build 
--  clear ∷ Mutable s LocaleBuilder → STMutable s LocaleBuilder 
--  native clear 
--  clearExtensions ∷ Mutable s LocaleBuilder → STMutable s LocaleBuilder 
--  native clearExtensions 
--  new ∷ () → STMutable s LocaleBuilder 
--  native new 
--  removeUnicodeLocaleAttribute ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
--  native removeUnicodeLocaleAttribute 
--  setExtension ∷ Mutable s LocaleBuilder → Char → String → STMutable s LocaleBuilder 
--  native setExtension 
--  setLanguage ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
--  native setLanguage 
--  setLanguageTag ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
--  native setLanguageTag 
--  setLocale ∷ Mutable s LocaleBuilder → Locale → STMutable s LocaleBuilder 
--  native setLocale 
--  setRegion ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
--  native setRegion 
--  setScript ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
--  native setScript 
--  setUnicodeLocaleKeyword ∷ Mutable s LocaleBuilder → String → String → STMutable s LocaleBuilder 
--  native setUnicodeLocaleKeyword 
--  setVariant ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
--  native setVariant 

@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder
data LocaleBuilder 


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.addUnicodeLocaleAttribute
addUnicodeLocaleAttribute ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
native addUnicodeLocaleAttribute


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.build
build ∷ Mutable s LocaleBuilder → ST s Locale 
native build


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.clear
clear ∷ Mutable s LocaleBuilder → STMutable s LocaleBuilder 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.clearExtensions
clearExtensions ∷ Mutable s LocaleBuilder → STMutable s LocaleBuilder 
native clearExtensions


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder._new
new ∷ () → STMutable s LocaleBuilder 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.removeUnicodeLocaleAttribute
removeUnicodeLocaleAttribute ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
native removeUnicodeLocaleAttribute


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.setExtension
setExtension ∷ Mutable s LocaleBuilder → Char → String → STMutable s LocaleBuilder 
native setExtension


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.setLanguage
setLanguage ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
native setLanguage


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.setLanguageTag
setLanguageTag ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
native setLanguageTag


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.setLocale
setLocale ∷ Mutable s LocaleBuilder → Locale → STMutable s LocaleBuilder 
native setLocale


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.setRegion
setRegion ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
native setRegion


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.setScript
setScript ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
native setScript


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.setUnicodeLocaleKeyword
setUnicodeLocaleKeyword ∷ Mutable s LocaleBuilder → String → String → STMutable s LocaleBuilder 
native setUnicodeLocaleKeyword


@url http://www.frege-lang.org/doc/frege/java/Util#LocaleBuilder.setVariant
setVariant ∷ Mutable s LocaleBuilder → String → STMutable s LocaleBuilder 
native setVariant

-- | A collection that contains no duplicate elements. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s (Set e) → e → ST s Bool 
--  native add 
--  addAll ∷ Mutable s (Set e) → Mutable s (Collection e) → ST s Bool 
--  native addAll 
--  clear ∷ Mutable s (Set e) → ST s () 
--  native clear 
--  contains ∷ Mutable s (Set e) → a → ST s Bool 
--  native contains 
--  containsAll ∷ Mutable s (Set e) → Mutable s (Collection a) → ST s Bool 
--  native containsAll 
--  equals ∷ Mutable s (Set e) → a → ST s Bool 
--  native equals 
--  hashCode ∷ Mutable s (Set e) → ST s Int 
--  native hashCode 
--  isEmpty ∷ Mutable s (Set e) → ST s Bool 
--  native isEmpty 
--  iterator ∷ Mutable s (Set e) → STMutable s (Iterator e) 
--  native iterator 
--  remove ∷ Mutable s (Set e) → a → ST s Bool 
--  native remove 
--  removeAll ∷ Mutable s (Set e) → Mutable s (Collection a) → ST s Bool 
--  native removeAll 
--  retainAll ∷ Mutable s (Set e) → Mutable s (Collection a) → ST s Bool 
--  native retainAll 
--  size ∷ Mutable s (Set e) → ST s Int 
--  native size 
--  toArray ∷ Mutable s (Set e) → STMutable s (JArray Object) 
--           | Mutable s (Set e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray 
--  toArrayα ∷ Mutable s (Set e) → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toArrayβ ∷ Mutable s (Set e) → ArrayOf s Object → STMutable s (JArray Object) 
--  native toArray  overloads toArray 
--  toList ∷ Mutable s (Set e) → ST s [e] 

@url http://www.frege-lang.org/doc/frege/java/Util#Set
data Set e 


@url http://www.frege-lang.org/doc/frege/java/Util#Set.add
add ∷ Mutable s (Set e) → e → ST s Bool 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#Set.addAll
addAll ∷ Mutable s (Set e) → Mutable s (Collection e) → ST s Bool 
native addAll


@url http://www.frege-lang.org/doc/frege/java/Util#Set.clear
clear ∷ Mutable s (Set e) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#Set.contains
contains ∷ Mutable s (Set e) → a → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#Set.containsAll
containsAll ∷ Mutable s (Set e) → Mutable s (Collection a) → ST s Bool 
native containsAll


@url http://www.frege-lang.org/doc/frege/java/Util#Set.equals
equals ∷ Mutable s (Set e) → a → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#Set.hashCode
hashCode ∷ Mutable s (Set e) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Set.isEmpty
isEmpty ∷ Mutable s (Set e) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#Set.iterator
iterator ∷ Mutable s (Set e) → STMutable s (Iterator e) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#Set.remove
remove ∷ Mutable s (Set e) → a → ST s Bool 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#Set.removeAll
removeAll ∷ Mutable s (Set e) → Mutable s (Collection a) → ST s Bool 
native removeAll


@url http://www.frege-lang.org/doc/frege/java/Util#Set.retainAll
retainAll ∷ Mutable s (Set e) → Mutable s (Collection a) → ST s Bool 
native retainAll


@url http://www.frege-lang.org/doc/frege/java/Util#Set.size
size ∷ Mutable s (Set e) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#Set.toArray
toArray ∷ Mutable s (Set e) → STMutable s (JArray Object) 
         | Mutable s (Set e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray


@url http://www.frege-lang.org/doc/frege/java/Util#Set.toArrayα
toArrayα ∷ Mutable s (Set e) → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#Set.toArrayβ
toArrayβ ∷ Mutable s (Set e) → ArrayOf s Object → STMutable s (JArray Object) 
native toArray  overloads toArray


@url http://www.frege-lang.org/doc/frege/java/Util#Set.toList
toList ∷ Mutable s (Set e) → ST s [e]

-- | This class contains various methods for manipulating arrays (such as sorting and searching). 
--   More: Javadoc 
--   Member Functions
--  ----------------
--  asList ∷ ArrayOf s t → STMutable s (List t) 
--  native java.util.Arrays.asList 
--  binarySearch ∷ ArrayOf s Char → Int → Int → Char → ST s Int 
--                | ArrayOf s Char → Char → ST s Int 
--                | ArrayOf s Byte → Byte → ST s Int 
--                | ArrayOf s Byte → Int → Int → Byte → ST s Int 
--                | ArrayOf s Double → Double → ST s Int 
--                | ArrayOf s Int → Int → ST s Int 
--                | ArrayOf s Int → Int → Int → Int → ST s Int 
--                | ArrayOf s Long → Int → Int → Long → ST s Int 
--                | ArrayOf s Short → Short → ST s Int 
--                | ArrayOf s Short → Int → Int → Short → ST s Int 
--                | ArrayOf s Long → Long → ST s Int 
--                | ArrayOf s Float → Int → Int → Float → ST s Int 
--                | ArrayOf s Object → Int → Int → t → Comparator t → ST s Int 
--                | ArrayOf s Object → Int → Int → Object → ST s Int 
--                | ArrayOf s Object → t → Comparator t → ST s Int 
--                | ArrayOf s Double → Int → Int → Double → ST s Int 
--                | ArrayOf s Object → Object → ST s Int 
--                | ArrayOf s Float → Float → ST s Int 
--  native java.util.Arrays.binarySearch 
--  binarySearchß ∷ ArrayOf s Short → Int → Int → Short → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchα ∷ ArrayOf s Char → Int → Int → Char → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchβ ∷ ArrayOf s Char → Char → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchγ ∷ ArrayOf s Byte → Byte → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchδ ∷ ArrayOf s Byte → Int → Int → Byte → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchε ∷ ArrayOf s Double → Double → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchζ ∷ ArrayOf s Int → Int → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchη ∷ ArrayOf s Int → Int → Int → Int → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchθ ∷ ArrayOf s Long → Int → Int → Long → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchι ∷ ArrayOf s Short → Short → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchκ ∷ ArrayOf s Long → Long → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchλ ∷ ArrayOf s Float → Int → Int → Float → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchμ ∷ ArrayOf s Object → Int → Int → t → Comparator t → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchν ∷ ArrayOf s Object → Int → Int → Object → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchξ ∷ ArrayOf s Object → t → Comparator t → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchο ∷ ArrayOf s Double → Int → Int → Double → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchπ ∷ ArrayOf s Object → Object → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  binarySearchρ ∷ ArrayOf s Float → Float → ST s Int 
--  native java.util.Arrays.binarySearch  overloads binarySearch 
--  copyOf ∷ ArrayOf s Int → Int → STMutable s (JArray Int) 
--          | ArrayOf s Short → Int → STMutable s (JArray Short) 
--          | ArrayOf s Long → Int → STMutable s (JArray Long) 
--          | ArrayOf s Byte → Int → STMutable s (JArray Byte) 
--          | ArrayOf s Object → Int → Class (JArray Object) → STMutable s (JArray Object) 
--          | ArrayOf s Object → Int → STMutable s (JArray Object) 
--          | ArrayOf s Bool → Int → STMutable s (JArray Bool) 
--          | ArrayOf s Double → Int → STMutable s (JArray Double) 
--          | ArrayOf s Float → Int → STMutable s (JArray Float) 
--          | ArrayOf s Char → Int → STMutable s (JArray Char) 
--  native java.util.Arrays.copyOf 
--  copyOfRange ∷ ArrayOf s Bool → Int → Int → STMutable s (JArray Bool) 
--               | ArrayOf s Double → Int → Int → STMutable s (JArray Double) 
--               | ArrayOf s Long → Int → Int → STMutable s (JArray Long) 
--               | ArrayOf s Float → Int → Int → STMutable s (JArray Float) 
--               | ArrayOf s Char → Int → Int → STMutable s (JArray Char) 
--               | ArrayOf s Object → Int → Int → STMutable s (JArray Object) 
--               | ArrayOf s Object → Int → Int → Class (JArray Object) → STMutable s (JArray Object) 
--               | ArrayOf s Byte → Int → Int → STMutable s (JArray Byte) 
--               | ArrayOf s Short → Int → Int → STMutable s (JArray Short) 
--               | ArrayOf s Int → Int → Int → STMutable s (JArray Int) 
--  native java.util.Arrays.copyOfRange 
--  copyOfRangeß ∷ ArrayOf s Int → Int → Int → STMutable s (JArray Int) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfRangeα ∷ ArrayOf s Bool → Int → Int → STMutable s (JArray Bool) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfRangeβ ∷ ArrayOf s Double → Int → Int → STMutable s (JArray Double) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfRangeγ ∷ ArrayOf s Long → Int → Int → STMutable s (JArray Long) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfRangeδ ∷ ArrayOf s Float → Int → Int → STMutable s (JArray Float) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfRangeε ∷ ArrayOf s Char → Int → Int → STMutable s (JArray Char) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfRangeζ ∷ ArrayOf s Object → Int → Int → STMutable s (JArray Object) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfRangeη ∷ ArrayOf s Object → Int → Int → Class (JArray Object) → STMutable s (JArray Object) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfRangeθ ∷ ArrayOf s Byte → Int → Int → STMutable s (JArray Byte) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfRangeι ∷ ArrayOf s Short → Int → Int → STMutable s (JArray Short) 
--  native java.util.Arrays.copyOfRange  overloads copyOfRange 
--  copyOfß ∷ ArrayOf s Char → Int → STMutable s (JArray Char) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  copyOfα ∷ ArrayOf s Int → Int → STMutable s (JArray Int) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  copyOfβ ∷ ArrayOf s Short → Int → STMutable s (JArray Short) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  copyOfγ ∷ ArrayOf s Long → Int → STMutable s (JArray Long) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  copyOfδ ∷ ArrayOf s Byte → Int → STMutable s (JArray Byte) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  copyOfε ∷ ArrayOf s Object → Int → Class (JArray Object) → STMutable s (JArray Object) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  copyOfζ ∷ ArrayOf s Object → Int → STMutable s (JArray Object) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  copyOfη ∷ ArrayOf s Bool → Int → STMutable s (JArray Bool) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  copyOfθ ∷ ArrayOf s Double → Int → STMutable s (JArray Double) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  copyOfι ∷ ArrayOf s Float → Int → STMutable s (JArray Float) 
--  native java.util.Arrays.copyOf  overloads copyOf 
--  deepEquals ∷ ArrayOf s Object → ArrayOf s Object → ST s Bool 
--  native java.util.Arrays.deepEquals 
--  deepHashCode ∷ ArrayOf s Object → ST s Int 
--  native java.util.Arrays.deepHashCode 
--  deepToString ∷ ArrayOf s Object → ST s String 
--  native java.util.Arrays.deepToString 
--  equals ∷ ArrayOf s Char → ArrayOf s Char → ST s Bool 
--          | ArrayOf s Short → ArrayOf s Short → ST s Bool 
--          | ArrayOf s Int → ArrayOf s Int → ST s Bool 
--          | ArrayOf s Object → ArrayOf s Object → ST s Bool 
--          | ArrayOf s Float → ArrayOf s Float → ST s Bool 
--          | ArrayOf s Double → ArrayOf s Double → ST s Bool 
--          | ArrayOf s Bool → ArrayOf s Bool → ST s Bool 
--          | ArrayOf s Byte → ArrayOf s Byte → ST s Bool 
--          | ArrayOf s Long → ArrayOf s Long → ST s Bool 
--  native java.util.Arrays.equals 
--  equalsα ∷ ArrayOf s Char → ArrayOf s Char → ST s Bool 
--  native java.util.Arrays.equals  overloads equals 
--  equalsβ ∷ ArrayOf s Short → ArrayOf s Short → ST s Bool 
--  native java.util.Arrays.equals  overloads equals 
--  equalsγ ∷ ArrayOf s Int → ArrayOf s Int → ST s Bool 
--  native java.util.Arrays.equals  overloads equals 
--  equalsδ ∷ ArrayOf s Object → ArrayOf s Object → ST s Bool 
--  native java.util.Arrays.equals  overloads equals 
--  equalsε ∷ ArrayOf s Float → ArrayOf s Float → ST s Bool 
--  native java.util.Arrays.equals  overloads equals 
--  equalsζ ∷ ArrayOf s Double → ArrayOf s Double → ST s Bool 
--  native java.util.Arrays.equals  overloads equals 
--  equalsη ∷ ArrayOf s Bool → ArrayOf s Bool → ST s Bool 
--  native java.util.Arrays.equals  overloads equals 
--  equalsθ ∷ ArrayOf s Byte → ArrayOf s Byte → ST s Bool 
--  native java.util.Arrays.equals  overloads equals 
--  equalsι ∷ ArrayOf s Long → ArrayOf s Long → ST s Bool 
--  native java.util.Arrays.equals  overloads equals 
--  fill ∷ ArrayOf s Short → Int → Int → Short → ST s () 
--        | ArrayOf s Int → Int → ST s () 
--        | ArrayOf s Int → Int → Int → Int → ST s () 
--        | ArrayOf s Short → Short → ST s () 
--        | ArrayOf s Double → Double → ST s () 
--        | ArrayOf s Double → Int → Int → Double → ST s () 
--        | ArrayOf s Float → Float → ST s () 
--        | ArrayOf s Float → Int → Int → Float → ST s () 
--        | ArrayOf s Object → Object → ST s () 
--        | ArrayOf s Object → Int → Int → Object → ST s () 
--        | ArrayOf s Char → Char → ST s () 
--        | ArrayOf s Char → Int → Int → Char → ST s () 
--        | ArrayOf s Byte → Byte → ST s () 
--        | ArrayOf s Byte → Int → Int → Byte → ST s () 
--        | ArrayOf s Bool → Bool → ST s () 
--        | ArrayOf s Bool → Int → Int → Bool → ST s () 
--        | ArrayOf s Long → Long → ST s () 
--        | ArrayOf s Long → Int → Int → Long → ST s () 
--  native java.util.Arrays.fill 
--  fillß ∷ ArrayOf s Object → Int → Int → Object → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillα ∷ ArrayOf s Short → Int → Int → Short → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillβ ∷ ArrayOf s Int → Int → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillγ ∷ ArrayOf s Int → Int → Int → Int → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillδ ∷ ArrayOf s Short → Short → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillε ∷ ArrayOf s Double → Double → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillζ ∷ ArrayOf s Double → Int → Int → Double → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillη ∷ ArrayOf s Float → Float → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillθ ∷ ArrayOf s Float → Int → Int → Float → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillι ∷ ArrayOf s Object → Object → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillκ ∷ ArrayOf s Char → Char → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillλ ∷ ArrayOf s Char → Int → Int → Char → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillμ ∷ ArrayOf s Byte → Byte → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillν ∷ ArrayOf s Byte → Int → Int → Byte → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillξ ∷ ArrayOf s Bool → Bool → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillο ∷ ArrayOf s Bool → Int → Int → Bool → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillπ ∷ ArrayOf s Long → Long → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  fillρ ∷ ArrayOf s Long → Int → Int → Long → ST s () 
--  native java.util.Arrays.fill  overloads fill 
--  hashCode ∷ ArrayOf s Byte → ST s Int 
--            | ArrayOf s Bool → ST s Int 
--            | ArrayOf s Float → ST s Int 
--            | ArrayOf s Double → ST s Int 
--            | ArrayOf s Object → ST s Int 
--            | ArrayOf s Long → ST s Int 
--            | ArrayOf s Int → ST s Int 
--            | ArrayOf s Short → ST s Int 
--            | ArrayOf s Char → ST s Int 
--  native java.util.Arrays.hashCode 
--  hashCodeα ∷ ArrayOf s Byte → ST s Int 
--  native java.util.Arrays.hashCode  overloads hashCode 
--  hashCodeβ ∷ ArrayOf s Bool → ST s Int 
--  native java.util.Arrays.hashCode  overloads hashCode 
--  hashCodeγ ∷ ArrayOf s Float → ST s Int 
--  native java.util.Arrays.hashCode  overloads hashCode 
--  hashCodeδ ∷ ArrayOf s Double → ST s Int 
--  native java.util.Arrays.hashCode  overloads hashCode 
--  hashCodeε ∷ ArrayOf s Object → ST s Int 
--  native java.util.Arrays.hashCode  overloads hashCode 
--  hashCodeζ ∷ ArrayOf s Long → ST s Int 
--  native java.util.Arrays.hashCode  overloads hashCode 
--  hashCodeη ∷ ArrayOf s Int → ST s Int 
--  native java.util.Arrays.hashCode  overloads hashCode 
--  hashCodeθ ∷ ArrayOf s Short → ST s Int 
--  native java.util.Arrays.hashCode  overloads hashCode 
--  hashCodeι ∷ ArrayOf s Char → ST s Int 
--  native java.util.Arrays.hashCode  overloads hashCode 
--  sort ∷ ArrayOf s Object → Int → Int → ST s () 
--        | ArrayOf s Float → ST s () 
--        | ArrayOf s Double → ST s () 
--        | ArrayOf s Double → Int → Int → ST s () 
--        | ArrayOf s Float → Int → Int → ST s () 
--        | ArrayOf s Object → ST s () 
--        | ArrayOf s Short → Int → Int → ST s () 
--        | ArrayOf s Short → ST s () 
--        | ArrayOf s Long → Int → Int → ST s () 
--        | ArrayOf s Long → ST s () 
--        | ArrayOf s Byte → Int → Int → ST s () 
--        | ArrayOf s Byte → ST s () 
--        | ArrayOf s Char → Int → Int → ST s () 
--        | ArrayOf s Char → ST s () 
--        | ArrayOf s Int → Int → Int → ST s () 
--        | ArrayOf s Object → Int → Int → Comparator t → ST s () 
--        | ArrayOf s Object → Comparator t → ST s () 
--        | ArrayOf s Int → ST s () 
--  native java.util.Arrays.sort 
--  sortß ∷ ArrayOf s Long → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortα ∷ ArrayOf s Object → Int → Int → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortβ ∷ ArrayOf s Float → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortγ ∷ ArrayOf s Double → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortδ ∷ ArrayOf s Double → Int → Int → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortε ∷ ArrayOf s Float → Int → Int → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortζ ∷ ArrayOf s Object → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortη ∷ ArrayOf s Short → Int → Int → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortθ ∷ ArrayOf s Short → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortι ∷ ArrayOf s Long → Int → Int → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortκ ∷ ArrayOf s Byte → Int → Int → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortλ ∷ ArrayOf s Byte → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortμ ∷ ArrayOf s Char → Int → Int → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortν ∷ ArrayOf s Char → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortξ ∷ ArrayOf s Int → Int → Int → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortο ∷ ArrayOf s Object → Int → Int → Comparator t → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortπ ∷ ArrayOf s Object → Comparator t → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  sortρ ∷ ArrayOf s Int → ST s () 
--  native java.util.Arrays.sort  overloads sort 
--  toString ∷ ArrayOf s Bool → ST s String 
--            | ArrayOf s Float → ST s String 
--            | ArrayOf s Double → ST s String 
--            | ArrayOf s Object → ST s String 
--            | ArrayOf s Long → ST s String 
--            | ArrayOf s Int → ST s String 
--            | ArrayOf s Short → ST s String 
--            | ArrayOf s Char → ST s String 
--            | ArrayOf s Byte → ST s String 
--  native java.util.Arrays.toString 
--  toStringα ∷ ArrayOf s Bool → ST s String 
--  native java.util.Arrays.toString  overloads toString 
--  toStringβ ∷ ArrayOf s Float → ST s String 
--  native java.util.Arrays.toString  overloads toString 
--  toStringγ ∷ ArrayOf s Double → ST s String 
--  native java.util.Arrays.toString  overloads toString 
--  toStringδ ∷ ArrayOf s Object → ST s String 
--  native java.util.Arrays.toString  overloads toString 
--  toStringε ∷ ArrayOf s Long → ST s String 
--  native java.util.Arrays.toString  overloads toString 
--  toStringζ ∷ ArrayOf s Int → ST s String 
--  native java.util.Arrays.toString  overloads toString 
--  toStringη ∷ ArrayOf s Short → ST s String 
--  native java.util.Arrays.toString  overloads toString 
--  toStringθ ∷ ArrayOf s Char → ST s String 
--  native java.util.Arrays.toString  overloads toString 
--  toStringι ∷ ArrayOf s Byte → ST s String 
--  native java.util.Arrays.toString  overloads toString 

@url http://www.frege-lang.org/doc/frege/java/Util#Arrays
data Arrays 


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.asList
asList ∷ ArrayOf s t → STMutable s (List t) 
native java.util.Arrays.asList


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearch
binarySearch ∷ ArrayOf s Char → Int → Int → Char → ST s Int 
              | ArrayOf s Char → Char → ST s Int 
              | ArrayOf s Byte → Byte → ST s Int 
              | ArrayOf s Byte → Int → Int → Byte → ST s Int 
              | ArrayOf s Double → Double → ST s Int 
              | ArrayOf s Int → Int → ST s Int 
              | ArrayOf s Int → Int → Int → Int → ST s Int 
              | ArrayOf s Long → Int → Int → Long → ST s Int 
              | ArrayOf s Short → Short → ST s Int 
              | ArrayOf s Short → Int → Int → Short → ST s Int 
              | ArrayOf s Long → Long → ST s Int 
              | ArrayOf s Float → Int → Int → Float → ST s Int 
              | ArrayOf s Object → Int → Int → t → Comparator t → ST s Int 
              | ArrayOf s Object → Int → Int → Object → ST s Int 
              | ArrayOf s Object → t → Comparator t → ST s Int 
              | ArrayOf s Double → Int → Int → Double → ST s Int 
              | ArrayOf s Object → Object → ST s Int 
              | ArrayOf s Float → Float → ST s Int 
native java.util.Arrays.binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchß
binarySearchß ∷ ArrayOf s Short → Int → Int → Short → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchα
binarySearchα ∷ ArrayOf s Char → Int → Int → Char → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchβ
binarySearchβ ∷ ArrayOf s Char → Char → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchγ
binarySearchγ ∷ ArrayOf s Byte → Byte → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchδ
binarySearchδ ∷ ArrayOf s Byte → Int → Int → Byte → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchε
binarySearchε ∷ ArrayOf s Double → Double → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchζ
binarySearchζ ∷ ArrayOf s Int → Int → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchη
binarySearchη ∷ ArrayOf s Int → Int → Int → Int → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchθ
binarySearchθ ∷ ArrayOf s Long → Int → Int → Long → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchι
binarySearchι ∷ ArrayOf s Short → Short → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchκ
binarySearchκ ∷ ArrayOf s Long → Long → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchλ
binarySearchλ ∷ ArrayOf s Float → Int → Int → Float → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchμ
binarySearchμ ∷ ArrayOf s Object → Int → Int → t → Comparator t → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchν
binarySearchν ∷ ArrayOf s Object → Int → Int → Object → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchξ
binarySearchξ ∷ ArrayOf s Object → t → Comparator t → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchο
binarySearchο ∷ ArrayOf s Double → Int → Int → Double → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchπ
binarySearchπ ∷ ArrayOf s Object → Object → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.binarySearchρ
binarySearchρ ∷ ArrayOf s Float → Float → ST s Int 
native java.util.Arrays.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOf
copyOf ∷ ArrayOf s Int → Int → STMutable s (JArray Int) 
        | ArrayOf s Short → Int → STMutable s (JArray Short) 
        | ArrayOf s Long → Int → STMutable s (JArray Long) 
        | ArrayOf s Byte → Int → STMutable s (JArray Byte) 
        | ArrayOf s Object → Int → Class (JArray Object) → STMutable s (JArray Object) 
        | ArrayOf s Object → Int → STMutable s (JArray Object) 
        | ArrayOf s Bool → Int → STMutable s (JArray Bool) 
        | ArrayOf s Double → Int → STMutable s (JArray Double) 
        | ArrayOf s Float → Int → STMutable s (JArray Float) 
        | ArrayOf s Char → Int → STMutable s (JArray Char) 
native java.util.Arrays.copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRange
copyOfRange ∷ ArrayOf s Bool → Int → Int → STMutable s (JArray Bool) 
             | ArrayOf s Double → Int → Int → STMutable s (JArray Double) 
             | ArrayOf s Long → Int → Int → STMutable s (JArray Long) 
             | ArrayOf s Float → Int → Int → STMutable s (JArray Float) 
             | ArrayOf s Char → Int → Int → STMutable s (JArray Char) 
             | ArrayOf s Object → Int → Int → STMutable s (JArray Object) 
             | ArrayOf s Object → Int → Int → Class (JArray Object) → STMutable s (JArray Object) 
             | ArrayOf s Byte → Int → Int → STMutable s (JArray Byte) 
             | ArrayOf s Short → Int → Int → STMutable s (JArray Short) 
             | ArrayOf s Int → Int → Int → STMutable s (JArray Int) 
native java.util.Arrays.copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeß
copyOfRangeß ∷ ArrayOf s Int → Int → Int → STMutable s (JArray Int) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeα
copyOfRangeα ∷ ArrayOf s Bool → Int → Int → STMutable s (JArray Bool) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeβ
copyOfRangeβ ∷ ArrayOf s Double → Int → Int → STMutable s (JArray Double) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeγ
copyOfRangeγ ∷ ArrayOf s Long → Int → Int → STMutable s (JArray Long) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeδ
copyOfRangeδ ∷ ArrayOf s Float → Int → Int → STMutable s (JArray Float) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeε
copyOfRangeε ∷ ArrayOf s Char → Int → Int → STMutable s (JArray Char) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeζ
copyOfRangeζ ∷ ArrayOf s Object → Int → Int → STMutable s (JArray Object) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeη
copyOfRangeη ∷ ArrayOf s Object → Int → Int → Class (JArray Object) → STMutable s (JArray Object) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeθ
copyOfRangeθ ∷ ArrayOf s Byte → Int → Int → STMutable s (JArray Byte) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfRangeι
copyOfRangeι ∷ ArrayOf s Short → Int → Int → STMutable s (JArray Short) 
native java.util.Arrays.copyOfRange  overloads copyOfRange


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfß
copyOfß ∷ ArrayOf s Char → Int → STMutable s (JArray Char) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfα
copyOfα ∷ ArrayOf s Int → Int → STMutable s (JArray Int) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfβ
copyOfβ ∷ ArrayOf s Short → Int → STMutable s (JArray Short) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfγ
copyOfγ ∷ ArrayOf s Long → Int → STMutable s (JArray Long) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfδ
copyOfδ ∷ ArrayOf s Byte → Int → STMutable s (JArray Byte) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfε
copyOfε ∷ ArrayOf s Object → Int → Class (JArray Object) → STMutable s (JArray Object) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfζ
copyOfζ ∷ ArrayOf s Object → Int → STMutable s (JArray Object) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfη
copyOfη ∷ ArrayOf s Bool → Int → STMutable s (JArray Bool) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfθ
copyOfθ ∷ ArrayOf s Double → Int → STMutable s (JArray Double) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.copyOfι
copyOfι ∷ ArrayOf s Float → Int → STMutable s (JArray Float) 
native java.util.Arrays.copyOf  overloads copyOf


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.deepEquals
deepEquals ∷ ArrayOf s Object → ArrayOf s Object → ST s Bool 
native java.util.Arrays.deepEquals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.deepHashCode
deepHashCode ∷ ArrayOf s Object → ST s Int 
native java.util.Arrays.deepHashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.deepToString
deepToString ∷ ArrayOf s Object → ST s String 
native java.util.Arrays.deepToString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equals
equals ∷ ArrayOf s Char → ArrayOf s Char → ST s Bool 
        | ArrayOf s Short → ArrayOf s Short → ST s Bool 
        | ArrayOf s Int → ArrayOf s Int → ST s Bool 
        | ArrayOf s Object → ArrayOf s Object → ST s Bool 
        | ArrayOf s Float → ArrayOf s Float → ST s Bool 
        | ArrayOf s Double → ArrayOf s Double → ST s Bool 
        | ArrayOf s Bool → ArrayOf s Bool → ST s Bool 
        | ArrayOf s Byte → ArrayOf s Byte → ST s Bool 
        | ArrayOf s Long → ArrayOf s Long → ST s Bool 
native java.util.Arrays.equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equalsα
equalsα ∷ ArrayOf s Char → ArrayOf s Char → ST s Bool 
native java.util.Arrays.equals  overloads equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equalsβ
equalsβ ∷ ArrayOf s Short → ArrayOf s Short → ST s Bool 
native java.util.Arrays.equals  overloads equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equalsγ
equalsγ ∷ ArrayOf s Int → ArrayOf s Int → ST s Bool 
native java.util.Arrays.equals  overloads equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equalsδ
equalsδ ∷ ArrayOf s Object → ArrayOf s Object → ST s Bool 
native java.util.Arrays.equals  overloads equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equalsε
equalsε ∷ ArrayOf s Float → ArrayOf s Float → ST s Bool 
native java.util.Arrays.equals  overloads equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equalsζ
equalsζ ∷ ArrayOf s Double → ArrayOf s Double → ST s Bool 
native java.util.Arrays.equals  overloads equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equalsη
equalsη ∷ ArrayOf s Bool → ArrayOf s Bool → ST s Bool 
native java.util.Arrays.equals  overloads equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equalsθ
equalsθ ∷ ArrayOf s Byte → ArrayOf s Byte → ST s Bool 
native java.util.Arrays.equals  overloads equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.equalsι
equalsι ∷ ArrayOf s Long → ArrayOf s Long → ST s Bool 
native java.util.Arrays.equals  overloads equals


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fill
fill ∷ ArrayOf s Short → Int → Int → Short → ST s () 
      | ArrayOf s Int → Int → ST s () 
      | ArrayOf s Int → Int → Int → Int → ST s () 
      | ArrayOf s Short → Short → ST s () 
      | ArrayOf s Double → Double → ST s () 
      | ArrayOf s Double → Int → Int → Double → ST s () 
      | ArrayOf s Float → Float → ST s () 
      | ArrayOf s Float → Int → Int → Float → ST s () 
      | ArrayOf s Object → Object → ST s () 
      | ArrayOf s Object → Int → Int → Object → ST s () 
      | ArrayOf s Char → Char → ST s () 
      | ArrayOf s Char → Int → Int → Char → ST s () 
      | ArrayOf s Byte → Byte → ST s () 
      | ArrayOf s Byte → Int → Int → Byte → ST s () 
      | ArrayOf s Bool → Bool → ST s () 
      | ArrayOf s Bool → Int → Int → Bool → ST s () 
      | ArrayOf s Long → Long → ST s () 
      | ArrayOf s Long → Int → Int → Long → ST s () 
native java.util.Arrays.fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillß
fillß ∷ ArrayOf s Object → Int → Int → Object → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillα
fillα ∷ ArrayOf s Short → Int → Int → Short → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillβ
fillβ ∷ ArrayOf s Int → Int → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillγ
fillγ ∷ ArrayOf s Int → Int → Int → Int → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillδ
fillδ ∷ ArrayOf s Short → Short → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillε
fillε ∷ ArrayOf s Double → Double → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillζ
fillζ ∷ ArrayOf s Double → Int → Int → Double → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillη
fillη ∷ ArrayOf s Float → Float → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillθ
fillθ ∷ ArrayOf s Float → Int → Int → Float → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillι
fillι ∷ ArrayOf s Object → Object → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillκ
fillκ ∷ ArrayOf s Char → Char → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillλ
fillλ ∷ ArrayOf s Char → Int → Int → Char → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillμ
fillμ ∷ ArrayOf s Byte → Byte → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillν
fillν ∷ ArrayOf s Byte → Int → Int → Byte → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillξ
fillξ ∷ ArrayOf s Bool → Bool → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillο
fillο ∷ ArrayOf s Bool → Int → Int → Bool → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillπ
fillπ ∷ ArrayOf s Long → Long → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.fillρ
fillρ ∷ ArrayOf s Long → Int → Int → Long → ST s () 
native java.util.Arrays.fill  overloads fill


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCode
hashCode ∷ ArrayOf s Byte → ST s Int 
          | ArrayOf s Bool → ST s Int 
          | ArrayOf s Float → ST s Int 
          | ArrayOf s Double → ST s Int 
          | ArrayOf s Object → ST s Int 
          | ArrayOf s Long → ST s Int 
          | ArrayOf s Int → ST s Int 
          | ArrayOf s Short → ST s Int 
          | ArrayOf s Char → ST s Int 
native java.util.Arrays.hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCodeα
hashCodeα ∷ ArrayOf s Byte → ST s Int 
native java.util.Arrays.hashCode  overloads hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCodeβ
hashCodeβ ∷ ArrayOf s Bool → ST s Int 
native java.util.Arrays.hashCode  overloads hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCodeγ
hashCodeγ ∷ ArrayOf s Float → ST s Int 
native java.util.Arrays.hashCode  overloads hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCodeδ
hashCodeδ ∷ ArrayOf s Double → ST s Int 
native java.util.Arrays.hashCode  overloads hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCodeε
hashCodeε ∷ ArrayOf s Object → ST s Int 
native java.util.Arrays.hashCode  overloads hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCodeζ
hashCodeζ ∷ ArrayOf s Long → ST s Int 
native java.util.Arrays.hashCode  overloads hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCodeη
hashCodeη ∷ ArrayOf s Int → ST s Int 
native java.util.Arrays.hashCode  overloads hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCodeθ
hashCodeθ ∷ ArrayOf s Short → ST s Int 
native java.util.Arrays.hashCode  overloads hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.hashCodeι
hashCodeι ∷ ArrayOf s Char → ST s Int 
native java.util.Arrays.hashCode  overloads hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sort
sort ∷ ArrayOf s Object → Int → Int → ST s () 
      | ArrayOf s Float → ST s () 
      | ArrayOf s Double → ST s () 
      | ArrayOf s Double → Int → Int → ST s () 
      | ArrayOf s Float → Int → Int → ST s () 
      | ArrayOf s Object → ST s () 
      | ArrayOf s Short → Int → Int → ST s () 
      | ArrayOf s Short → ST s () 
      | ArrayOf s Long → Int → Int → ST s () 
      | ArrayOf s Long → ST s () 
      | ArrayOf s Byte → Int → Int → ST s () 
      | ArrayOf s Byte → ST s () 
      | ArrayOf s Char → Int → Int → ST s () 
      | ArrayOf s Char → ST s () 
      | ArrayOf s Int → Int → Int → ST s () 
      | ArrayOf s Object → Int → Int → Comparator t → ST s () 
      | ArrayOf s Object → Comparator t → ST s () 
      | ArrayOf s Int → ST s () 
native java.util.Arrays.sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortß
sortß ∷ ArrayOf s Long → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortα
sortα ∷ ArrayOf s Object → Int → Int → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortβ
sortβ ∷ ArrayOf s Float → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortγ
sortγ ∷ ArrayOf s Double → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortδ
sortδ ∷ ArrayOf s Double → Int → Int → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortε
sortε ∷ ArrayOf s Float → Int → Int → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortζ
sortζ ∷ ArrayOf s Object → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortη
sortη ∷ ArrayOf s Short → Int → Int → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortθ
sortθ ∷ ArrayOf s Short → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortι
sortι ∷ ArrayOf s Long → Int → Int → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortκ
sortκ ∷ ArrayOf s Byte → Int → Int → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortλ
sortλ ∷ ArrayOf s Byte → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortμ
sortμ ∷ ArrayOf s Char → Int → Int → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortν
sortν ∷ ArrayOf s Char → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortξ
sortξ ∷ ArrayOf s Int → Int → Int → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortο
sortο ∷ ArrayOf s Object → Int → Int → Comparator t → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortπ
sortπ ∷ ArrayOf s Object → Comparator t → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.sortρ
sortρ ∷ ArrayOf s Int → ST s () 
native java.util.Arrays.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toString
toString ∷ ArrayOf s Bool → ST s String 
          | ArrayOf s Float → ST s String 
          | ArrayOf s Double → ST s String 
          | ArrayOf s Object → ST s String 
          | ArrayOf s Long → ST s String 
          | ArrayOf s Int → ST s String 
          | ArrayOf s Short → ST s String 
          | ArrayOf s Char → ST s String 
          | ArrayOf s Byte → ST s String 
native java.util.Arrays.toString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toStringα
toStringα ∷ ArrayOf s Bool → ST s String 
native java.util.Arrays.toString  overloads toString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toStringβ
toStringβ ∷ ArrayOf s Float → ST s String 
native java.util.Arrays.toString  overloads toString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toStringγ
toStringγ ∷ ArrayOf s Double → ST s String 
native java.util.Arrays.toString  overloads toString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toStringδ
toStringδ ∷ ArrayOf s Object → ST s String 
native java.util.Arrays.toString  overloads toString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toStringε
toStringε ∷ ArrayOf s Long → ST s String 
native java.util.Arrays.toString  overloads toString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toStringζ
toStringζ ∷ ArrayOf s Int → ST s String 
native java.util.Arrays.toString  overloads toString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toStringη
toStringη ∷ ArrayOf s Short → ST s String 
native java.util.Arrays.toString  overloads toString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toStringθ
toStringθ ∷ ArrayOf s Char → ST s String 
native java.util.Arrays.toString  overloads toString


@url http://www.frege-lang.org/doc/frege/java/Util#Arrays.toStringι
toStringι ∷ ArrayOf s Byte → ST s String 
native java.util.Arrays.toString  overloads toString

-- | This class implements a vector of bits that grows as needed. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  and ∷ Mutable s BitSet → Mutable s BitSet → ST s () 
--  native and 
--  andNot ∷ Mutable s BitSet → Mutable s BitSet → ST s () 
--  native andNot 
--  cardinality ∷ Mutable s BitSet → ST s Int 
--  native cardinality 
--  clear ∷ Mutable s BitSet → Int → ST s () 
--         | Mutable s BitSet → Int → Int → ST s () 
--         | Mutable s BitSet → ST s () 
--  native clear 
--  clearα ∷ Mutable s BitSet → Int → ST s () 
--  native clear  overloads clear 
--  clearβ ∷ Mutable s BitSet → Int → Int → ST s () 
--  native clear  overloads clear 
--  clearγ ∷ Mutable s BitSet → ST s () 
--  native clear  overloads clear 
--  clone ∷ Mutable s BitSet → ST s Object 
--  native clone 
--  equals ∷ Mutable s BitSet → Object → ST s Bool 
--  native equals 
--  flip ∷ Mutable s BitSet → Int → Int → ST s () 
--        | Mutable s BitSet → Int → ST s () 
--  native flip 
--  flipα ∷ Mutable s BitSet → Int → Int → ST s () 
--  native flip  overloads flip 
--  flipβ ∷ Mutable s BitSet → Int → ST s () 
--  native flip  overloads flip 
--  get ∷ Mutable s BitSet → Int → Int → STMutable s BitSet 
--       | Mutable s BitSet → Int → ST s Bool 
--  native get 
--  getα ∷ Mutable s BitSet → Int → Int → STMutable s BitSet 
--  native get  overloads get 
--  getβ ∷ Mutable s BitSet → Int → ST s Bool 
--  native get  overloads get 
--  hashCode ∷ Mutable s BitSet → ST s Int 
--  native hashCode 
--  intersects ∷ Mutable s BitSet → Mutable s BitSet → ST s Bool 
--  native intersects 
--  isEmpty ∷ Mutable s BitSet → ST s Bool 
--  native isEmpty 
--  length ∷ Mutable s BitSet → ST s Int 
--  native length 
--  new ∷ Int → STMutable s BitSet 
--       | () → STMutable s BitSet 
--  native new 
--  newα ∷ Int → STMutable s BitSet 
--  native new  overloads new 
--  newβ ∷ () → STMutable s BitSet 
--  native new  overloads new 
--  nextClearBit ∷ Mutable s BitSet → Int → ST s Int 
--  native nextClearBit 
--  nextSetBit ∷ Mutable s BitSet → Int → ST s Int 
--  native nextSetBit 
--  or ∷ Mutable s BitSet → Mutable s BitSet → ST s () 
--  native or 
--  previousClearBit ∷ Mutable s BitSet → Int → ST s Int 
--  native previousClearBit 
--  previousSetBit ∷ Mutable s BitSet → Int → ST s Int 
--  native previousSetBit 
--  set ∷ Mutable s BitSet → Int → ST s () 
--       | Mutable s BitSet → Int → Bool → ST s () 
--       | Mutable s BitSet → Int → Int → ST s () 
--       | Mutable s BitSet → Int → Int → Bool → ST s () 
--  native set 
--  setα ∷ Mutable s BitSet → Int → ST s () 
--  native set  overloads set 
--  setβ ∷ Mutable s BitSet → Int → Bool → ST s () 
--  native set  overloads set 
--  setγ ∷ Mutable s BitSet → Int → Int → ST s () 
--  native set  overloads set 
--  setδ ∷ Mutable s BitSet → Int → Int → Bool → ST s () 
--  native set  overloads set 
--  size ∷ Mutable s BitSet → ST s Int 
--  native size 
--  toByteArray ∷ Mutable s BitSet → STMutable s (JArray Byte) 
--  native toByteArray 
--  toLongArray ∷ Mutable s BitSet → STMutable s (JArray Long) 
--  native toLongArray 
--  toString ∷ Mutable s BitSet → ST s String 
--  native toString 
--  valueOf ∷ Mutable s ByteBuffer → STMutable s BitSet 
--           | ArrayOf s Long → STMutable s BitSet 
--           | Mutable s LongBuffer → STMutable s BitSet 
--           | ArrayOf s Byte → STMutable s BitSet 
--  native java.util.BitSet.valueOf 
--  valueOfα ∷ Mutable s ByteBuffer → STMutable s BitSet 
--  native java.util.BitSet.valueOf  overloads valueOf 
--  valueOfβ ∷ ArrayOf s Long → STMutable s BitSet 
--  native java.util.BitSet.valueOf  overloads valueOf 
--  valueOfγ ∷ Mutable s LongBuffer → STMutable s BitSet 
--  native java.util.BitSet.valueOf  overloads valueOf 
--  valueOfδ ∷ ArrayOf s Byte → STMutable s BitSet 
--  native java.util.BitSet.valueOf  overloads valueOf 
--  xor ∷ Mutable s BitSet → Mutable s BitSet → ST s () 
--  native xor 

@url http://www.frege-lang.org/doc/frege/java/Util#BitSet
data BitSet 


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.and
and ∷ Mutable s BitSet → Mutable s BitSet → ST s () 
native and


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.andNot
andNot ∷ Mutable s BitSet → Mutable s BitSet → ST s () 
native andNot


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.cardinality
cardinality ∷ Mutable s BitSet → ST s Int 
native cardinality


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.clear
clear ∷ Mutable s BitSet → Int → ST s () 
       | Mutable s BitSet → Int → Int → ST s () 
       | Mutable s BitSet → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.clearα
clearα ∷ Mutable s BitSet → Int → ST s () 
native clear  overloads clear


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.clearβ
clearβ ∷ Mutable s BitSet → Int → Int → ST s () 
native clear  overloads clear


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.clearγ
clearγ ∷ Mutable s BitSet → ST s () 
native clear  overloads clear


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.clone
clone ∷ Mutable s BitSet → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.equals
equals ∷ Mutable s BitSet → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.flip
flip ∷ Mutable s BitSet → Int → Int → ST s () 
      | Mutable s BitSet → Int → ST s () 
native flip


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.flipα
flipα ∷ Mutable s BitSet → Int → Int → ST s () 
native flip  overloads flip


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.flipβ
flipβ ∷ Mutable s BitSet → Int → ST s () 
native flip  overloads flip


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.get
get ∷ Mutable s BitSet → Int → Int → STMutable s BitSet 
     | Mutable s BitSet → Int → ST s Bool 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.getα
getα ∷ Mutable s BitSet → Int → Int → STMutable s BitSet 
native get  overloads get


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.getβ
getβ ∷ Mutable s BitSet → Int → ST s Bool 
native get  overloads get


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.hashCode
hashCode ∷ Mutable s BitSet → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.intersects
intersects ∷ Mutable s BitSet → Mutable s BitSet → ST s Bool 
native intersects


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.isEmpty
isEmpty ∷ Mutable s BitSet → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.length
length ∷ Mutable s BitSet → ST s Int 
native length


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet._new
new ∷ Int → STMutable s BitSet 
     | () → STMutable s BitSet 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.newα
newα ∷ Int → STMutable s BitSet 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.newβ
newβ ∷ () → STMutable s BitSet 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.nextClearBit
nextClearBit ∷ Mutable s BitSet → Int → ST s Int 
native nextClearBit


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.nextSetBit
nextSetBit ∷ Mutable s BitSet → Int → ST s Int 
native nextSetBit


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.or
or ∷ Mutable s BitSet → Mutable s BitSet → ST s () 
native or


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.previousClearBit
previousClearBit ∷ Mutable s BitSet → Int → ST s Int 
native previousClearBit


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.previousSetBit
previousSetBit ∷ Mutable s BitSet → Int → ST s Int 
native previousSetBit


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.set
set ∷ Mutable s BitSet → Int → ST s () 
     | Mutable s BitSet → Int → Bool → ST s () 
     | Mutable s BitSet → Int → Int → ST s () 
     | Mutable s BitSet → Int → Int → Bool → ST s () 
native set


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.setα
setα ∷ Mutable s BitSet → Int → ST s () 
native set  overloads set


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.setβ
setβ ∷ Mutable s BitSet → Int → Bool → ST s () 
native set  overloads set


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.setγ
setγ ∷ Mutable s BitSet → Int → Int → ST s () 
native set  overloads set


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.setδ
setδ ∷ Mutable s BitSet → Int → Int → Bool → ST s () 
native set  overloads set


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.size
size ∷ Mutable s BitSet → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.toByteArray
toByteArray ∷ Mutable s BitSet → STMutable s (JArray Byte) 
native toByteArray


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.toLongArray
toLongArray ∷ Mutable s BitSet → STMutable s (JArray Long) 
native toLongArray


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.toString
toString ∷ Mutable s BitSet → ST s String 
native toString


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.valueOf
valueOf ∷ Mutable s ByteBuffer → STMutable s BitSet 
         | ArrayOf s Long → STMutable s BitSet 
         | Mutable s LongBuffer → STMutable s BitSet 
         | ArrayOf s Byte → STMutable s BitSet 
native java.util.BitSet.valueOf


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.valueOfα
valueOfα ∷ Mutable s ByteBuffer → STMutable s BitSet 
native java.util.BitSet.valueOf  overloads valueOf


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.valueOfβ
valueOfβ ∷ ArrayOf s Long → STMutable s BitSet 
native java.util.BitSet.valueOf  overloads valueOf


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.valueOfγ
valueOfγ ∷ Mutable s LongBuffer → STMutable s BitSet 
native java.util.BitSet.valueOf  overloads valueOf


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.valueOfδ
valueOfδ ∷ ArrayOf s Byte → STMutable s BitSet 
native java.util.BitSet.valueOf  overloads valueOf


@url http://www.frege-lang.org/doc/frege/java/Util#BitSet.xor
xor ∷ Mutable s BitSet → Mutable s BitSet → ST s () 
native xor

-- | The class Date represents a specific instant in time, with millisecond precision. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  after ∷ Mutable s Date → Mutable s Date → ST s Bool 
--  native after 
--  before ∷ Mutable s Date → Mutable s Date → ST s Bool 
--  native before 
--  clone ∷ Mutable s Date → ST s Object 
--  native clone 
--  compareTo ∷ Mutable s Date → Mutable s Date → ST s Int 
--  native compareTo 
--  equals ∷ Mutable s Date → Object → ST s Bool 
--  native equals 
--  getDate ∷ Mutable s Date → ST s Int 
--  native getDate 
--  getDay ∷ Mutable s Date → ST s Int 
--  native getDay 
--  getHours ∷ Mutable s Date → ST s Int 
--  native getHours 
--  getMinutes ∷ Mutable s Date → ST s Int 
--  native getMinutes 
--  getMonth ∷ Mutable s Date → ST s Int 
--  native getMonth 
--  getSeconds ∷ Mutable s Date → ST s Int 
--  native getSeconds 
--  getTime ∷ Mutable s Date → ST s Long 
--  native getTime 
--  getTimezoneOffset ∷ Mutable s Date → ST s Int 
--  native getTimezoneOffset 
--  getYear ∷ Mutable s Date → ST s Int 
--  native getYear 
--  hashCode ∷ Mutable s Date → ST s Int 
--  native hashCode 
--  new ∷ String → STMutable s Date 
--       | Int → Int → Int → Int → Int → Int → STMutable s Date 
--       | Int → Int → Int → Int → Int → STMutable s Date 
--       | () → STMutable s Date 
--       | Long → STMutable s Date 
--       | Int → Int → Int → STMutable s Date 
--  native new 
--  newα ∷ String → STMutable s Date 
--  native new  overloads new 
--  newβ ∷ Int → Int → Int → Int → Int → Int → STMutable s Date 
--  native new  overloads new 
--  newγ ∷ Int → Int → Int → Int → Int → STMutable s Date 
--  native new  overloads new 
--  newδ ∷ () → STMutable s Date 
--  native new  overloads new 
--  newε ∷ Long → STMutable s Date 
--  native new  overloads new 
--  newζ ∷ Int → Int → Int → STMutable s Date 
--  native new  overloads new 
--  parse ∷ String → Long 
--  pure native java.util.Date.parse 
--  setDate ∷ Mutable s Date → Int → ST s () 
--  native setDate 
--  setHours ∷ Mutable s Date → Int → ST s () 
--  native setHours 
--  setMinutes ∷ Mutable s Date → Int → ST s () 
--  native setMinutes 
--  setMonth ∷ Mutable s Date → Int → ST s () 
--  native setMonth 
--  setSeconds ∷ Mutable s Date → Int → ST s () 
--  native setSeconds 
--  setTime ∷ Mutable s Date → Long → ST s () 
--  native setTime 
--  setYear ∷ Mutable s Date → Int → ST s () 
--  native setYear 
--  toGMTString ∷ Mutable s Date → ST s String 
--  native toGMTString 
--  toLocaleString ∷ Mutable s Date → ST s String 
--  native toLocaleString 
--  toString ∷ Mutable s Date → ST s String 
--  native toString 
--  uTC ∷ Int → Int → Int → Int → Int → Int → Long 
--  pure native java.util.Date.UTC 

@url http://www.frege-lang.org/doc/frege/java/Util#Date
data Date 


@url http://www.frege-lang.org/doc/frege/java/Util#Date.after
after ∷ Mutable s Date → Mutable s Date → ST s Bool 
native after


@url http://www.frege-lang.org/doc/frege/java/Util#Date.before
before ∷ Mutable s Date → Mutable s Date → ST s Bool 
native before


@url http://www.frege-lang.org/doc/frege/java/Util#Date.clone
clone ∷ Mutable s Date → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#Date.compareTo
compareTo ∷ Mutable s Date → Mutable s Date → ST s Int 
native compareTo


@url http://www.frege-lang.org/doc/frege/java/Util#Date.equals
equals ∷ Mutable s Date → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#Date.getDate
getDate ∷ Mutable s Date → ST s Int 
native getDate


@url http://www.frege-lang.org/doc/frege/java/Util#Date.getDay
getDay ∷ Mutable s Date → ST s Int 
native getDay


@url http://www.frege-lang.org/doc/frege/java/Util#Date.getHours
getHours ∷ Mutable s Date → ST s Int 
native getHours


@url http://www.frege-lang.org/doc/frege/java/Util#Date.getMinutes
getMinutes ∷ Mutable s Date → ST s Int 
native getMinutes


@url http://www.frege-lang.org/doc/frege/java/Util#Date.getMonth
getMonth ∷ Mutable s Date → ST s Int 
native getMonth


@url http://www.frege-lang.org/doc/frege/java/Util#Date.getSeconds
getSeconds ∷ Mutable s Date → ST s Int 
native getSeconds


@url http://www.frege-lang.org/doc/frege/java/Util#Date.getTime
getTime ∷ Mutable s Date → ST s Long 
native getTime


@url http://www.frege-lang.org/doc/frege/java/Util#Date.getTimezoneOffset
getTimezoneOffset ∷ Mutable s Date → ST s Int 
native getTimezoneOffset


@url http://www.frege-lang.org/doc/frege/java/Util#Date.getYear
getYear ∷ Mutable s Date → ST s Int 
native getYear


@url http://www.frege-lang.org/doc/frege/java/Util#Date.hashCode
hashCode ∷ Mutable s Date → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Date._new
new ∷ String → STMutable s Date 
     | Int → Int → Int → Int → Int → Int → STMutable s Date 
     | Int → Int → Int → Int → Int → STMutable s Date 
     | () → STMutable s Date 
     | Long → STMutable s Date 
     | Int → Int → Int → STMutable s Date 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#Date.newα
newα ∷ String → STMutable s Date 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Date.newβ
newβ ∷ Int → Int → Int → Int → Int → Int → STMutable s Date 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Date.newγ
newγ ∷ Int → Int → Int → Int → Int → STMutable s Date 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Date.newδ
newδ ∷ () → STMutable s Date 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Date.newε
newε ∷ Long → STMutable s Date 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Date.newζ
newζ ∷ Int → Int → Int → STMutable s Date 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Date.parse
parse ∷ String → Long 
pure native java.util.Date.parse


@url http://www.frege-lang.org/doc/frege/java/Util#Date.setDate
setDate ∷ Mutable s Date → Int → ST s () 
native setDate


@url http://www.frege-lang.org/doc/frege/java/Util#Date.setHours
setHours ∷ Mutable s Date → Int → ST s () 
native setHours


@url http://www.frege-lang.org/doc/frege/java/Util#Date.setMinutes
setMinutes ∷ Mutable s Date → Int → ST s () 
native setMinutes


@url http://www.frege-lang.org/doc/frege/java/Util#Date.setMonth
setMonth ∷ Mutable s Date → Int → ST s () 
native setMonth


@url http://www.frege-lang.org/doc/frege/java/Util#Date.setSeconds
setSeconds ∷ Mutable s Date → Int → ST s () 
native setSeconds


@url http://www.frege-lang.org/doc/frege/java/Util#Date.setTime
setTime ∷ Mutable s Date → Long → ST s () 
native setTime


@url http://www.frege-lang.org/doc/frege/java/Util#Date.setYear
setYear ∷ Mutable s Date → Int → ST s () 
native setYear


@url http://www.frege-lang.org/doc/frege/java/Util#Date.toGMTString
toGMTString ∷ Mutable s Date → ST s String 
native toGMTString


@url http://www.frege-lang.org/doc/frege/java/Util#Date.toLocaleString
toLocaleString ∷ Mutable s Date → ST s String 
native toLocaleString


@url http://www.frege-lang.org/doc/frege/java/Util#Date.toString
toString ∷ Mutable s Date → ST s String 
native toString


@url http://www.frege-lang.org/doc/frege/java/Util#Date.uTC
uTC ∷ Int → Int → Int → Int → Int → Int → Long 
pure native java.util.Date.UTC

-- | TimeZone represents a time zone offset, and also figures out daylight savings. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  clone ∷ TimeZone → Object 
--  pure native clone 
--  getAvailableIDs ∷ () → STMutable s (JArray String) 
--                   | Int → STMutable s (JArray String) 
--  native java.util.TimeZone.getAvailableIDs 
--  getAvailableIDsα ∷ () → STMutable s (JArray String) 
--  native java.util.TimeZone.getAvailableIDs  overloads getAvailableIDs 
--  getAvailableIDsβ ∷ Int → STMutable s (JArray String) 
--  native java.util.TimeZone.getAvailableIDs  overloads getAvailableIDs 
--  getDSTSavings ∷ TimeZone → Int 
--  pure native getDSTSavings 
--  getDefault ∷ () → ST s TimeZone 
--  native java.util.TimeZone.getDefault 
--  getDisplayName ∷ TimeZone → Bool → Int → Locale → String 
--                  | TimeZone → String 
--                  | TimeZone → Bool → Int → String 
--                  | TimeZone → Locale → String 
--  pure native getDisplayName 
--  getDisplayNameα ∷ TimeZone → Bool → Int → Locale → String 
--  pure native getDisplayName  overloads getDisplayName 
--  getDisplayNameβ ∷ TimeZone → String 
--  pure native getDisplayName  overloads getDisplayName 
--  getDisplayNameγ ∷ TimeZone → Bool → Int → String 
--  pure native getDisplayName  overloads getDisplayName 
--  getDisplayNameδ ∷ TimeZone → Locale → String 
--  pure native getDisplayName  overloads getDisplayName 
--  getID ∷ TimeZone → String 
--  pure native getID 
--  getOffset ∷ TimeZone → Int → Int → Int → Int → Int → Int → Int 
--             | TimeZone → Long → Int 
--  pure native getOffset 
--  getOffsetα ∷ TimeZone → Int → Int → Int → Int → Int → Int → Int 
--  pure native getOffset  overloads getOffset 
--  getOffsetβ ∷ TimeZone → Long → Int 
--  pure native getOffset  overloads getOffset 
--  getRawOffset ∷ TimeZone → Int 
--  pure native getRawOffset 
--  getTimeZone ∷ String → TimeZone 
--  pure native java.util.TimeZone.getTimeZone 
--  hasSameRules ∷ TimeZone → TimeZone → Bool 
--  pure native hasSameRules 
--  inDaylightTime ∷ TimeZone → Mutable s Date → ST s Bool 
--  native inDaylightTime 
--  long ∷ Int 
--  pure native java.util.TimeZone.LONG 
--  observesDaylightTime ∷ TimeZone → Bool 
--  pure native observesDaylightTime 
--  setDefault ∷ TimeZone → ST s () 
--  native java.util.TimeZone.setDefault 
--  setID ∷ TimeZone → String → ST s () 
--  native setID 
--  setRawOffset ∷ TimeZone → Int → ST s () 
--  native setRawOffset 
--  short ∷ Int 
--  pure native java.util.TimeZone.SHORT 
--  useDaylightTime ∷ TimeZone → Bool 
--  pure native useDaylightTime 

@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone
data TimeZone 


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.clone
clone ∷ TimeZone → Object 
pure native clone


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getAvailableIDs
getAvailableIDs ∷ () → STMutable s (JArray String) 
                 | Int → STMutable s (JArray String) 
native java.util.TimeZone.getAvailableIDs


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getAvailableIDsα
getAvailableIDsα ∷ () → STMutable s (JArray String) 
native java.util.TimeZone.getAvailableIDs  overloads getAvailableIDs


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getAvailableIDsβ
getAvailableIDsβ ∷ Int → STMutable s (JArray String) 
native java.util.TimeZone.getAvailableIDs  overloads getAvailableIDs


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getDSTSavings
getDSTSavings ∷ TimeZone → Int 
pure native getDSTSavings


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getDefault
getDefault ∷ () → ST s TimeZone 
native java.util.TimeZone.getDefault


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getDisplayName
getDisplayName ∷ TimeZone → Bool → Int → Locale → String 
                | TimeZone → String 
                | TimeZone → Bool → Int → String 
                | TimeZone → Locale → String 
pure native getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getDisplayNameα
getDisplayNameα ∷ TimeZone → Bool → Int → Locale → String 
pure native getDisplayName  overloads getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getDisplayNameβ
getDisplayNameβ ∷ TimeZone → String 
pure native getDisplayName  overloads getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getDisplayNameγ
getDisplayNameγ ∷ TimeZone → Bool → Int → String 
pure native getDisplayName  overloads getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getDisplayNameδ
getDisplayNameδ ∷ TimeZone → Locale → String 
pure native getDisplayName  overloads getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getID
getID ∷ TimeZone → String 
pure native getID


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getOffset
getOffset ∷ TimeZone → Int → Int → Int → Int → Int → Int → Int 
           | TimeZone → Long → Int 
pure native getOffset


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getOffsetα
getOffsetα ∷ TimeZone → Int → Int → Int → Int → Int → Int → Int 
pure native getOffset  overloads getOffset


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getOffsetβ
getOffsetβ ∷ TimeZone → Long → Int 
pure native getOffset  overloads getOffset


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getRawOffset
getRawOffset ∷ TimeZone → Int 
pure native getRawOffset


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.getTimeZone
getTimeZone ∷ String → TimeZone 
pure native java.util.TimeZone.getTimeZone


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.hasSameRules
hasSameRules ∷ TimeZone → TimeZone → Bool 
pure native hasSameRules


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.inDaylightTime
inDaylightTime ∷ TimeZone → Mutable s Date → ST s Bool 
native inDaylightTime


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone._long
long ∷ Int 
pure native java.util.TimeZone.LONG


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.observesDaylightTime
observesDaylightTime ∷ TimeZone → Bool 
pure native observesDaylightTime


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.setDefault
setDefault ∷ TimeZone → ST s () 
native java.util.TimeZone.setDefault


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.setID
setID ∷ TimeZone → String → ST s () 
native setID


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.setRawOffset
setRawOffset ∷ TimeZone → Int → ST s () 
native setRawOffset


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone._short
short ∷ Int 
pure native java.util.TimeZone.SHORT


@url http://www.frege-lang.org/doc/frege/java/Util#TimeZone.useDaylightTime
useDaylightTime ∷ TimeZone → Bool 
pure native useDaylightTime

-- | The Calendar class is an abstract class that provides methods for converting between a specific instant in time and a set of calendar fields such as YEAR, MONTH, DAYOFMONTH, HOUR, and so on, and for manipulating the calendar fields, such as getting the date of the next week. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  add ∷ Mutable s Calendar → Int → Int → ST s () 
--  native add 
--  after ∷ Mutable s Calendar → Object → ST s Bool 
--  native after 
--  all_styles ∷ Int 
--  pure native java.util.Calendar.ALL_STYLES 
--  am ∷ Int 
--  pure native java.util.Calendar.AM 
--  am_pm ∷ Int 
--  pure native java.util.Calendar.AM_PM 
--  april ∷ Int 
--  pure native java.util.Calendar.APRIL 
--  august ∷ Int 
--  pure native java.util.Calendar.AUGUST 
--  before ∷ Mutable s Calendar → Object → ST s Bool 
--  native before 
--  clear ∷ Mutable s Calendar → ST s () 
--         | Mutable s Calendar → Int → ST s () 
--  native clear 
--  clearα ∷ Mutable s Calendar → ST s () 
--  native clear  overloads clear 
--  clearβ ∷ Mutable s Calendar → Int → ST s () 
--  native clear  overloads clear 
--  clone ∷ Mutable s Calendar → ST s Object 
--  native clone 
--  compareTo ∷ Mutable s Calendar → Mutable s Calendar → ST s Int 
--  native compareTo 
--  date ∷ Int 
--  pure native java.util.Calendar.DATE 
--  day_of_month ∷ Int 
--  pure native java.util.Calendar.DAY_OF_MONTH 
--  day_of_week ∷ Int 
--  pure native java.util.Calendar.DAY_OF_WEEK 
--  day_of_week_in_month ∷ Int 
--  pure native java.util.Calendar.DAY_OF_WEEK_IN_MONTH 
--  day_of_year ∷ Int 
--  pure native java.util.Calendar.DAY_OF_YEAR 
--  december ∷ Int 
--  pure native java.util.Calendar.DECEMBER 
--  dst_offset ∷ Int 
--  pure native java.util.Calendar.DST_OFFSET 
--  equals ∷ Mutable s Calendar → Object → ST s Bool 
--  native equals 
--  era ∷ Int 
--  pure native java.util.Calendar.ERA 
--  february ∷ Int 
--  pure native java.util.Calendar.FEBRUARY 
--  field_count ∷ Int 
--  pure native java.util.Calendar.FIELD_COUNT 
--  friday ∷ Int 
--  pure native java.util.Calendar.FRIDAY 
--  get ∷ Mutable s Calendar → Int → ST s Int 
--  native get 
--  getActualMaximum ∷ Mutable s Calendar → Int → ST s Int 
--  native getActualMaximum 
--  getActualMinimum ∷ Mutable s Calendar → Int → ST s Int 
--  native getActualMinimum 
--  getAvailableLocales ∷ () → STMutable s (JArray Locale) 
--  native java.util.Calendar.getAvailableLocales 
--  getDisplayName ∷ Mutable s Calendar → Int → Int → Locale → ST s String 
--  native getDisplayName 
--  getDisplayNames ∷ Mutable s Calendar → Int → Int → Locale → STMutable s (Map String Integer) 
--  native getDisplayNames 
--  getFirstDayOfWeek ∷ Mutable s Calendar → ST s Int 
--  native getFirstDayOfWeek 
--  getGreatestMinimum ∷ Mutable s Calendar → Int → ST s Int 
--  native getGreatestMinimum 
--  getInstance ∷ () → STMutable s Calendar 
--               | TimeZone → STMutable s Calendar 
--               | Locale → STMutable s Calendar 
--               | TimeZone → Locale → STMutable s Calendar 
--  native java.util.Calendar.getInstance 
--  getInstanceα ∷ () → STMutable s Calendar 
--  native java.util.Calendar.getInstance  overloads getInstance 
--  getInstanceβ ∷ TimeZone → STMutable s Calendar 
--  native java.util.Calendar.getInstance  overloads getInstance 
--  getInstanceγ ∷ Locale → STMutable s Calendar 
--  native java.util.Calendar.getInstance  overloads getInstance 
--  getInstanceδ ∷ TimeZone → Locale → STMutable s Calendar 
--  native java.util.Calendar.getInstance  overloads getInstance 
--  getLeastMaximum ∷ Mutable s Calendar → Int → ST s Int 
--  native getLeastMaximum 
--  getMaximum ∷ Mutable s Calendar → Int → ST s Int 
--  native getMaximum 
--  getMinimalDaysInFirstWeek ∷ Mutable s Calendar → ST s Int 
--  native getMinimalDaysInFirstWeek 
--  getMinimum ∷ Mutable s Calendar → Int → ST s Int 
--  native getMinimum 
--  getTime ∷ Mutable s Calendar → STMutable s Date 
--  native getTime 
--  getTimeInMillis ∷ Mutable s Calendar → ST s Long 
--  native getTimeInMillis 
--  getTimeZone ∷ Mutable s Calendar → ST s TimeZone 
--  native getTimeZone 
--  getWeekYear ∷ Mutable s Calendar → ST s Int 
--  native getWeekYear 
--  getWeeksInWeekYear ∷ Mutable s Calendar → ST s Int 
--  native getWeeksInWeekYear 
--  hashCode ∷ Mutable s Calendar → ST s Int 
--  native hashCode 
--  hour ∷ Int 
--  pure native java.util.Calendar.HOUR 
--  hour_of_day ∷ Int 
--  pure native java.util.Calendar.HOUR_OF_DAY 
--  isLenient ∷ Mutable s Calendar → ST s Bool 
--  native isLenient 
--  isSet ∷ Mutable s Calendar → Int → ST s Bool 
--  native isSet 
--  isWeekDateSupported ∷ Mutable s Calendar → ST s Bool 
--  native isWeekDateSupported 
--  january ∷ Int 
--  pure native java.util.Calendar.JANUARY 
--  july ∷ Int 
--  pure native java.util.Calendar.JULY 
--  june ∷ Int 
--  pure native java.util.Calendar.JUNE 
--  long ∷ Int 
--  pure native java.util.Calendar.LONG 
--  march ∷ Int 
--  pure native java.util.Calendar.MARCH 
--  may ∷ Int 
--  pure native java.util.Calendar.MAY 
--  millisecond ∷ Int 
--  pure native java.util.Calendar.MILLISECOND 
--  minute ∷ Int 
--  pure native java.util.Calendar.MINUTE 
--  monday ∷ Int 
--  pure native java.util.Calendar.MONDAY 
--  month ∷ Int 
--  pure native java.util.Calendar.MONTH 
--  november ∷ Int 
--  pure native java.util.Calendar.NOVEMBER 
--  october ∷ Int 
--  pure native java.util.Calendar.OCTOBER 
--  pm ∷ Int 
--  pure native java.util.Calendar.PM 
--  roll ∷ Mutable s Calendar → Int → Bool → ST s () 
--        | Mutable s Calendar → Int → Int → ST s () 
--  native roll 
--  rollα ∷ Mutable s Calendar → Int → Bool → ST s () 
--  native roll  overloads roll 
--  rollβ ∷ Mutable s Calendar → Int → Int → ST s () 
--  native roll  overloads roll 
--  saturday ∷ Int 
--  pure native java.util.Calendar.SATURDAY 
--  second ∷ Int 
--  pure native java.util.Calendar.SECOND 
--  september ∷ Int 
--  pure native java.util.Calendar.SEPTEMBER 
--  set ∷ Mutable s Calendar → Int → Int → Int → Int → Int → ST s () 
--       | Mutable s Calendar → Int → Int → ST s () 
--       | Mutable s Calendar → Int → Int → Int → ST s () 
--       | Mutable s Calendar → Int → Int → Int → Int → Int → Int → ST s () 
--  native set 
--  setFirstDayOfWeek ∷ Mutable s Calendar → Int → ST s () 
--  native setFirstDayOfWeek 
--  setLenient ∷ Mutable s Calendar → Bool → ST s () 
--  native setLenient 
--  setMinimalDaysInFirstWeek ∷ Mutable s Calendar → Int → ST s () 
--  native setMinimalDaysInFirstWeek 
--  setTime ∷ Mutable s Calendar → Mutable s Date → ST s () 
--  native setTime 
--  setTimeInMillis ∷ Mutable s Calendar → Long → ST s () 
--  native setTimeInMillis 
--  setTimeZone ∷ Mutable s Calendar → TimeZone → ST s () 
--  native setTimeZone 
--  setWeekDate ∷ Mutable s Calendar → Int → Int → Int → ST s () 
--  native setWeekDate 
--  setα ∷ Mutable s Calendar → Int → Int → Int → Int → Int → ST s () 
--  native set  overloads set 
--  setβ ∷ Mutable s Calendar → Int → Int → ST s () 
--  native set  overloads set 
--  setγ ∷ Mutable s Calendar → Int → Int → Int → ST s () 
--  native set  overloads set 
--  setδ ∷ Mutable s Calendar → Int → Int → Int → Int → Int → Int → ST s () 
--  native set  overloads set 
--  short ∷ Int 
--  pure native java.util.Calendar.SHORT 
--  sunday ∷ Int 
--  pure native java.util.Calendar.SUNDAY 
--  thursday ∷ Int 
--  pure native java.util.Calendar.THURSDAY 
--  toString ∷ Mutable s Calendar → ST s String 
--  native toString 
--  tuesday ∷ Int 
--  pure native java.util.Calendar.TUESDAY 
--  undecimber ∷ Int 
--  pure native java.util.Calendar.UNDECIMBER 
--  wednesday ∷ Int 
--  pure native java.util.Calendar.WEDNESDAY 
--  week_of_month ∷ Int 
--  pure native java.util.Calendar.WEEK_OF_MONTH 
--  week_of_year ∷ Int 
--  pure native java.util.Calendar.WEEK_OF_YEAR 
--  year ∷ Int 
--  pure native java.util.Calendar.YEAR 
--  zone_offset ∷ Int 
--  pure native java.util.Calendar.ZONE_OFFSET 

@url http://www.frege-lang.org/doc/frege/java/Util#Calendar
data Calendar 


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.add
add ∷ Mutable s Calendar → Int → Int → ST s () 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.after
after ∷ Mutable s Calendar → Object → ST s Bool 
native after


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.all_styles
all_styles ∷ Int 
pure native java.util.Calendar.ALL_STYLES


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.am
am ∷ Int 
pure native java.util.Calendar.AM


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.am_pm
am_pm ∷ Int 
pure native java.util.Calendar.AM_PM


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.april
april ∷ Int 
pure native java.util.Calendar.APRIL


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.august
august ∷ Int 
pure native java.util.Calendar.AUGUST


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.before
before ∷ Mutable s Calendar → Object → ST s Bool 
native before


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.clear
clear ∷ Mutable s Calendar → ST s () 
       | Mutable s Calendar → Int → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.clearα
clearα ∷ Mutable s Calendar → ST s () 
native clear  overloads clear


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.clearβ
clearβ ∷ Mutable s Calendar → Int → ST s () 
native clear  overloads clear


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.clone
clone ∷ Mutable s Calendar → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.compareTo
compareTo ∷ Mutable s Calendar → Mutable s Calendar → ST s Int 
native compareTo


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.date
date ∷ Int 
pure native java.util.Calendar.DATE


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.day_of_month
day_of_month ∷ Int 
pure native java.util.Calendar.DAY_OF_MONTH


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.day_of_week
day_of_week ∷ Int 
pure native java.util.Calendar.DAY_OF_WEEK


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.day_of_week_in_month
day_of_week_in_month ∷ Int 
pure native java.util.Calendar.DAY_OF_WEEK_IN_MONTH


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.day_of_year
day_of_year ∷ Int 
pure native java.util.Calendar.DAY_OF_YEAR


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.december
december ∷ Int 
pure native java.util.Calendar.DECEMBER


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.dst_offset
dst_offset ∷ Int 
pure native java.util.Calendar.DST_OFFSET


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.equals
equals ∷ Mutable s Calendar → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.era
era ∷ Int 
pure native java.util.Calendar.ERA


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.february
february ∷ Int 
pure native java.util.Calendar.FEBRUARY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.field_count
field_count ∷ Int 
pure native java.util.Calendar.FIELD_COUNT


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.friday
friday ∷ Int 
pure native java.util.Calendar.FRIDAY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.get
get ∷ Mutable s Calendar → Int → ST s Int 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getActualMaximum
getActualMaximum ∷ Mutable s Calendar → Int → ST s Int 
native getActualMaximum


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getActualMinimum
getActualMinimum ∷ Mutable s Calendar → Int → ST s Int 
native getActualMinimum


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getAvailableLocales
getAvailableLocales ∷ () → STMutable s (JArray Locale) 
native java.util.Calendar.getAvailableLocales


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getDisplayName
getDisplayName ∷ Mutable s Calendar → Int → Int → Locale → ST s String 
native getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getDisplayNames
getDisplayNames ∷ Mutable s Calendar → Int → Int → Locale → STMutable s (Map String Integer) 
native getDisplayNames


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getFirstDayOfWeek
getFirstDayOfWeek ∷ Mutable s Calendar → ST s Int 
native getFirstDayOfWeek


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getGreatestMinimum
getGreatestMinimum ∷ Mutable s Calendar → Int → ST s Int 
native getGreatestMinimum


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getInstance
getInstance ∷ () → STMutable s Calendar 
             | TimeZone → STMutable s Calendar 
             | Locale → STMutable s Calendar 
             | TimeZone → Locale → STMutable s Calendar 
native java.util.Calendar.getInstance


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getInstanceα
getInstanceα ∷ () → STMutable s Calendar 
native java.util.Calendar.getInstance  overloads getInstance


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getInstanceβ
getInstanceβ ∷ TimeZone → STMutable s Calendar 
native java.util.Calendar.getInstance  overloads getInstance


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getInstanceγ
getInstanceγ ∷ Locale → STMutable s Calendar 
native java.util.Calendar.getInstance  overloads getInstance


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getInstanceδ
getInstanceδ ∷ TimeZone → Locale → STMutable s Calendar 
native java.util.Calendar.getInstance  overloads getInstance


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getLeastMaximum
getLeastMaximum ∷ Mutable s Calendar → Int → ST s Int 
native getLeastMaximum


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getMaximum
getMaximum ∷ Mutable s Calendar → Int → ST s Int 
native getMaximum


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getMinimalDaysInFirstWeek
getMinimalDaysInFirstWeek ∷ Mutable s Calendar → ST s Int 
native getMinimalDaysInFirstWeek


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getMinimum
getMinimum ∷ Mutable s Calendar → Int → ST s Int 
native getMinimum


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getTime
getTime ∷ Mutable s Calendar → STMutable s Date 
native getTime


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getTimeInMillis
getTimeInMillis ∷ Mutable s Calendar → ST s Long 
native getTimeInMillis


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getTimeZone
getTimeZone ∷ Mutable s Calendar → ST s TimeZone 
native getTimeZone


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getWeekYear
getWeekYear ∷ Mutable s Calendar → ST s Int 
native getWeekYear


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.getWeeksInWeekYear
getWeeksInWeekYear ∷ Mutable s Calendar → ST s Int 
native getWeeksInWeekYear


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.hashCode
hashCode ∷ Mutable s Calendar → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.hour
hour ∷ Int 
pure native java.util.Calendar.HOUR


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.hour_of_day
hour_of_day ∷ Int 
pure native java.util.Calendar.HOUR_OF_DAY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.isLenient
isLenient ∷ Mutable s Calendar → ST s Bool 
native isLenient


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.isSet
isSet ∷ Mutable s Calendar → Int → ST s Bool 
native isSet


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.isWeekDateSupported
isWeekDateSupported ∷ Mutable s Calendar → ST s Bool 
native isWeekDateSupported


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.january
january ∷ Int 
pure native java.util.Calendar.JANUARY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.july
july ∷ Int 
pure native java.util.Calendar.JULY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.june
june ∷ Int 
pure native java.util.Calendar.JUNE


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar._long
long ∷ Int 
pure native java.util.Calendar.LONG


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.march
march ∷ Int 
pure native java.util.Calendar.MARCH


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.may
may ∷ Int 
pure native java.util.Calendar.MAY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.millisecond
millisecond ∷ Int 
pure native java.util.Calendar.MILLISECOND


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.minute
minute ∷ Int 
pure native java.util.Calendar.MINUTE


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.monday
monday ∷ Int 
pure native java.util.Calendar.MONDAY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.month
month ∷ Int 
pure native java.util.Calendar.MONTH


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.november
november ∷ Int 
pure native java.util.Calendar.NOVEMBER


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.october
october ∷ Int 
pure native java.util.Calendar.OCTOBER


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.pm
pm ∷ Int 
pure native java.util.Calendar.PM


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.roll
roll ∷ Mutable s Calendar → Int → Bool → ST s () 
      | Mutable s Calendar → Int → Int → ST s () 
native roll


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.rollα
rollα ∷ Mutable s Calendar → Int → Bool → ST s () 
native roll  overloads roll


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.rollβ
rollβ ∷ Mutable s Calendar → Int → Int → ST s () 
native roll  overloads roll


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.saturday
saturday ∷ Int 
pure native java.util.Calendar.SATURDAY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.second
second ∷ Int 
pure native java.util.Calendar.SECOND


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.september
september ∷ Int 
pure native java.util.Calendar.SEPTEMBER


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.set
set ∷ Mutable s Calendar → Int → Int → Int → Int → Int → ST s () 
     | Mutable s Calendar → Int → Int → ST s () 
     | Mutable s Calendar → Int → Int → Int → ST s () 
     | Mutable s Calendar → Int → Int → Int → Int → Int → Int → ST s () 
native set


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setFirstDayOfWeek
setFirstDayOfWeek ∷ Mutable s Calendar → Int → ST s () 
native setFirstDayOfWeek


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setLenient
setLenient ∷ Mutable s Calendar → Bool → ST s () 
native setLenient


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setMinimalDaysInFirstWeek
setMinimalDaysInFirstWeek ∷ Mutable s Calendar → Int → ST s () 
native setMinimalDaysInFirstWeek


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setTime
setTime ∷ Mutable s Calendar → Mutable s Date → ST s () 
native setTime


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setTimeInMillis
setTimeInMillis ∷ Mutable s Calendar → Long → ST s () 
native setTimeInMillis


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setTimeZone
setTimeZone ∷ Mutable s Calendar → TimeZone → ST s () 
native setTimeZone


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setWeekDate
setWeekDate ∷ Mutable s Calendar → Int → Int → Int → ST s () 
native setWeekDate


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setα
setα ∷ Mutable s Calendar → Int → Int → Int → Int → Int → ST s () 
native set  overloads set


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setβ
setβ ∷ Mutable s Calendar → Int → Int → ST s () 
native set  overloads set


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setγ
setγ ∷ Mutable s Calendar → Int → Int → Int → ST s () 
native set  overloads set


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.setδ
setδ ∷ Mutable s Calendar → Int → Int → Int → Int → Int → Int → ST s () 
native set  overloads set


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar._short
short ∷ Int 
pure native java.util.Calendar.SHORT


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.sunday
sunday ∷ Int 
pure native java.util.Calendar.SUNDAY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.thursday
thursday ∷ Int 
pure native java.util.Calendar.THURSDAY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.toString
toString ∷ Mutable s Calendar → ST s String 
native toString


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.tuesday
tuesday ∷ Int 
pure native java.util.Calendar.TUESDAY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.undecimber
undecimber ∷ Int 
pure native java.util.Calendar.UNDECIMBER


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.wednesday
wednesday ∷ Int 
pure native java.util.Calendar.WEDNESDAY


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.week_of_month
week_of_month ∷ Int 
pure native java.util.Calendar.WEEK_OF_MONTH


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.week_of_year
week_of_year ∷ Int 
pure native java.util.Calendar.WEEK_OF_YEAR


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.year
year ∷ Int 
pure native java.util.Calendar.YEAR


@url http://www.frege-lang.org/doc/frege/java/Util#Calendar.zone_offset
zone_offset ∷ Int 
pure native java.util.Calendar.ZONE_OFFSET

-- | GregorianCalendar is a concrete subclass of Calendar and provides the standard calendar system used by most of the world. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  ad ∷ Int 
--  pure native java.util.GregorianCalendar.AD 
--  add ∷ Mutable s GregorianCalendar → Int → Int → ST s () 
--  native add 
--  bc ∷ Int 
--  pure native java.util.GregorianCalendar.BC 
--  clone ∷ Mutable s GregorianCalendar → ST s Object 
--  native clone 
--  equals ∷ Mutable s GregorianCalendar → Object → ST s Bool 
--  native equals 
--  getActualMaximum ∷ Mutable s GregorianCalendar → Int → ST s Int 
--  native getActualMaximum 
--  getActualMinimum ∷ Mutable s GregorianCalendar → Int → ST s Int 
--  native getActualMinimum 
--  getGreatestMinimum ∷ Mutable s GregorianCalendar → Int → ST s Int 
--  native getGreatestMinimum 
--  getGregorianChange ∷ Mutable s GregorianCalendar → STMutable s Date 
--  native getGregorianChange 
--  getLeastMaximum ∷ Mutable s GregorianCalendar → Int → ST s Int 
--  native getLeastMaximum 
--  getMaximum ∷ Mutable s GregorianCalendar → Int → ST s Int 
--  native getMaximum 
--  getMinimum ∷ Mutable s GregorianCalendar → Int → ST s Int 
--  native getMinimum 
--  getTimeZone ∷ Mutable s GregorianCalendar → ST s TimeZone 
--  native getTimeZone 
--  getWeekYear ∷ Mutable s GregorianCalendar → ST s Int 
--  native getWeekYear 
--  getWeeksInWeekYear ∷ Mutable s GregorianCalendar → ST s Int 
--  native getWeeksInWeekYear 
--  hashCode ∷ Mutable s GregorianCalendar → ST s Int 
--  native hashCode 
--  isLeapYear ∷ Mutable s GregorianCalendar → Int → ST s Bool 
--  native isLeapYear 
--  isWeekDateSupported ∷ Mutable s GregorianCalendar → ST s Bool 
--  native isWeekDateSupported 
--  new ∷ Int → Int → Int → STMutable s GregorianCalendar 
--       | Int → Int → Int → Int → Int → STMutable s GregorianCalendar 
--       | Int → Int → Int → Int → Int → Int → STMutable s GregorianCalendar 
--       | () → STMutable s GregorianCalendar 
--       | TimeZone → STMutable s GregorianCalendar 
--       | Locale → STMutable s GregorianCalendar 
--       | TimeZone → Locale → STMutable s GregorianCalendar 
--  native new 
--  newα ∷ Int → Int → Int → STMutable s GregorianCalendar 
--  native new  overloads new 
--  newβ ∷ Int → Int → Int → Int → Int → STMutable s GregorianCalendar 
--  native new  overloads new 
--  newγ ∷ Int → Int → Int → Int → Int → Int → STMutable s GregorianCalendar 
--  native new  overloads new 
--  newδ ∷ () → STMutable s GregorianCalendar 
--  native new  overloads new 
--  newε ∷ TimeZone → STMutable s GregorianCalendar 
--  native new  overloads new 
--  newζ ∷ Locale → STMutable s GregorianCalendar 
--  native new  overloads new 
--  newη ∷ TimeZone → Locale → STMutable s GregorianCalendar 
--  native new  overloads new 
--  roll ∷ Mutable s GregorianCalendar → Int → Int → ST s () 
--        | Mutable s GregorianCalendar → Int → Bool → ST s () 
--  native roll 
--  rollα ∷ Mutable s GregorianCalendar → Int → Int → ST s () 
--  native roll  overloads roll 
--  rollβ ∷ Mutable s GregorianCalendar → Int → Bool → ST s () 
--  native roll  overloads roll 
--  setGregorianChange ∷ Mutable s GregorianCalendar → Mutable s Date → ST s () 
--  native setGregorianChange 
--  setTimeZone ∷ Mutable s GregorianCalendar → TimeZone → ST s () 
--  native setTimeZone 
--  setWeekDate ∷ Mutable s GregorianCalendar → Int → Int → Int → ST s () 
--  native setWeekDate 

@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar
data GregorianCalendar 


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.ad
ad ∷ Int 
pure native java.util.GregorianCalendar.AD


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.add
add ∷ Mutable s GregorianCalendar → Int → Int → ST s () 
native add


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.bc
bc ∷ Int 
pure native java.util.GregorianCalendar.BC


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.clone
clone ∷ Mutable s GregorianCalendar → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.equals
equals ∷ Mutable s GregorianCalendar → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getActualMaximum
getActualMaximum ∷ Mutable s GregorianCalendar → Int → ST s Int 
native getActualMaximum


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getActualMinimum
getActualMinimum ∷ Mutable s GregorianCalendar → Int → ST s Int 
native getActualMinimum


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getGreatestMinimum
getGreatestMinimum ∷ Mutable s GregorianCalendar → Int → ST s Int 
native getGreatestMinimum


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getGregorianChange
getGregorianChange ∷ Mutable s GregorianCalendar → STMutable s Date 
native getGregorianChange


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getLeastMaximum
getLeastMaximum ∷ Mutable s GregorianCalendar → Int → ST s Int 
native getLeastMaximum


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getMaximum
getMaximum ∷ Mutable s GregorianCalendar → Int → ST s Int 
native getMaximum


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getMinimum
getMinimum ∷ Mutable s GregorianCalendar → Int → ST s Int 
native getMinimum


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getTimeZone
getTimeZone ∷ Mutable s GregorianCalendar → ST s TimeZone 
native getTimeZone


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getWeekYear
getWeekYear ∷ Mutable s GregorianCalendar → ST s Int 
native getWeekYear


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.getWeeksInWeekYear
getWeeksInWeekYear ∷ Mutable s GregorianCalendar → ST s Int 
native getWeeksInWeekYear


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.hashCode
hashCode ∷ Mutable s GregorianCalendar → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.isLeapYear
isLeapYear ∷ Mutable s GregorianCalendar → Int → ST s Bool 
native isLeapYear


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.isWeekDateSupported
isWeekDateSupported ∷ Mutable s GregorianCalendar → ST s Bool 
native isWeekDateSupported


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar._new
new ∷ Int → Int → Int → STMutable s GregorianCalendar 
     | Int → Int → Int → Int → Int → STMutable s GregorianCalendar 
     | Int → Int → Int → Int → Int → Int → STMutable s GregorianCalendar 
     | () → STMutable s GregorianCalendar 
     | TimeZone → STMutable s GregorianCalendar 
     | Locale → STMutable s GregorianCalendar 
     | TimeZone → Locale → STMutable s GregorianCalendar 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.newα
newα ∷ Int → Int → Int → STMutable s GregorianCalendar 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.newβ
newβ ∷ Int → Int → Int → Int → Int → STMutable s GregorianCalendar 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.newγ
newγ ∷ Int → Int → Int → Int → Int → Int → STMutable s GregorianCalendar 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.newδ
newδ ∷ () → STMutable s GregorianCalendar 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.newε
newε ∷ TimeZone → STMutable s GregorianCalendar 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.newζ
newζ ∷ Locale → STMutable s GregorianCalendar 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.newη
newη ∷ TimeZone → Locale → STMutable s GregorianCalendar 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.roll
roll ∷ Mutable s GregorianCalendar → Int → Int → ST s () 
      | Mutable s GregorianCalendar → Int → Bool → ST s () 
native roll


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.rollα
rollα ∷ Mutable s GregorianCalendar → Int → Int → ST s () 
native roll  overloads roll


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.rollβ
rollβ ∷ Mutable s GregorianCalendar → Int → Bool → ST s () 
native roll  overloads roll


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.setGregorianChange
setGregorianChange ∷ Mutable s GregorianCalendar → Mutable s Date → ST s () 
native setGregorianChange


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.setTimeZone
setTimeZone ∷ Mutable s GregorianCalendar → TimeZone → ST s () 
native setTimeZone


@url http://www.frege-lang.org/doc/frege/java/Util#GregorianCalendar.setWeekDate
setWeekDate ∷ Mutable s GregorianCalendar → Int → Int → Int → ST s () 
native setWeekDate

-- | This class consists exclusively of static methods that operate on or return collections. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  addAll ∷ Mutable s (Collection t) → ArrayOf s Object → ST s Bool 
--  native java.util.Collections.addAll 
--  asLifoQueue ∷ Mutable s (Deque t) → STMutable s (Queue t) 
--  native java.util.Collections.asLifoQueue 
--  binarySearch ∷ Mutable s (List (Comparable t)) → t → ST s Int 
--                | Mutable s (List t) → t → Comparator t → ST s Int 
--  native java.util.Collections.binarySearch 
--  binarySearchα ∷ Mutable s (List (Comparable t)) → t → ST s Int 
--  native java.util.Collections.binarySearch  overloads binarySearch 
--  binarySearchβ ∷ Mutable s (List t) → t → Comparator t → ST s Int 
--  native java.util.Collections.binarySearch  overloads binarySearch 
--  checkedCollection ∷ Mutable s (Collection e) → Class e → STMutable s (Collection e) 
--  native java.util.Collections.checkedCollection 
--  checkedList ∷ Mutable s (List e) → Class e → STMutable s (List e) 
--  native java.util.Collections.checkedList 
--  checkedMap ∷ Mutable s (Map k v) → Class k → Class v → STMutable s (Map k v) 
--  native java.util.Collections.checkedMap 
--  checkedSet ∷ Mutable s (Set e) → Class e → STMutable s (Set e) 
--  native java.util.Collections.checkedSet 
--  checkedSortedMap ∷ Mutable s (SortedMap k v) → Class k → Class v → STMutable s (SortedMap k v) 
--  native java.util.Collections.checkedSortedMap 
--  checkedSortedSet ∷ Mutable s (SortedSet e) → Class e → STMutable s (SortedSet e) 
--  native java.util.Collections.checkedSortedSet 
--  copy ∷ Mutable s (List t) → Mutable s (List t) → ST s () 
--  native java.util.Collections.copy 
--  disjoint ∷ Mutable s (Collection Object) → Mutable s (Collection Object) → ST s Bool 
--  native java.util.Collections.disjoint 
--  emptyEnumeration ∷ () → STMutable s (Enumeration t) 
--  native java.util.Collections.emptyEnumeration 
--  emptyIterator ∷ () → STMutable s (Iterator t) 
--  native java.util.Collections.emptyIterator 
--  emptyList ∷ () → STMutable s (List t) 
--  native java.util.Collections.emptyList 
--  emptyListIterator ∷ () → STMutable s (ListIterator t) 
--  native java.util.Collections.emptyListIterator 
--  emptyMap ∷ () → STMutable s (Map k v) 
--  native java.util.Collections.emptyMap 
--  emptySet ∷ () → STMutable s (Set t) 
--  native java.util.Collections.emptySet 
--  empty_list ∷ STMutable s (List e) 
--  native java.util.Collections.EMPTY_LIST 
--  empty_map ∷ STMutable s (Map k v) 
--  native java.util.Collections.EMPTY_MAP 
--  empty_set ∷ STMutable s (Set e) 
--  native java.util.Collections.EMPTY_SET 
--  enumeration ∷ Mutable s (Collection t) → STMutable s (Enumeration t) 
--  native java.util.Collections.enumeration 
--  fill ∷ Mutable s (List t) → t → ST s () 
--  native java.util.Collections.fill 
--  frequency ∷ Mutable s (Collection Object) → Object → ST s Int 
--  native java.util.Collections.frequency 
--  indexOfSubList ∷ Mutable s (List Object) → Mutable s (List Object) → ST s Int 
--  native java.util.Collections.indexOfSubList 
--  lastIndexOfSubList ∷ Mutable s (List Object) → Mutable s (List Object) → ST s Int 
--  native java.util.Collections.lastIndexOfSubList 
--  list ∷ Mutable s (Enumeration t) → STMutable s (ArrayList t) 
--  native java.util.Collections.list 
--  max ∷ Mutable s (Collection t) → ST s t 
--       | Mutable s (Collection t) → Comparator t → ST s t 
--  native java.util.Collections.max 
--  maxα ∷ Mutable s (Collection t) → ST s t 
--  native java.util.Collections.max  overloads max 
--  maxβ ∷ Mutable s (Collection t) → Comparator t → ST s t 
--  native java.util.Collections.max  overloads max 
--  min ∷ Mutable s (Collection t) → Comparator t → ST s t 
--       | Mutable s (Collection t) → ST s t 
--  native java.util.Collections.min 
--  minα ∷ Mutable s (Collection t) → Comparator t → ST s t 
--  native java.util.Collections.min  overloads min 
--  minβ ∷ Mutable s (Collection t) → ST s t 
--  native java.util.Collections.min  overloads min 
--  nCopies ∷ Int → t → STMutable s (List t) 
--  native java.util.Collections.nCopies 
--  newSetFromMap ∷ Mutable s (Map e Boolean) → STMutable s (Set e) 
--  native java.util.Collections.newSetFromMap 
--  replaceAll ∷ Mutable s (List t) → t → t → ST s Bool 
--  native java.util.Collections.replaceAll 
--  reverse ∷ Mutable s (List Object) → ST s () 
--  native java.util.Collections.reverse 
--  reverseOrder ∷ () → ST s (Comparator t) 
--                | Comparator t → ST s (Comparator t) 
--  native java.util.Collections.reverseOrder 
--  reverseOrderα ∷ () → ST s (Comparator t) 
--  native java.util.Collections.reverseOrder  overloads reverseOrder 
--  reverseOrderβ ∷ Comparator t → ST s (Comparator t) 
--  native java.util.Collections.reverseOrder  overloads reverseOrder 
--  rotate ∷ Mutable s (List Object) → Int → ST s () 
--  native java.util.Collections.rotate 
--  shuffle ∷ Mutable s (List Object) → Mutable s Random → ST s () 
--           | Mutable s (List Object) → ST s () 
--  native java.util.Collections.shuffle 
--  shuffleα ∷ Mutable s (List Object) → Mutable s Random → ST s () 
--  native java.util.Collections.shuffle  overloads shuffle 
--  shuffleβ ∷ Mutable s (List Object) → ST s () 
--  native java.util.Collections.shuffle  overloads shuffle 
--  singleton ∷ t → STMutable s (Set t) 
--  native java.util.Collections.singleton 
--  singletonList ∷ t → STMutable s (List t) 
--  native java.util.Collections.singletonList 
--  singletonMap ∷ k → v → STMutable s (Map k v) 
--  native java.util.Collections.singletonMap 
--  sort ∷ Mutable s (List t) → ST s () 
--        | Mutable s (List t) → Comparator t → ST s () 
--  native java.util.Collections.sort 
--  sortα ∷ Mutable s (List t) → ST s () 
--  native java.util.Collections.sort  overloads sort 
--  sortβ ∷ Mutable s (List t) → Comparator t → ST s () 
--  native java.util.Collections.sort  overloads sort 
--  swap ∷ Mutable s (List Object) → Int → Int → ST s () 
--  native java.util.Collections.swap 
--  synchronizedCollection ∷ Mutable s (Collection t) → STMutable s (Collection t) 
--  native java.util.Collections.synchronizedCollection 
--  synchronizedList ∷ Mutable s (List t) → STMutable s (List t) 
--  native java.util.Collections.synchronizedList 
--  synchronizedMap ∷ Mutable s (Map k v) → STMutable s (Map k v) 
--  native java.util.Collections.synchronizedMap 
--  synchronizedSet ∷ Mutable s (Set t) → STMutable s (Set t) 
--  native java.util.Collections.synchronizedSet 
--  synchronizedSortedMap ∷ Mutable s (SortedMap k v) → STMutable s (SortedMap k v) 
--  native java.util.Collections.synchronizedSortedMap 
--  synchronizedSortedSet ∷ Mutable s (SortedSet t) → STMutable s (SortedSet t) 
--  native java.util.Collections.synchronizedSortedSet 
--  unmodifiableCollection ∷ Mutable s (Collection t) → STMutable s (Collection t) 
--  native java.util.Collections.unmodifiableCollection 
--  unmodifiableList ∷ Mutable s (List t) → STMutable s (List t) 
--  native java.util.Collections.unmodifiableList 
--  unmodifiableMap ∷ Mutable s (Map k v) → STMutable s (Map k v) 
--  native java.util.Collections.unmodifiableMap 
--  unmodifiableSet ∷ Mutable s (Set t) → STMutable s (Set t) 
--  native java.util.Collections.unmodifiableSet 
--  unmodifiableSortedMap ∷ Mutable s (SortedMap k v) → STMutable s (SortedMap k v) 
--  native java.util.Collections.unmodifiableSortedMap 
--  unmodifiableSortedSet ∷ Mutable s (SortedSet t) → STMutable s (SortedSet t) 
--  native java.util.Collections.unmodifiableSortedSet 

@url http://www.frege-lang.org/doc/frege/java/Util#Collections
data Collections 


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.addAll
addAll ∷ Mutable s (Collection t) → ArrayOf s Object → ST s Bool 
native java.util.Collections.addAll


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.asLifoQueue
asLifoQueue ∷ Mutable s (Deque t) → STMutable s (Queue t) 
native java.util.Collections.asLifoQueue


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.binarySearch
binarySearch ∷ Mutable s (List (Comparable t)) → t → ST s Int 
              | Mutable s (List t) → t → Comparator t → ST s Int 
native java.util.Collections.binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.binarySearchα
binarySearchα ∷ Mutable s (List (Comparable t)) → t → ST s Int 
native java.util.Collections.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.binarySearchβ
binarySearchβ ∷ Mutable s (List t) → t → Comparator t → ST s Int 
native java.util.Collections.binarySearch  overloads binarySearch


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.checkedCollection
checkedCollection ∷ Mutable s (Collection e) → Class e → STMutable s (Collection e) 
native java.util.Collections.checkedCollection


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.checkedList
checkedList ∷ Mutable s (List e) → Class e → STMutable s (List e) 
native java.util.Collections.checkedList


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.checkedMap
checkedMap ∷ Mutable s (Map k v) → Class k → Class v → STMutable s (Map k v) 
native java.util.Collections.checkedMap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.checkedSet
checkedSet ∷ Mutable s (Set e) → Class e → STMutable s (Set e) 
native java.util.Collections.checkedSet


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.checkedSortedMap
checkedSortedMap ∷ Mutable s (SortedMap k v) → Class k → Class v → STMutable s (SortedMap k v) 
native java.util.Collections.checkedSortedMap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.checkedSortedSet
checkedSortedSet ∷ Mutable s (SortedSet e) → Class e → STMutable s (SortedSet e) 
native java.util.Collections.checkedSortedSet


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.copy
copy ∷ Mutable s (List t) → Mutable s (List t) → ST s () 
native java.util.Collections.copy


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.disjoint
disjoint ∷ Mutable s (Collection Object) → Mutable s (Collection Object) → ST s Bool 
native java.util.Collections.disjoint


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.emptyEnumeration
emptyEnumeration ∷ () → STMutable s (Enumeration t) 
native java.util.Collections.emptyEnumeration


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.emptyIterator
emptyIterator ∷ () → STMutable s (Iterator t) 
native java.util.Collections.emptyIterator


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.emptyList
emptyList ∷ () → STMutable s (List t) 
native java.util.Collections.emptyList


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.emptyListIterator
emptyListIterator ∷ () → STMutable s (ListIterator t) 
native java.util.Collections.emptyListIterator


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.emptyMap
emptyMap ∷ () → STMutable s (Map k v) 
native java.util.Collections.emptyMap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.emptySet
emptySet ∷ () → STMutable s (Set t) 
native java.util.Collections.emptySet


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.empty_list
empty_list ∷ STMutable s (List e) 
native java.util.Collections.EMPTY_LIST


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.empty_map
empty_map ∷ STMutable s (Map k v) 
native java.util.Collections.EMPTY_MAP


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.empty_set
empty_set ∷ STMutable s (Set e) 
native java.util.Collections.EMPTY_SET


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.enumeration
enumeration ∷ Mutable s (Collection t) → STMutable s (Enumeration t) 
native java.util.Collections.enumeration


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.fill
fill ∷ Mutable s (List t) → t → ST s () 
native java.util.Collections.fill


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.frequency
frequency ∷ Mutable s (Collection Object) → Object → ST s Int 
native java.util.Collections.frequency


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.indexOfSubList
indexOfSubList ∷ Mutable s (List Object) → Mutable s (List Object) → ST s Int 
native java.util.Collections.indexOfSubList


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.lastIndexOfSubList
lastIndexOfSubList ∷ Mutable s (List Object) → Mutable s (List Object) → ST s Int 
native java.util.Collections.lastIndexOfSubList


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.list
list ∷ Mutable s (Enumeration t) → STMutable s (ArrayList t) 
native java.util.Collections.list


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.max
max ∷ Mutable s (Collection t) → ST s t 
     | Mutable s (Collection t) → Comparator t → ST s t 
native java.util.Collections.max


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.maxα
maxα ∷ Mutable s (Collection t) → ST s t 
native java.util.Collections.max  overloads max


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.maxβ
maxβ ∷ Mutable s (Collection t) → Comparator t → ST s t 
native java.util.Collections.max  overloads max


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.min
min ∷ Mutable s (Collection t) → Comparator t → ST s t 
     | Mutable s (Collection t) → ST s t 
native java.util.Collections.min


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.minα
minα ∷ Mutable s (Collection t) → Comparator t → ST s t 
native java.util.Collections.min  overloads min


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.minβ
minβ ∷ Mutable s (Collection t) → ST s t 
native java.util.Collections.min  overloads min


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.nCopies
nCopies ∷ Int → t → STMutable s (List t) 
native java.util.Collections.nCopies


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.newSetFromMap
newSetFromMap ∷ Mutable s (Map e Boolean) → STMutable s (Set e) 
native java.util.Collections.newSetFromMap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.replaceAll
replaceAll ∷ Mutable s (List t) → t → t → ST s Bool 
native java.util.Collections.replaceAll


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.reverse
reverse ∷ Mutable s (List Object) → ST s () 
native java.util.Collections.reverse


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.reverseOrder
reverseOrder ∷ () → ST s (Comparator t) 
              | Comparator t → ST s (Comparator t) 
native java.util.Collections.reverseOrder


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.reverseOrderα
reverseOrderα ∷ () → ST s (Comparator t) 
native java.util.Collections.reverseOrder  overloads reverseOrder


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.reverseOrderβ
reverseOrderβ ∷ Comparator t → ST s (Comparator t) 
native java.util.Collections.reverseOrder  overloads reverseOrder


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.rotate
rotate ∷ Mutable s (List Object) → Int → ST s () 
native java.util.Collections.rotate


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.shuffle
shuffle ∷ Mutable s (List Object) → Mutable s Random → ST s () 
         | Mutable s (List Object) → ST s () 
native java.util.Collections.shuffle


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.shuffleα
shuffleα ∷ Mutable s (List Object) → Mutable s Random → ST s () 
native java.util.Collections.shuffle  overloads shuffle


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.shuffleβ
shuffleβ ∷ Mutable s (List Object) → ST s () 
native java.util.Collections.shuffle  overloads shuffle


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.singleton
singleton ∷ t → STMutable s (Set t) 
native java.util.Collections.singleton


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.singletonList
singletonList ∷ t → STMutable s (List t) 
native java.util.Collections.singletonList


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.singletonMap
singletonMap ∷ k → v → STMutable s (Map k v) 
native java.util.Collections.singletonMap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.sort
sort ∷ Mutable s (List t) → ST s () 
      | Mutable s (List t) → Comparator t → ST s () 
native java.util.Collections.sort


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.sortα
sortα ∷ Mutable s (List t) → ST s () 
native java.util.Collections.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.sortβ
sortβ ∷ Mutable s (List t) → Comparator t → ST s () 
native java.util.Collections.sort  overloads sort


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.swap
swap ∷ Mutable s (List Object) → Int → Int → ST s () 
native java.util.Collections.swap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.synchronizedCollection
synchronizedCollection ∷ Mutable s (Collection t) → STMutable s (Collection t) 
native java.util.Collections.synchronizedCollection


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.synchronizedList
synchronizedList ∷ Mutable s (List t) → STMutable s (List t) 
native java.util.Collections.synchronizedList


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.synchronizedMap
synchronizedMap ∷ Mutable s (Map k v) → STMutable s (Map k v) 
native java.util.Collections.synchronizedMap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.synchronizedSet
synchronizedSet ∷ Mutable s (Set t) → STMutable s (Set t) 
native java.util.Collections.synchronizedSet


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.synchronizedSortedMap
synchronizedSortedMap ∷ Mutable s (SortedMap k v) → STMutable s (SortedMap k v) 
native java.util.Collections.synchronizedSortedMap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.synchronizedSortedSet
synchronizedSortedSet ∷ Mutable s (SortedSet t) → STMutable s (SortedSet t) 
native java.util.Collections.synchronizedSortedSet


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.unmodifiableCollection
unmodifiableCollection ∷ Mutable s (Collection t) → STMutable s (Collection t) 
native java.util.Collections.unmodifiableCollection


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.unmodifiableList
unmodifiableList ∷ Mutable s (List t) → STMutable s (List t) 
native java.util.Collections.unmodifiableList


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.unmodifiableMap
unmodifiableMap ∷ Mutable s (Map k v) → STMutable s (Map k v) 
native java.util.Collections.unmodifiableMap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.unmodifiableSet
unmodifiableSet ∷ Mutable s (Set t) → STMutable s (Set t) 
native java.util.Collections.unmodifiableSet


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.unmodifiableSortedMap
unmodifiableSortedMap ∷ Mutable s (SortedMap k v) → STMutable s (SortedMap k v) 
native java.util.Collections.unmodifiableSortedMap


@url http://www.frege-lang.org/doc/frege/java/Util#Collections.unmodifiableSortedSet
unmodifiableSortedSet ∷ Mutable s (SortedSet t) → STMutable s (SortedSet t) 
native java.util.Collections.unmodifiableSortedSet

-- | Represents a currency. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  getAvailableCurrencies ∷ () → STMutable s (Set Currency) 
--  native java.util.Currency.getAvailableCurrencies 
--  getCurrencyCode ∷ Currency → String 
--  pure native getCurrencyCode 
--  getDefaultFractionDigits ∷ Currency → Int 
--  pure native getDefaultFractionDigits 
--  getDisplayName ∷ Currency → Locale → String 
--                  | Currency → String 
--  pure native getDisplayName 
--  getDisplayNameα ∷ Currency → Locale → String 
--  pure native getDisplayName  overloads getDisplayName 
--  getDisplayNameβ ∷ Currency → String 
--  pure native getDisplayName  overloads getDisplayName 
--  getInstance ∷ Locale → Currency 
--               | String → Currency 
--  pure native java.util.Currency.getInstance 
--  getInstanceα ∷ Locale → Currency 
--  pure native java.util.Currency.getInstance  overloads getInstance 
--  getInstanceβ ∷ String → Currency 
--  pure native java.util.Currency.getInstance  overloads getInstance 
--  getNumericCode ∷ Currency → Int 
--  pure native getNumericCode 
--  getSymbol ∷ Currency → String 
--             | Currency → Locale → String 
--  pure native getSymbol 
--  getSymbolα ∷ Currency → String 
--  pure native getSymbol  overloads getSymbol 
--  getSymbolβ ∷ Currency → Locale → String 
--  pure native getSymbol  overloads getSymbol 
--  toString ∷ Currency → String 
--  pure native toString 

@url http://www.frege-lang.org/doc/frege/java/Util#Currency
data Currency 


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getAvailableCurrencies
getAvailableCurrencies ∷ () → STMutable s (Set Currency) 
native java.util.Currency.getAvailableCurrencies


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getCurrencyCode
getCurrencyCode ∷ Currency → String 
pure native getCurrencyCode


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getDefaultFractionDigits
getDefaultFractionDigits ∷ Currency → Int 
pure native getDefaultFractionDigits


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getDisplayName
getDisplayName ∷ Currency → Locale → String 
                | Currency → String 
pure native getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getDisplayNameα
getDisplayNameα ∷ Currency → Locale → String 
pure native getDisplayName  overloads getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getDisplayNameβ
getDisplayNameβ ∷ Currency → String 
pure native getDisplayName  overloads getDisplayName


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getInstance
getInstance ∷ Locale → Currency 
             | String → Currency 
pure native java.util.Currency.getInstance


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getInstanceα
getInstanceα ∷ Locale → Currency 
pure native java.util.Currency.getInstance  overloads getInstance


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getInstanceβ
getInstanceβ ∷ String → Currency 
pure native java.util.Currency.getInstance  overloads getInstance


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getNumericCode
getNumericCode ∷ Currency → Int 
pure native getNumericCode


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getSymbol
getSymbol ∷ Currency → String 
           | Currency → Locale → String 
pure native getSymbol


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getSymbolα
getSymbolα ∷ Currency → String 
pure native getSymbol  overloads getSymbol


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.getSymbolβ
getSymbolβ ∷ Currency → Locale → String 
pure native getSymbol  overloads getSymbol


@url http://www.frege-lang.org/doc/frege/java/Util#Currency.toString
toString ∷ Currency → String 
pure native toString

-- | The Dictionary class is the abstract parent of any class, such as Hashtable, which maps keys to values. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  elements ∷ Mutable s (Dictionary k v) → STMutable s (Enumeration v) 
--  native elements 
--  get ∷ Mutable s (Dictionary k v) → Object → ST s v 
--  native get 
--  isEmpty ∷ Mutable s (Dictionary k v) → ST s Bool 
--  native isEmpty 
--  keys ∷ Mutable s (Dictionary k v) → STMutable s (Enumeration k) 
--  native keys 
--  put ∷ Mutable s (Dictionary k v) → k → v → ST s v 
--  native put 
--  remove ∷ Mutable s (Dictionary k v) → Object → ST s v 
--  native remove 
--  size ∷ Mutable s (Dictionary k v) → ST s Int 
--  native size 

@url http://www.frege-lang.org/doc/frege/java/Util#Dictionary
data Dictionary k v 


@url http://www.frege-lang.org/doc/frege/java/Util#Dictionary.elements
elements ∷ Mutable s (Dictionary k v) → STMutable s (Enumeration v) 
native elements


@url http://www.frege-lang.org/doc/frege/java/Util#Dictionary.get
get ∷ Mutable s (Dictionary k v) → Object → ST s v 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#Dictionary.isEmpty
isEmpty ∷ Mutable s (Dictionary k v) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#Dictionary.keys
keys ∷ Mutable s (Dictionary k v) → STMutable s (Enumeration k) 
native keys


@url http://www.frege-lang.org/doc/frege/java/Util#Dictionary.put
put ∷ Mutable s (Dictionary k v) → k → v → ST s v 
native put


@url http://www.frege-lang.org/doc/frege/java/Util#Dictionary.remove
remove ∷ Mutable s (Dictionary k v) → Object → ST s v 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#Dictionary.size
size ∷ Mutable s (Dictionary k v) → ST s Int 
native size

-- | This class implements a hash table, which maps keys to values. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  clear ∷ Mutable s (Hashtable k v) → ST s () 
--  native clear 
--  clone ∷ Mutable s (Hashtable k v) → ST s Object 
--  native clone 
--  contains ∷ Mutable s (Hashtable k v) → Object → ST s Bool 
--  native contains 
--  containsKey ∷ Mutable s (Hashtable k v) → Object → ST s Bool 
--  native containsKey 
--  containsValue ∷ Mutable s (Hashtable k v) → Object → ST s Bool 
--  native containsValue 
--  elements ∷ Mutable s (Hashtable k v) → STMutable s (Enumeration v) 
--  native elements 
--  entrySet ∷ Mutable s (Hashtable k v) → STMutable s (Set (MapEntry k v)) 
--  native entrySet 
--  equals ∷ Mutable s (Hashtable k v) → Object → ST s Bool 
--  native equals 
--  get ∷ Mutable s (Hashtable k v) → Object → ST s v 
--  native get 
--  hashCode ∷ Mutable s (Hashtable k v) → ST s Int 
--  native hashCode 
--  isEmpty ∷ Mutable s (Hashtable k v) → ST s Bool 
--  native isEmpty 
--  keySet ∷ Mutable s (Hashtable k v) → STMutable s (Set k) 
--  native keySet 
--  keys ∷ Mutable s (Hashtable k v) → STMutable s (Enumeration k) 
--  native keys 
--  new ∷ () → STMutable s (Hashtable k v) 
--       | Int → STMutable s (Hashtable k v) 
--       | Int → Float → STMutable s (Hashtable k v) 
--       | Mutable s (Map k v) → STMutable s (Hashtable k v) 
--  native new 
--  newα ∷ () → STMutable s (Hashtable k v) 
--  native new  overloads new 
--  newβ ∷ Int → STMutable s (Hashtable k v) 
--  native new  overloads new 
--  newγ ∷ Int → Float → STMutable s (Hashtable k v) 
--  native new  overloads new 
--  newδ ∷ Mutable s (Map k v) → STMutable s (Hashtable k v) 
--  native new  overloads new 
--  put ∷ Mutable s (Hashtable k v) → k → v → ST s v 
--  native put 
--  putAll ∷ Mutable s (Hashtable k v) → Mutable s (Map k v) → ST s () 
--  native putAll 
--  remove ∷ Mutable s (Hashtable k v) → Object → ST s v 
--  native remove 
--  size ∷ Mutable s (Hashtable k v) → ST s Int 
--  native size 
--  toString ∷ Mutable s (Hashtable k v) → ST s String 
--  native toString 
--  values ∷ Mutable s (Hashtable k v) → STMutable s (Collection v) 
--  native values 

@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable
data Hashtable k v 


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.clear
clear ∷ Mutable s (Hashtable k v) → ST s () 
native clear


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.clone
clone ∷ Mutable s (Hashtable k v) → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.contains
contains ∷ Mutable s (Hashtable k v) → Object → ST s Bool 
native contains


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.containsKey
containsKey ∷ Mutable s (Hashtable k v) → Object → ST s Bool 
native containsKey


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.containsValue
containsValue ∷ Mutable s (Hashtable k v) → Object → ST s Bool 
native containsValue


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.elements
elements ∷ Mutable s (Hashtable k v) → STMutable s (Enumeration v) 
native elements


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.entrySet
entrySet ∷ Mutable s (Hashtable k v) → STMutable s (Set (MapEntry k v)) 
native entrySet


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.equals
equals ∷ Mutable s (Hashtable k v) → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.get
get ∷ Mutable s (Hashtable k v) → Object → ST s v 
native get


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.hashCode
hashCode ∷ Mutable s (Hashtable k v) → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.isEmpty
isEmpty ∷ Mutable s (Hashtable k v) → ST s Bool 
native isEmpty


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.keySet
keySet ∷ Mutable s (Hashtable k v) → STMutable s (Set k) 
native keySet


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.keys
keys ∷ Mutable s (Hashtable k v) → STMutable s (Enumeration k) 
native keys


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable._new
new ∷ () → STMutable s (Hashtable k v) 
     | Int → STMutable s (Hashtable k v) 
     | Int → Float → STMutable s (Hashtable k v) 
     | Mutable s (Map k v) → STMutable s (Hashtable k v) 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.newα
newα ∷ () → STMutable s (Hashtable k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.newβ
newβ ∷ Int → STMutable s (Hashtable k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.newγ
newγ ∷ Int → Float → STMutable s (Hashtable k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.newδ
newδ ∷ Mutable s (Map k v) → STMutable s (Hashtable k v) 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.put
put ∷ Mutable s (Hashtable k v) → k → v → ST s v 
native put


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.putAll
putAll ∷ Mutable s (Hashtable k v) → Mutable s (Map k v) → ST s () 
native putAll


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.remove
remove ∷ Mutable s (Hashtable k v) → Object → ST s v 
native remove


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.size
size ∷ Mutable s (Hashtable k v) → ST s Int 
native size


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.toString
toString ∷ Mutable s (Hashtable k v) → ST s String 
native toString


@url http://www.frege-lang.org/doc/frege/java/Util#Hashtable.values
values ∷ Mutable s (Hashtable k v) → STMutable s (Collection v) 
native values

-- | The Properties class represents a persistent set of properties. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  getProperty ∷ Mutable s Properties → String → String → ST s String 
--               | Mutable s Properties → String → ST s String 
--  native getProperty 
--  getPropertyα ∷ Mutable s Properties → String → String → ST s String 
--  native getProperty  overloads getProperty 
--  getPropertyβ ∷ Mutable s Properties → String → ST s String 
--  native getProperty  overloads getProperty 
--  list ∷ MutableIO Properties → PrintStream → IO () 
--        | MutableIO Properties → PrintWriter → IO () 
--  native list 
--  listα ∷ MutableIO Properties → PrintStream → IO () 
--  native list  overloads list 
--  listβ ∷ MutableIO Properties → PrintWriter → IO () 
--  native list  overloads list 
--  load ∷ MutableIO Properties → Reader → IO () 
--            throws IOException 
--        | MutableIO Properties → InputStream → IO () 
--            throws IOException 
--  native load 
--  loadFromXML ∷ MutableIO Properties → InputStream → IO () 
--  native loadFromXML  throws InvalidPropertiesFormatException, IOException 
--  loadα ∷ MutableIO Properties → Reader → IO () 
--  native load  throws IOException  overloads load 
--  loadβ ∷ MutableIO Properties → InputStream → IO () 
--  native load  throws IOException  overloads load 
--  new ∷ () → STMutable s Properties 
--       | Mutable s Properties → STMutable s Properties 
--  native new 
--  newα ∷ () → STMutable s Properties 
--  native new  overloads new 
--  newβ ∷ Mutable s Properties → STMutable s Properties 
--  native new  overloads new 
--  propertyNames ∷ Mutable s Properties → STMutable s (Enumeration Object) 
--  native propertyNames 
--  save ∷ MutableIO Properties → OutputStream → String → IO () 
--  native save 
--  setProperty ∷ Mutable s Properties → String → String → ST s Object 
--  native setProperty 
--  store ∷ MutableIO Properties → Writer → String → IO () 
--             throws IOException 
--         | MutableIO Properties → OutputStream → String → IO () 
--             throws IOException 
--  native store 
--  storeToXML ∷ MutableIO Properties → OutputStream → String → IO () 
--                  throws IOException 
--              | MutableIO Properties → OutputStream → String → String → IO () 
--                  throws IOException 
--  native storeToXML 
--  storeToXMLα ∷ MutableIO Properties → OutputStream → String → IO () 
--  native storeToXML  throws IOException  overloads storeToXML 
--  storeToXMLβ ∷ MutableIO Properties → OutputStream → String → String → IO () 
--  native storeToXML  throws IOException  overloads storeToXML 
--  storeα ∷ MutableIO Properties → Writer → String → IO () 
--  native store  throws IOException  overloads store 
--  storeβ ∷ MutableIO Properties → OutputStream → String → IO () 
--  native store  throws IOException  overloads store 
--  stringPropertyNames ∷ Mutable s Properties → STMutable s (Set String) 
--  native stringPropertyNames 

@url http://www.frege-lang.org/doc/frege/java/Util#Properties
data Properties 


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.getProperty
getProperty ∷ Mutable s Properties → String → String → ST s String 
             | Mutable s Properties → String → ST s String 
native getProperty


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.getPropertyα
getPropertyα ∷ Mutable s Properties → String → String → ST s String 
native getProperty  overloads getProperty


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.getPropertyβ
getPropertyβ ∷ Mutable s Properties → String → ST s String 
native getProperty  overloads getProperty


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.list
list ∷ MutableIO Properties → PrintStream → IO () 
      | MutableIO Properties → PrintWriter → IO () 
native list


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.listα
listα ∷ MutableIO Properties → PrintStream → IO () 
native list  overloads list


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.listβ
listβ ∷ MutableIO Properties → PrintWriter → IO () 
native list  overloads list


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.load
load ∷ MutableIO Properties → Reader → IO () 
          throws IOException 
      | MutableIO Properties → InputStream → IO () 
          throws IOException 
native load


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.loadFromXML
loadFromXML ∷ MutableIO Properties → InputStream → IO () 
native loadFromXML  throws InvalidPropertiesFormatException, IOException


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.loadα
loadα ∷ MutableIO Properties → Reader → IO () 
native load  throws IOException  overloads load


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.loadβ
loadβ ∷ MutableIO Properties → InputStream → IO () 
native load  throws IOException  overloads load


@url http://www.frege-lang.org/doc/frege/java/Util#Properties._new
new ∷ () → STMutable s Properties 
     | Mutable s Properties → STMutable s Properties 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.newα
newα ∷ () → STMutable s Properties 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.newβ
newβ ∷ Mutable s Properties → STMutable s Properties 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.propertyNames
propertyNames ∷ Mutable s Properties → STMutable s (Enumeration Object) 
native propertyNames


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.save
save ∷ MutableIO Properties → OutputStream → String → IO () 
native save


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.setProperty
setProperty ∷ Mutable s Properties → String → String → ST s Object 
native setProperty


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.store
store ∷ MutableIO Properties → Writer → String → IO () 
           throws IOException 
       | MutableIO Properties → OutputStream → String → IO () 
           throws IOException 
native store


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.storeToXML
storeToXML ∷ MutableIO Properties → OutputStream → String → IO () 
                throws IOException 
            | MutableIO Properties → OutputStream → String → String → IO () 
                throws IOException 
native storeToXML


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.storeToXMLα
storeToXMLα ∷ MutableIO Properties → OutputStream → String → IO () 
native storeToXML  throws IOException  overloads storeToXML


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.storeToXMLβ
storeToXMLβ ∷ MutableIO Properties → OutputStream → String → String → IO () 
native storeToXML  throws IOException  overloads storeToXML


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.storeα
storeα ∷ MutableIO Properties → Writer → String → IO () 
native store  throws IOException  overloads store


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.storeβ
storeβ ∷ MutableIO Properties → OutputStream → String → IO () 
native store  throws IOException  overloads store


@url http://www.frege-lang.org/doc/frege/java/Util#Properties.stringPropertyNames
stringPropertyNames ∷ Mutable s Properties → STMutable s (Set String) 
native stringPropertyNames

-- | An abstract wrapper class for an EventListener class which associates a set of additional parameters with the listener. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  getListener ∷ Mutable s (EventListenerProxy EventListener) → STMutable s EventListener 
--  native getListener 

@url http://www.frege-lang.org/doc/frege/java/Util#EventListenerProxy
data EventListenerProxy t 


@url http://www.frege-lang.org/doc/frege/java/Util#EventListenerProxy.getListener
getListener ∷ Mutable s (EventListenerProxy EventListener) → STMutable s EventListener 
native getListener

-- | The root class from which all event state objects shall be derived. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  getSource ∷ Mutable s EventObject → ST s Object 
--  native getSource 
--  new ∷ Object → STMutable s EventObject 
--  native new 
--  toString ∷ Mutable s EventObject → ST s String 
--  native toString 

@url http://www.frege-lang.org/doc/frege/java/Util#EventObject
data EventObject 


@url http://www.frege-lang.org/doc/frege/java/Util#EventObject.getSource
getSource ∷ Mutable s EventObject → ST s Object 
native getSource


@url http://www.frege-lang.org/doc/frege/java/Util#EventObject._new
new ∷ Object → STMutable s EventObject 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#EventObject.toString
toString ∷ Mutable s EventObject → ST s String 
native toString

-- | FomattableFlags are passed to the Formattable.formatTo() method and modify the output format for Formattables. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  alternate ∷ Int 
--  pure native java.util.FormattableFlags.ALTERNATE 
--  left_justify ∷ Int 
--  pure native java.util.FormattableFlags.LEFT_JUSTIFY 
--  uppercase ∷ Int 
--  pure native java.util.FormattableFlags.UPPERCASE 

@url http://www.frege-lang.org/doc/frege/java/Util#FormattableFlags
data FormattableFlags 


@url http://www.frege-lang.org/doc/frege/java/Util#FormattableFlags.alternate
alternate ∷ Int 
pure native java.util.FormattableFlags.ALTERNATE


@url http://www.frege-lang.org/doc/frege/java/Util#FormattableFlags.left_justify
left_justify ∷ Int 
pure native java.util.FormattableFlags.LEFT_JUSTIFY


@url http://www.frege-lang.org/doc/frege/java/Util#FormattableFlags.uppercase
uppercase ∷ Int 
pure native java.util.FormattableFlags.UPPERCASE

-- | This class consists of static utility methods for operating on objects. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  compare ∷ t → t → Comparator t → Int 
--  pure native java.util.Objects.compare 
--  deepEquals ∷ Object → Object → Bool 
--  pure native java.util.Objects.deepEquals 
--  equals ∷ Object → Object → Bool 
--  pure native java.util.Objects.equals 
--  hash ∷ ArrayOf s Object → ST s Int 
--  native java.util.Objects.hash 
--  hashCode ∷ Object → Int 
--  pure native java.util.Objects.hashCode 
--  requireNonNull ∷ t → t 
--                  | t → String → t 
--  pure native java.util.Objects.requireNonNull 
--  requireNonNullα ∷ t → t 
--  pure native java.util.Objects.requireNonNull  overloads requireNonNull 
--  requireNonNullβ ∷ t → String → t 
--  pure native java.util.Objects.requireNonNull  overloads requireNonNull 
--  toString ∷ Object → String 
--            | Object → String → String 
--  pure native java.util.Objects.toString 
--  toStringα ∷ Object → String 
--  pure native java.util.Objects.toString  overloads toString 
--  toStringβ ∷ Object → String → String 
--  pure native java.util.Objects.toString  overloads toString 

@url http://www.frege-lang.org/doc/frege/java/Util#Objects
data Objects 


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.compare
compare ∷ t → t → Comparator t → Int 
pure native java.util.Objects.compare


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.deepEquals
deepEquals ∷ Object → Object → Bool 
pure native java.util.Objects.deepEquals


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.equals
equals ∷ Object → Object → Bool 
pure native java.util.Objects.equals


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.hash
hash ∷ ArrayOf s Object → ST s Int 
native java.util.Objects.hash


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.hashCode
hashCode ∷ Object → Int 
pure native java.util.Objects.hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.requireNonNull
requireNonNull ∷ t → t 
                | t → String → t 
pure native java.util.Objects.requireNonNull


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.requireNonNullα
requireNonNullα ∷ t → t 
pure native java.util.Objects.requireNonNull  overloads requireNonNull


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.requireNonNullβ
requireNonNullβ ∷ t → String → t 
pure native java.util.Objects.requireNonNull  overloads requireNonNull


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.toString
toString ∷ Object → String 
          | Object → String → String 
pure native java.util.Objects.toString


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.toStringα
toStringα ∷ Object → String 
pure native java.util.Objects.toString  overloads toString


@url http://www.frege-lang.org/doc/frege/java/Util#Objects.toStringβ
toStringβ ∷ Object → String → String 
pure native java.util.Objects.toString  overloads toString

-- | This class is for property permissions. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  equals ∷ PropertyPermission → Object → Bool 
--  pure native equals 
--  getActions ∷ PropertyPermission → String 
--  pure native getActions 
--  hashCode ∷ PropertyPermission → Int 
--  pure native hashCode 
--  implies ∷ PropertyPermission → Permission → Bool 
--  pure native implies 
--  new ∷ String → String → ST s PropertyPermission 
--  native new 
--  newPermissionCollection ∷ PropertyPermission → STMutable s PermissionCollection 
--  native newPermissionCollection 

@url http://www.frege-lang.org/doc/frege/java/Util#PropertyPermission
data PropertyPermission 


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyPermission.equals
equals ∷ PropertyPermission → Object → Bool 
pure native equals


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyPermission.getActions
getActions ∷ PropertyPermission → String 
pure native getActions


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyPermission.hashCode
hashCode ∷ PropertyPermission → Int 
pure native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyPermission.implies
implies ∷ PropertyPermission → Permission → Bool 
pure native implies


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyPermission._new
new ∷ String → String → ST s PropertyPermission 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyPermission.newPermissionCollection
newPermissionCollection ∷ PropertyPermission → STMutable s PermissionCollection 
native newPermissionCollection

-- | ListResourceBundle is an abstract subclass of ResourceBundle that manages resources for a locale in a convenient and easy to use list. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  getKeys ∷ Mutable s ListResourceBundle → STMutable s (Enumeration String) 
--  native getKeys 
--  handleGetObject ∷ Mutable s ListResourceBundle → String → ST s Object 
--  native handleGetObject 

@url http://www.frege-lang.org/doc/frege/java/Util#ListResourceBundle
data ListResourceBundle 


@url http://www.frege-lang.org/doc/frege/java/Util#ListResourceBundle.getKeys
getKeys ∷ Mutable s ListResourceBundle → STMutable s (Enumeration String) 
native getKeys


@url http://www.frege-lang.org/doc/frege/java/Util#ListResourceBundle.handleGetObject
handleGetObject ∷ Mutable s ListResourceBundle → String → ST s Object 
native handleGetObject

-- | PropertyResourceBundle is a concrete subclass of ResourceBundle that manages resources for a locale using a set of static strings from a property file. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  getKeys ∷ Mutable s PropertyResourceBundle → STMutable s (Enumeration String) 
--  native getKeys 
--  handleGetObject ∷ Mutable s PropertyResourceBundle → String → ST s Object 
--  native handleGetObject 
--  new ∷ InputStream → STMutable RealWorld PropertyResourceBundle 
--           throws IOException 
--       | Reader → STMutable RealWorld PropertyResourceBundle 
--           throws IOException 
--  native new 
--  newα ∷ InputStream → STMutable RealWorld PropertyResourceBundle 
--  native new  throws IOException  overloads new 
--  newβ ∷ Reader → STMutable RealWorld PropertyResourceBundle 
--  native new  throws IOException  overloads new 

@url http://www.frege-lang.org/doc/frege/java/Util#PropertyResourceBundle
data PropertyResourceBundle 


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyResourceBundle.getKeys
getKeys ∷ Mutable s PropertyResourceBundle → STMutable s (Enumeration String) 
native getKeys


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyResourceBundle.handleGetObject
handleGetObject ∷ Mutable s PropertyResourceBundle → String → ST s Object 
native handleGetObject


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyResourceBundle._new
new ∷ InputStream → STMutable RealWorld PropertyResourceBundle 
         throws IOException 
     | Reader → STMutable RealWorld PropertyResourceBundle 
         throws IOException 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyResourceBundle.newα
newα ∷ InputStream → STMutable RealWorld PropertyResourceBundle 
native new  throws IOException  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#PropertyResourceBundle.newβ
newβ ∷ Reader → STMutable RealWorld PropertyResourceBundle 
native new  throws IOException  overloads new

-- | Resource bundles contain locale-specific objects. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  clearCache ∷ () → ST s () 
--              | ClassLoader → IO () 
--  native java.util.ResourceBundle.clearCache 
--  clearCacheα ∷ () → ST s () 
--  native java.util.ResourceBundle.clearCache  overloads clearCache 
--  clearCacheβ ∷ ClassLoader → IO () 
--  native java.util.ResourceBundle.clearCache  overloads clearCache 
--  containsKey ∷ Mutable s ResourceBundle → String → ST s Bool 
--  native containsKey 
--  getBundle ∷ String → Locale → ResourceBundle_Control → STMutable s ResourceBundle 
--             | String → Locale → ClassLoader → STMutable RealWorld ResourceBundle 
--             | String → Locale → ClassLoader → ResourceBundle_Control → STMutable RealWorld ResourceBundle 
--             | String → STMutable s ResourceBundle 
--             | String → ResourceBundle_Control → STMutable s ResourceBundle 
--             | String → Locale → STMutable s ResourceBundle 
--  native java.util.ResourceBundle.getBundle 
--  getBundleα ∷ String → Locale → ResourceBundle_Control → STMutable s ResourceBundle 
--  native java.util.ResourceBundle.getBundle  overloads getBundle 
--  getBundleβ ∷ String → Locale → ClassLoader → STMutable RealWorld ResourceBundle 
--  native java.util.ResourceBundle.getBundle  overloads getBundle 
--  getBundleγ ∷ String → Locale → ClassLoader → ResourceBundle_Control → STMutable RealWorld ResourceBundle 
--  native java.util.ResourceBundle.getBundle  overloads getBundle 
--  getBundleδ ∷ String → STMutable s ResourceBundle 
--  native java.util.ResourceBundle.getBundle  overloads getBundle 
--  getBundleε ∷ String → ResourceBundle_Control → STMutable s ResourceBundle 
--  native java.util.ResourceBundle.getBundle  overloads getBundle 
--  getBundleζ ∷ String → Locale → STMutable s ResourceBundle 
--  native java.util.ResourceBundle.getBundle  overloads getBundle 
--  getKeys ∷ Mutable s ResourceBundle → STMutable s (Enumeration String) 
--  native getKeys 
--  getLocale ∷ Mutable s ResourceBundle → ST s Locale 
--  native getLocale 
--  getObject ∷ Mutable s ResourceBundle → String → ST s Object 
--  native getObject 
--  getString ∷ Mutable s ResourceBundle → String → ST s String 
--  native getString 
--  getStringArray ∷ Mutable s ResourceBundle → String → STMutable s (JArray String) 
--  native getStringArray 
--  keySet ∷ Mutable s ResourceBundle → STMutable s (Set String) 
--  native keySet 

@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle
data ResourceBundle 


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.clearCache
clearCache ∷ () → ST s () 
            | ClassLoader → IO () 
native java.util.ResourceBundle.clearCache


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.clearCacheα
clearCacheα ∷ () → ST s () 
native java.util.ResourceBundle.clearCache  overloads clearCache


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.clearCacheβ
clearCacheβ ∷ ClassLoader → IO () 
native java.util.ResourceBundle.clearCache  overloads clearCache


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.containsKey
containsKey ∷ Mutable s ResourceBundle → String → ST s Bool 
native containsKey


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getBundle
getBundle ∷ String → Locale → ResourceBundle_Control → STMutable s ResourceBundle 
           | String → Locale → ClassLoader → STMutable RealWorld ResourceBundle 
           | String → Locale → ClassLoader → ResourceBundle_Control → STMutable RealWorld ResourceBundle 
           | String → STMutable s ResourceBundle 
           | String → ResourceBundle_Control → STMutable s ResourceBundle 
           | String → Locale → STMutable s ResourceBundle 
native java.util.ResourceBundle.getBundle


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getBundleα
getBundleα ∷ String → Locale → ResourceBundle_Control → STMutable s ResourceBundle 
native java.util.ResourceBundle.getBundle  overloads getBundle


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getBundleβ
getBundleβ ∷ String → Locale → ClassLoader → STMutable RealWorld ResourceBundle 
native java.util.ResourceBundle.getBundle  overloads getBundle


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getBundleγ
getBundleγ ∷ String → Locale → ClassLoader → ResourceBundle_Control → STMutable RealWorld ResourceBundle 
native java.util.ResourceBundle.getBundle  overloads getBundle


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getBundleδ
getBundleδ ∷ String → STMutable s ResourceBundle 
native java.util.ResourceBundle.getBundle  overloads getBundle


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getBundleε
getBundleε ∷ String → ResourceBundle_Control → STMutable s ResourceBundle 
native java.util.ResourceBundle.getBundle  overloads getBundle


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getBundleζ
getBundleζ ∷ String → Locale → STMutable s ResourceBundle 
native java.util.ResourceBundle.getBundle  overloads getBundle


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getKeys
getKeys ∷ Mutable s ResourceBundle → STMutable s (Enumeration String) 
native getKeys


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getLocale
getLocale ∷ Mutable s ResourceBundle → ST s Locale 
native getLocale


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getObject
getObject ∷ Mutable s ResourceBundle → String → ST s Object 
native getObject


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getString
getString ∷ Mutable s ResourceBundle → String → ST s String 
native getString


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.getStringArray
getStringArray ∷ Mutable s ResourceBundle → String → STMutable s (JArray String) 
native getStringArray


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle.keySet
keySet ∷ Mutable s ResourceBundle → STMutable s (Set String) 
native keySet

-- | ResourceBundle_Control defines a set of callback methods that are invoked by the 'https://docs.oracle.com/javase/7/docs/api/java/util/ResourceBundle.html 
--   getBundle(java.lang.String,%20java.util.Locale,%20java.lang.ClassLoader,%20java.util.ResourceBundle.Control) ResourceBundle.getBundle'
--  ----------------
--   factory methods during the bundle loading process. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  format_class ∷ STMutable s (List String) 
--  native java.util.ResourceBundle.Control.FORMAT_CLASS 
--  format_default ∷ STMutable s (List String) 
--  native java.util.ResourceBundle.Control.FORMAT_DEFAULT 
--  format_properties ∷ STMutable s (List String) 
--  native java.util.ResourceBundle.Control.FORMAT_PROPERTIES 
--  getCandidateLocales ∷ ResourceBundle_Control → String → Locale → STMutable s (List Locale) 
--  native getCandidateLocales 
--  getControl ∷ Mutable s (List String) → ST s ResourceBundle_Control 
--  native java.util.ResourceBundle.Control.getControl 
--  getFallbackLocale ∷ ResourceBundle_Control → String → Locale → Locale 
--  pure native getFallbackLocale 
--  getFormats ∷ ResourceBundle_Control → String → STMutable s (List String) 
--  native getFormats 
--  getNoFallbackControl ∷ Mutable s (List String) → ST s ResourceBundle_Control 
--  native java.util.ResourceBundle.Control.getNoFallbackControl 
--  getTimeToLive ∷ ResourceBundle_Control → String → Locale → Long 
--  pure native getTimeToLive 
--  needsReload ∷ ResourceBundle_Control → String → Locale → String → ClassLoader → MutableIO ResourceBundle → Long → IO Bool 
--  native needsReload 
--  newBundle ∷ ResourceBundle_Control → String → Locale → String → ClassLoader → Bool → STMutable RealWorld ResourceBundle 
--  native newBundle  throws IllegalAccessException, InstantiationException, IOException 
--  toBundleName ∷ ResourceBundle_Control → String → Locale → String 
--  pure native toBundleName 
--  toResourceName ∷ ResourceBundle_Control → String → String → String 
--  pure native toResourceName 
--  ttl_dont_cache ∷ Long 
--  pure native java.util.ResourceBundle.Control.TTL_DONT_CACHE 
--  ttl_no_expiration_control ∷ Long 
--  pure native java.util.ResourceBundle.Control.TTL_NO_EXPIRATION_CONTROL 

@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control
data ResourceBundle_Control 


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.format_class
format_class ∷ STMutable s (List String) 
native java.util.ResourceBundle.Control.FORMAT_CLASS


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.format_default
format_default ∷ STMutable s (List String) 
native java.util.ResourceBundle.Control.FORMAT_DEFAULT


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.format_properties
format_properties ∷ STMutable s (List String) 
native java.util.ResourceBundle.Control.FORMAT_PROPERTIES


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.getCandidateLocales
getCandidateLocales ∷ ResourceBundle_Control → String → Locale → STMutable s (List Locale) 
native getCandidateLocales


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.getControl
getControl ∷ Mutable s (List String) → ST s ResourceBundle_Control 
native java.util.ResourceBundle.Control.getControl


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.getFallbackLocale
getFallbackLocale ∷ ResourceBundle_Control → String → Locale → Locale 
pure native getFallbackLocale


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.getFormats
getFormats ∷ ResourceBundle_Control → String → STMutable s (List String) 
native getFormats


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.getNoFallbackControl
getNoFallbackControl ∷ Mutable s (List String) → ST s ResourceBundle_Control 
native java.util.ResourceBundle.Control.getNoFallbackControl


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.getTimeToLive
getTimeToLive ∷ ResourceBundle_Control → String → Locale → Long 
pure native getTimeToLive


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.needsReload
needsReload ∷ ResourceBundle_Control → String → Locale → String → ClassLoader → MutableIO ResourceBundle → Long → IO Bool 
native needsReload


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.newBundle
newBundle ∷ ResourceBundle_Control → String → Locale → String → ClassLoader → Bool → STMutable RealWorld ResourceBundle 
native newBundle  throws IllegalAccessException, InstantiationException, IOException


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.toBundleName
toBundleName ∷ ResourceBundle_Control → String → Locale → String 
pure native toBundleName


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.toResourceName
toResourceName ∷ ResourceBundle_Control → String → String → String 
pure native toResourceName


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.ttl_dont_cache
ttl_dont_cache ∷ Long 
pure native java.util.ResourceBundle.Control.TTL_DONT_CACHE


@url http://www.frege-lang.org/doc/frege/java/Util#ResourceBundle_Control.ttl_no_expiration_control
ttl_no_expiration_control ∷ Long 
pure native java.util.ResourceBundle.Control.TTL_NO_EXPIRATION_CONTROL

-- | A simple service-provider loading facility. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  iterator ∷ ServiceLoader t → STMutable RealWorld (Iterator t) 
--  native iterator 
--  load ∷ Class s → IO (ServiceLoader t) 
--        | Class s → ClassLoader → IO (ServiceLoader t) 
--  native java.util.ServiceLoader.load 
--  loadInstalled ∷ Class s → IO (ServiceLoader t) 
--  native java.util.ServiceLoader.loadInstalled 
--  loadα ∷ Class s → IO (ServiceLoader t) 
--  native java.util.ServiceLoader.load  overloads load 
--  loadβ ∷ Class s → ClassLoader → IO (ServiceLoader t) 
--  native java.util.ServiceLoader.load  overloads load 
--  reload ∷ ServiceLoader t → IO () 
--  native reload 
--  toString ∷ ServiceLoader t → IO String 
--  native toString 

@url http://www.frege-lang.org/doc/frege/java/Util#ServiceLoader
data ServiceLoader t 


@url http://www.frege-lang.org/doc/frege/java/Util#ServiceLoader.iterator
iterator ∷ ServiceLoader t → STMutable RealWorld (Iterator t) 
native iterator


@url http://www.frege-lang.org/doc/frege/java/Util#ServiceLoader.load
load ∷ Class s → IO (ServiceLoader t) 
      | Class s → ClassLoader → IO (ServiceLoader t) 
native java.util.ServiceLoader.load


@url http://www.frege-lang.org/doc/frege/java/Util#ServiceLoader.loadInstalled
loadInstalled ∷ Class s → IO (ServiceLoader t) 
native java.util.ServiceLoader.loadInstalled


@url http://www.frege-lang.org/doc/frege/java/Util#ServiceLoader.loadα
loadα ∷ Class s → IO (ServiceLoader t) 
native java.util.ServiceLoader.load  overloads load


@url http://www.frege-lang.org/doc/frege/java/Util#ServiceLoader.loadβ
loadβ ∷ Class s → ClassLoader → IO (ServiceLoader t) 
native java.util.ServiceLoader.load  overloads load


@url http://www.frege-lang.org/doc/frege/java/Util#ServiceLoader.reload
reload ∷ ServiceLoader t → IO () 
native reload


@url http://www.frege-lang.org/doc/frege/java/Util#ServiceLoader.toString
toString ∷ ServiceLoader t → IO String 
native toString

-- | SimpleTimeZone is a concrete subclass of TimeZone that represents a time zone for use with a Gregorian calendar. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  clone ∷ Mutable s SimpleTimeZone → ST s Object 
--  native clone 
--  equals ∷ Mutable s SimpleTimeZone → Object → ST s Bool 
--  native equals 
--  getDSTSavings ∷ Mutable s SimpleTimeZone → ST s Int 
--  native getDSTSavings 
--  getOffset ∷ Mutable s SimpleTimeZone → Long → ST s Int 
--             | Mutable s SimpleTimeZone → Int → Int → Int → Int → Int → Int → ST s Int 
--  native getOffset 
--  getOffsetα ∷ Mutable s SimpleTimeZone → Long → ST s Int 
--  native getOffset  overloads getOffset 
--  getOffsetβ ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → Int → Int → ST s Int 
--  native getOffset  overloads getOffset 
--  getRawOffset ∷ Mutable s SimpleTimeZone → ST s Int 
--  native getRawOffset 
--  hasSameRules ∷ Mutable s SimpleTimeZone → TimeZone → ST s Bool 
--  native hasSameRules 
--  hashCode ∷ Mutable s SimpleTimeZone → ST s Int 
--  native hashCode 
--  inDaylightTime ∷ Mutable s SimpleTimeZone → Mutable s Date → ST s Bool 
--  native inDaylightTime 
--  new ∷ Int → String → Int → Int → Int → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
--       | Int → String → Int → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
--       | Int → String → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
--       | Int → String → STMutable s SimpleTimeZone 
--  native new 
--  newα ∷ Int → String → Int → Int → Int → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
--  native new  overloads new 
--  newβ ∷ Int → String → Int → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
--  native new  overloads new 
--  newγ ∷ Int → String → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
--  native new  overloads new 
--  newδ ∷ Int → String → STMutable s SimpleTimeZone 
--  native new  overloads new 
--  observesDaylightTime ∷ Mutable s SimpleTimeZone → ST s Bool 
--  native observesDaylightTime 
--  setDSTSavings ∷ Mutable s SimpleTimeZone → Int → ST s () 
--  native setDSTSavings 
--  setEndRule ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → ST s () 
--              | Mutable s SimpleTimeZone → Int → Int → Int → ST s () 
--              | Mutable s SimpleTimeZone → Int → Int → Int → Int → Bool → ST s () 
--  native setEndRule 
--  setEndRuleα ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → ST s () 
--  native setEndRule  overloads setEndRule 
--  setEndRuleβ ∷ Mutable s SimpleTimeZone → Int → Int → Int → ST s () 
--  native setEndRule  overloads setEndRule 
--  setEndRuleγ ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → Bool → ST s () 
--  native setEndRule  overloads setEndRule 
--  setRawOffset ∷ Mutable s SimpleTimeZone → Int → ST s () 
--  native setRawOffset 
--  setStartRule ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → Bool → ST s () 
--                | Mutable s SimpleTimeZone → Int → Int → Int → Int → ST s () 
--                | Mutable s SimpleTimeZone → Int → Int → Int → ST s () 
--  native setStartRule 
--  setStartRuleα ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → Bool → ST s () 
--  native setStartRule  overloads setStartRule 
--  setStartRuleβ ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → ST s () 
--  native setStartRule  overloads setStartRule 
--  setStartRuleγ ∷ Mutable s SimpleTimeZone → Int → Int → Int → ST s () 
--  native setStartRule  overloads setStartRule 
--  setStartYear ∷ Mutable s SimpleTimeZone → Int → ST s () 
--  native setStartYear 
--  standard_time ∷ Int 
--  pure native java.util.SimpleTimeZone.STANDARD_TIME 
--  toString ∷ Mutable s SimpleTimeZone → ST s String 
--  native toString 
--  useDaylightTime ∷ Mutable s SimpleTimeZone → ST s Bool 
--  native useDaylightTime 
--  utc_time ∷ Int 
--  pure native java.util.SimpleTimeZone.UTC_TIME 
--  wall_time ∷ Int 
--  pure native java.util.SimpleTimeZone.WALL_TIME 

@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone
data SimpleTimeZone 


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.clone
clone ∷ Mutable s SimpleTimeZone → ST s Object 
native clone


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.equals
equals ∷ Mutable s SimpleTimeZone → Object → ST s Bool 
native equals


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.getDSTSavings
getDSTSavings ∷ Mutable s SimpleTimeZone → ST s Int 
native getDSTSavings


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.getOffset
getOffset ∷ Mutable s SimpleTimeZone → Long → ST s Int 
           | Mutable s SimpleTimeZone → Int → Int → Int → Int → Int → Int → ST s Int 
native getOffset


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.getOffsetα
getOffsetα ∷ Mutable s SimpleTimeZone → Long → ST s Int 
native getOffset  overloads getOffset


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.getOffsetβ
getOffsetβ ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → Int → Int → ST s Int 
native getOffset  overloads getOffset


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.getRawOffset
getRawOffset ∷ Mutable s SimpleTimeZone → ST s Int 
native getRawOffset


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.hasSameRules
hasSameRules ∷ Mutable s SimpleTimeZone → TimeZone → ST s Bool 
native hasSameRules


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.hashCode
hashCode ∷ Mutable s SimpleTimeZone → ST s Int 
native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.inDaylightTime
inDaylightTime ∷ Mutable s SimpleTimeZone → Mutable s Date → ST s Bool 
native inDaylightTime


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone._new
new ∷ Int → String → Int → Int → Int → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
     | Int → String → Int → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
     | Int → String → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
     | Int → String → STMutable s SimpleTimeZone 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.newα
newα ∷ Int → String → Int → Int → Int → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.newβ
newβ ∷ Int → String → Int → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.newγ
newγ ∷ Int → String → Int → Int → Int → Int → Int → Int → Int → Int → STMutable s SimpleTimeZone 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.newδ
newδ ∷ Int → String → STMutable s SimpleTimeZone 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.observesDaylightTime
observesDaylightTime ∷ Mutable s SimpleTimeZone → ST s Bool 
native observesDaylightTime


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setDSTSavings
setDSTSavings ∷ Mutable s SimpleTimeZone → Int → ST s () 
native setDSTSavings


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setEndRule
setEndRule ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → ST s () 
            | Mutable s SimpleTimeZone → Int → Int → Int → ST s () 
            | Mutable s SimpleTimeZone → Int → Int → Int → Int → Bool → ST s () 
native setEndRule


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setEndRuleα
setEndRuleα ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → ST s () 
native setEndRule  overloads setEndRule


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setEndRuleβ
setEndRuleβ ∷ Mutable s SimpleTimeZone → Int → Int → Int → ST s () 
native setEndRule  overloads setEndRule


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setEndRuleγ
setEndRuleγ ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → Bool → ST s () 
native setEndRule  overloads setEndRule


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setRawOffset
setRawOffset ∷ Mutable s SimpleTimeZone → Int → ST s () 
native setRawOffset


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setStartRule
setStartRule ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → Bool → ST s () 
              | Mutable s SimpleTimeZone → Int → Int → Int → Int → ST s () 
              | Mutable s SimpleTimeZone → Int → Int → Int → ST s () 
native setStartRule


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setStartRuleα
setStartRuleα ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → Bool → ST s () 
native setStartRule  overloads setStartRule


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setStartRuleβ
setStartRuleβ ∷ Mutable s SimpleTimeZone → Int → Int → Int → Int → ST s () 
native setStartRule  overloads setStartRule


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setStartRuleγ
setStartRuleγ ∷ Mutable s SimpleTimeZone → Int → Int → Int → ST s () 
native setStartRule  overloads setStartRule


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.setStartYear
setStartYear ∷ Mutable s SimpleTimeZone → Int → ST s () 
native setStartYear


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.standard_time
standard_time ∷ Int 
pure native java.util.SimpleTimeZone.STANDARD_TIME


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.toString
toString ∷ Mutable s SimpleTimeZone → ST s String 
native toString


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.useDaylightTime
useDaylightTime ∷ Mutable s SimpleTimeZone → ST s Bool 
native useDaylightTime


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.utc_time
utc_time ∷ Int 
pure native java.util.SimpleTimeZone.UTC_TIME


@url http://www.frege-lang.org/doc/frege/java/Util#SimpleTimeZone.wall_time
wall_time ∷ Int 
pure native java.util.SimpleTimeZone.WALL_TIME

-- | The string tokenizer class allows an application to break a string into tokens. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  countTokens ∷ Mutable s StringTokenizer → ST s Int 
--  native countTokens 
--  hasMoreElements ∷ Mutable s StringTokenizer → ST s Bool 
--  native hasMoreElements 
--  hasMoreTokens ∷ Mutable s StringTokenizer → ST s Bool 
--  native hasMoreTokens 
--  new ∷ String → String → STMutable s StringTokenizer 
--       | String → String → Bool → STMutable s StringTokenizer 
--       | String → STMutable s StringTokenizer 
--  native new 
--  newα ∷ String → String → STMutable s StringTokenizer 
--  native new  overloads new 
--  newβ ∷ String → String → Bool → STMutable s StringTokenizer 
--  native new  overloads new 
--  newγ ∷ String → STMutable s StringTokenizer 
--  native new  overloads new 
--  nextElement ∷ Mutable s StringTokenizer → ST s Object 
--  native nextElement 
--  nextToken ∷ Mutable s StringTokenizer → String → ST s String 
--             | Mutable s StringTokenizer → ST s String 
--  native nextToken 
--  nextTokenα ∷ Mutable s StringTokenizer → String → ST s String 
--  native nextToken  overloads nextToken 
--  nextTokenβ ∷ Mutable s StringTokenizer → ST s String 
--  native nextToken  overloads nextToken 

@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer
data StringTokenizer 


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.countTokens
countTokens ∷ Mutable s StringTokenizer → ST s Int 
native countTokens


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.hasMoreElements
hasMoreElements ∷ Mutable s StringTokenizer → ST s Bool 
native hasMoreElements


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.hasMoreTokens
hasMoreTokens ∷ Mutable s StringTokenizer → ST s Bool 
native hasMoreTokens


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer._new
new ∷ String → String → STMutable s StringTokenizer 
     | String → String → Bool → STMutable s StringTokenizer 
     | String → STMutable s StringTokenizer 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.newα
newα ∷ String → String → STMutable s StringTokenizer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.newβ
newβ ∷ String → String → Bool → STMutable s StringTokenizer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.newγ
newγ ∷ String → STMutable s StringTokenizer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.nextElement
nextElement ∷ Mutable s StringTokenizer → ST s Object 
native nextElement


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.nextToken
nextToken ∷ Mutable s StringTokenizer → String → ST s String 
           | Mutable s StringTokenizer → ST s String 
native nextToken


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.nextTokenα
nextTokenα ∷ Mutable s StringTokenizer → String → ST s String 
native nextToken  overloads nextToken


@url http://www.frege-lang.org/doc/frege/java/Util#StringTokenizer.nextTokenβ
nextTokenβ ∷ Mutable s StringTokenizer → ST s String 
native nextToken  overloads nextToken

-- | A facility for threads to schedule tasks for future execution in a background thread. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  cancel ∷ Mutable s Timer → ST s () 
--  native cancel 
--  new ∷ String → Bool → STMutable s Timer 
--       | Bool → STMutable s Timer 
--       | () → STMutable s Timer 
--       | String → STMutable s Timer 
--  native new 
--  newα ∷ String → Bool → STMutable s Timer 
--  native new  overloads new 
--  newβ ∷ Bool → STMutable s Timer 
--  native new  overloads new 
--  newγ ∷ () → STMutable s Timer 
--  native new  overloads new 
--  newδ ∷ String → STMutable s Timer 
--  native new  overloads new 
--  purge ∷ Mutable s Timer → ST s Int 
--  native purge 
--  schedule ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → ST s () 
--            | Mutable s Timer → Mutable s TimerTask → Mutable s Date → Long → ST s () 
--            | Mutable s Timer → Mutable s TimerTask → Long → ST s () 
--            | Mutable s Timer → Mutable s TimerTask → Long → Long → ST s () 
--  native schedule 
--  scheduleAtFixedRate ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → Long → ST s () 
--                       | Mutable s Timer → Mutable s TimerTask → Long → Long → ST s () 
--  native scheduleAtFixedRate 
--  scheduleAtFixedRateα ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → Long → ST s () 
--  native scheduleAtFixedRate  overloads scheduleAtFixedRate 
--  scheduleAtFixedRateβ ∷ Mutable s Timer → Mutable s TimerTask → Long → Long → ST s () 
--  native scheduleAtFixedRate  overloads scheduleAtFixedRate 
--  scheduleα ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → ST s () 
--  native schedule  overloads schedule 
--  scheduleβ ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → Long → ST s () 
--  native schedule  overloads schedule 
--  scheduleγ ∷ Mutable s Timer → Mutable s TimerTask → Long → ST s () 
--  native schedule  overloads schedule 
--  scheduleδ ∷ Mutable s Timer → Mutable s TimerTask → Long → Long → ST s () 
--  native schedule  overloads schedule 

@url http://www.frege-lang.org/doc/frege/java/Util#Timer
data Timer 


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.cancel
cancel ∷ Mutable s Timer → ST s () 
native cancel


@url http://www.frege-lang.org/doc/frege/java/Util#Timer._new
new ∷ String → Bool → STMutable s Timer 
     | Bool → STMutable s Timer 
     | () → STMutable s Timer 
     | String → STMutable s Timer 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.newα
newα ∷ String → Bool → STMutable s Timer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.newβ
newβ ∷ Bool → STMutable s Timer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.newγ
newγ ∷ () → STMutable s Timer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.newδ
newδ ∷ String → STMutable s Timer 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.purge
purge ∷ Mutable s Timer → ST s Int 
native purge


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.schedule
schedule ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → ST s () 
          | Mutable s Timer → Mutable s TimerTask → Mutable s Date → Long → ST s () 
          | Mutable s Timer → Mutable s TimerTask → Long → ST s () 
          | Mutable s Timer → Mutable s TimerTask → Long → Long → ST s () 
native schedule


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.scheduleAtFixedRate
scheduleAtFixedRate ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → Long → ST s () 
                     | Mutable s Timer → Mutable s TimerTask → Long → Long → ST s () 
native scheduleAtFixedRate


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.scheduleAtFixedRateα
scheduleAtFixedRateα ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → Long → ST s () 
native scheduleAtFixedRate  overloads scheduleAtFixedRate


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.scheduleAtFixedRateβ
scheduleAtFixedRateβ ∷ Mutable s Timer → Mutable s TimerTask → Long → Long → ST s () 
native scheduleAtFixedRate  overloads scheduleAtFixedRate


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.scheduleα
scheduleα ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → ST s () 
native schedule  overloads schedule


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.scheduleβ
scheduleβ ∷ Mutable s Timer → Mutable s TimerTask → Mutable s Date → Long → ST s () 
native schedule  overloads schedule


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.scheduleγ
scheduleγ ∷ Mutable s Timer → Mutable s TimerTask → Long → ST s () 
native schedule  overloads schedule


@url http://www.frege-lang.org/doc/frege/java/Util#Timer.scheduleδ
scheduleδ ∷ Mutable s Timer → Mutable s TimerTask → Long → Long → ST s () 
native schedule  overloads schedule

-- | A task that can be scheduled for one-time or repeated execution by a Timer. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  cancel ∷ Mutable s TimerTask → ST s Bool 
--  native cancel 
--  run ∷ Mutable s TimerTask → ST s () 
--  native run 
--  scheduledExecutionTime ∷ Mutable s TimerTask → ST s Long 
--  native scheduledExecutionTime 

@url http://www.frege-lang.org/doc/frege/java/Util#TimerTask
data TimerTask 


@url http://www.frege-lang.org/doc/frege/java/Util#TimerTask.cancel
cancel ∷ Mutable s TimerTask → ST s Bool 
native cancel


@url http://www.frege-lang.org/doc/frege/java/Util#TimerTask.run
run ∷ Mutable s TimerTask → ST s () 
native run


@url http://www.frege-lang.org/doc/frege/java/Util#TimerTask.scheduledExecutionTime
scheduledExecutionTime ∷ Mutable s TimerTask → ST s Long 
native scheduledExecutionTime

-- | A class that represents an immutable universally unique identifier (UUID). 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  clockSequence ∷ UUID → Int 
--  pure native clockSequence 
--  compareTo ∷ UUID → UUID → Int 
--  pure native compareTo 
--  equals ∷ UUID → Object → Bool 
--  pure native equals 
--  fromString ∷ String → UUID 
--  pure native java.util.UUID.fromString 
--  getLeastSignificantBits ∷ UUID → Long 
--  pure native getLeastSignificantBits 
--  getMostSignificantBits ∷ UUID → Long 
--  pure native getMostSignificantBits 
--  hashCode ∷ UUID → Int 
--  pure native hashCode 
--  nameUUIDFromBytes ∷ ArrayOf s Byte → ST s UUID 
--  native java.util.UUID.nameUUIDFromBytes 
--  new ∷ Long → Long → ST s UUID 
--  native new 
--  node ∷ UUID → Long 
--  pure native node 
--  randomUUID ∷ () → ST s UUID 
--  native java.util.UUID.randomUUID 
--  timestamp ∷ UUID → Long 
--  pure native timestamp 
--  toString ∷ UUID → String 
--  pure native toString 
--  variant ∷ UUID → Int 
--  pure native variant 
--  version ∷ UUID → Int 
--  pure native version 

@url http://www.frege-lang.org/doc/frege/java/Util#UUID
data UUID 


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.clockSequence
clockSequence ∷ UUID → Int 
pure native clockSequence


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.compareTo
compareTo ∷ UUID → UUID → Int 
pure native compareTo


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.equals
equals ∷ UUID → Object → Bool 
pure native equals


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.fromString
fromString ∷ String → UUID 
pure native java.util.UUID.fromString


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.getLeastSignificantBits
getLeastSignificantBits ∷ UUID → Long 
pure native getLeastSignificantBits


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.getMostSignificantBits
getMostSignificantBits ∷ UUID → Long 
pure native getMostSignificantBits


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.hashCode
hashCode ∷ UUID → Int 
pure native hashCode


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.nameUUIDFromBytes
nameUUIDFromBytes ∷ ArrayOf s Byte → ST s UUID 
native java.util.UUID.nameUUIDFromBytes


@url http://www.frege-lang.org/doc/frege/java/Util#UUID._new
new ∷ Long → Long → ST s UUID 
native new


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.node
node ∷ UUID → Long 
pure native node


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.randomUUID
randomUUID ∷ () → ST s UUID 
native java.util.UUID.randomUUID


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.timestamp
timestamp ∷ UUID → Long 
pure native timestamp


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.toString
toString ∷ UUID → String 
pure native toString


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.variant
variant ∷ UUID → Int 
pure native variant


@url http://www.frege-lang.org/doc/frege/java/Util#UUID.version
version ∷ UUID → Int 
pure native version


@url http://www.frege-lang.org/doc/frege/java/Util#InvalidPropertiesFormatException
data InvalidPropertiesFormatException 


@url http://www.frege-lang.org/doc/frege/java/Util#ConcurrentModificationException
data ConcurrentModificationException 


@url http://www.frege-lang.org/doc/frege/java/Util#DuplicateFormatFlagsException
data DuplicateFormatFlagsException 


@url http://www.frege-lang.org/doc/frege/java/Util#FormatFlagsConversionMismatchException
data FormatFlagsConversionMismatchException 


@url http://www.frege-lang.org/doc/frege/java/Util#FormatterClosedException
data FormatterClosedException 


@url http://www.frege-lang.org/doc/frege/java/Util#IllegalFormatCodePointException
data IllegalFormatCodePointException 


@url http://www.frege-lang.org/doc/frege/java/Util#IllegalFormatConversionException
data IllegalFormatConversionException 


@url http://www.frege-lang.org/doc/frege/java/Util#IllegalFormatException
data IllegalFormatException 


@url http://www.frege-lang.org/doc/frege/java/Util#IllegalFormatFlagsException
data IllegalFormatFlagsException 


@url http://www.frege-lang.org/doc/frege/java/Util#IllegalFormatPrecisionException
data IllegalFormatPrecisionException 


@url http://www.frege-lang.org/doc/frege/java/Util#IllegalFormatWidthException
data IllegalFormatWidthException 


@url http://www.frege-lang.org/doc/frege/java/Util#IllformedLocaleException
data IllformedLocaleException 


@url http://www.frege-lang.org/doc/frege/java/Util#InputMismatchException
data InputMismatchException 


@url http://www.frege-lang.org/doc/frege/java/Util#MissingFormatArgumentException
data MissingFormatArgumentException 


@url http://www.frege-lang.org/doc/frege/java/Util#MissingFormatWidthException
data MissingFormatWidthException 


@url http://www.frege-lang.org/doc/frege/java/Util#MissingResourceException
data MissingResourceException 


@url http://www.frege-lang.org/doc/frege/java/Util#ServiceConfigurationError
data ServiceConfigurationError 


@url http://www.frege-lang.org/doc/frege/java/Util#TooManyListenersException
data TooManyListenersException 


@url http://www.frege-lang.org/doc/frege/java/Util#UnknownFormatConversionException
data UnknownFormatConversionException 


@url http://www.frege-lang.org/doc/frege/java/Util#UnknownFormatFlagsException
data UnknownFormatFlagsException 


@url http://www.frege-lang.org/doc/frege/java/Util#ReadableByteChannel
data ReadableByteChannel 


@url http://www.frege-lang.org/doc/frege/java/Util#Path
data Path 


@url http://www.frege-lang.org/doc/frege/java/Util#BigDecimal
data BigDecimal 


@url http://www.frege-lang.org/doc/frege/java/Util#ByteBuffer
data ByteBuffer 


@url http://www.frege-lang.org/doc/frege/java/Util#LongBuffer
data LongBuffer 


@url http://www.frege-lang.org/doc/frege/java/Util#Permission
data Permission 


@url http://www.frege-lang.org/doc/frege/java/Util#PermissionCollection
data PermissionCollection 

-- | The Double value that is closer than any other to e, the base of the natural logarithms.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#e
e ∷ Double 
pure native java.lang.Math.E

-- | The Double value that is closer than any other to pi, the ratio of the circumference of a circle to its diameter.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#pi
pi ∷ Double 
pure native java.lang.Math.PI

-- | Returns the arc cosine of a value; the returned angle is in the range 0.0 through pi.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#acos
acos ∷ Float → Double 
      | Double → Double 
pure native java.lang.Math.acos

-- | Returns the arc cosine of a value; the returned angle is in the range 0.0 through pi.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#acosα
acosα ∷ Float → Double 
pure native java.lang.Math.acos  overloads acos

-- | Returns the arc cosine of a value; the returned angle is in the range 0.0 through pi.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#acosβ
acosβ ∷ Double → Double 
pure native java.lang.Math.acos  overloads acos

-- | Returns the arc sine of a value; the returned angle is in the range -pi/2 through pi/2.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#asin
asin ∷ Float → Double 
      | Double → Double 
pure native java.lang.Math.asin

-- | Returns the arc sine of a value; the returned angle is in the range -pi/2 through pi/2.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#asinα
asinα ∷ Float → Double 
pure native java.lang.Math.asin  overloads asin

-- | Returns the arc sine of a value; the returned angle is in the range -pi/2 through pi/2.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#asinβ
asinβ ∷ Double → Double 
pure native java.lang.Math.asin  overloads asin

-- | Returns the arc tangent of a value; the returned angle is in the range -pi/2 through pi/2.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#atan
atan ∷ Float → Double 
      | Double → Double 
pure native java.lang.Math.atan

-- | Returns the arc tangent of a value; the returned angle is in the range -pi/2 through pi/2.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#atanα
atanα ∷ Float → Double 
pure native java.lang.Math.atan  overloads atan

-- | Returns the arc tangent of a value; the returned angle is in the range -pi/2 through pi/2.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#atanβ
atanβ ∷ Double → Double 
pure native java.lang.Math.atan  overloads atan

-- | Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#atan2
atan2 ∷ Double → Double → Double 
       | Float → Float → Double 
pure native java.lang.Math.atan2

-- | Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#atan2α
atan2α ∷ Double → Double → Double 
pure native java.lang.Math.atan2  overloads atan2

-- | Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#atan2β
atan2β ∷ Float → Float → Double 
pure native java.lang.Math.atan2  overloads atan2

-- | Returns the cube root of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#cbrt
cbrt ∷ Double → Double 
      | Float → Double 
pure native java.lang.Math.cbrt

-- | Returns the cube root of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#cbrtα
cbrtα ∷ Double → Double 
pure native java.lang.Math.cbrt  overloads cbrt

-- | Returns the cube root of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#cbrtβ
cbrtβ ∷ Float → Double 
pure native java.lang.Math.cbrt  overloads cbrt

-- | Returns the smallest (closest to negative infinity) value that is greater than or equal to the argument and is equal to a mathematical integer.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#ceil
ceil ∷ Double → Double 
      | Float → Double 
pure native java.lang.Math.ceil

-- | Returns the smallest (closest to negative infinity) value that is greater than or equal to the argument and is equal to a mathematical integer.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#ceilα
ceilα ∷ Double → Double 
pure native java.lang.Math.ceil  overloads ceil

-- | Returns the smallest (closest to negative infinity) value that is greater than or equal to the argument and is equal to a mathematical integer.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#ceilβ
ceilβ ∷ Float → Double 
pure native java.lang.Math.ceil  overloads ceil

-- | Returns the first argument with the sign of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#copySign
copySign ∷ Double → Double → Double 
          | Float → Float → Float 
pure native java.lang.Math.copySign

-- | Returns the first argument with the sign of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#copySignα
copySignα ∷ Double → Double → Double 
pure native java.lang.Math.copySign  overloads copySign

-- | Returns the first argument with the sign of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#copySignβ
copySignβ ∷ Float → Float → Float 
pure native java.lang.Math.copySign  overloads copySign

-- | Returns the trigonometric cosine of an angle.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#cos
cos ∷ Double → Double 
     | Float → Double 
pure native java.lang.Math.cos

-- | Returns the trigonometric cosine of an angle.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#cosα
cosα ∷ Double → Double 
pure native java.lang.Math.cos  overloads cos

-- | Returns the trigonometric cosine of an angle.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#cosβ
cosβ ∷ Float → Double 
pure native java.lang.Math.cos  overloads cos

-- | Returns the hyperbolic cosine of a floating point value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#cosh
cosh ∷ Double → Double 
      | Float → Double 
pure native java.lang.Math.cosh

-- | Returns the hyperbolic cosine of a floating point value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#coshα
coshα ∷ Double → Double 
pure native java.lang.Math.cosh  overloads cosh

-- | Returns the hyperbolic cosine of a floating point value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#coshβ
coshβ ∷ Float → Double 
pure native java.lang.Math.cosh  overloads cosh

-- | Returns Euler's number e raised to the power of a floating-point value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#exp
exp ∷ Double → Double 
     | Float → Double 
pure native java.lang.Math.exp

-- | Returns Euler's number e raised to the power of a floating-point value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#expα
expα ∷ Double → Double 
pure native java.lang.Math.exp  overloads exp

-- | Returns Euler's number e raised to the power of a floating-point value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#expβ
expβ ∷ Float → Double 
pure native java.lang.Math.exp  overloads exp

-- | Returns e^x -1.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#expm1
expm1 ∷ Double → Double 
       | Float → Double 
pure native java.lang.Math.expm1

-- | Returns e^x -1.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#expm1α
expm1α ∷ Double → Double 
pure native java.lang.Math.expm1  overloads expm1

-- | Returns e^x -1.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#expm1β
expm1β ∷ Float → Double 
pure native java.lang.Math.expm1  overloads expm1

-- | Returns the largest (closest to positive infinity) value that is less than or equal to the argument and is equal to a mathematical integer. 
--   Special cases: If the argument value is already equal to a mathematical integer, then the result is the same as the argument. If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument. 
@url http://www.frege-lang.org/doc/frege/java/lang/Math#floor
floor ∷ Double → Double 
       | Float → Double 
pure native java.lang.Math.floor

-- | Returns the largest (closest to positive infinity) value that is less than or equal to the argument and is equal to a mathematical integer. 
--   Special cases: If the argument value is already equal to a mathematical integer, then the result is the same as the argument. If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument. 
@url http://www.frege-lang.org/doc/frege/java/lang/Math#floorα
floorα ∷ Double → Double 
pure native java.lang.Math.floor  overloads floor

-- | Returns the largest (closest to positive infinity) value that is less than or equal to the argument and is equal to a mathematical integer. 
--   Special cases: If the argument value is already equal to a mathematical integer, then the result is the same as the argument. If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument. 
@url http://www.frege-lang.org/doc/frege/java/lang/Math#floorβ
floorβ ∷ Float → Double 
pure native java.lang.Math.floor  overloads floor

-- | Returns the unbiased exponent used in the representation of a floating point number.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#getExponent
getExponent ∷ Double → Int 
             | Float → Int 
pure native java.lang.Math.getExponent

-- | Returns the unbiased exponent used in the representation of a floating point number.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#getExponentα
getExponentα ∷ Double → Int 
pure native java.lang.Math.getExponent  overloads getExponent

-- | Returns the unbiased exponent used in the representation of a floating point number.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#getExponentβ
getExponentβ ∷ Float → Int 
pure native java.lang.Math.getExponent  overloads getExponent

-- | Returns sqrt (x² + y²) without intermediate overflow or underflow.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#hypot
hypot ∷ Double → Double → Double 
       | Float → Float → Double 
pure native java.lang.Math.hypot

-- | Returns sqrt (x² + y²) without intermediate overflow or underflow.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#hypotα
hypotα ∷ Double → Double → Double 
pure native java.lang.Math.hypot  overloads hypot

-- | Returns sqrt (x² + y²) without intermediate overflow or underflow.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#hypotβ
hypotβ ∷ Float → Float → Double 
pure native java.lang.Math.hypot  overloads hypot

-- | Computes the remainder operation on two arguments as prescribed by the IEEE 754 standard.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#ieeeRemainder
ieeeRemainder ∷ Double → Double → Double 
               | Float → Float → Double 
pure native java.lang.Math.IEEEremainder

-- | Computes the remainder operation on two arguments as prescribed by the IEEE 754 standard.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#ieeeRemainderα
ieeeRemainderα ∷ Double → Double → Double 
pure native java.lang.Math.IEEEremainder  overloads ieeeRemainder

-- | Computes the remainder operation on two arguments as prescribed by the IEEE 754 standard.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#ieeeRemainderβ
ieeeRemainderβ ∷ Float → Float → Double 
pure native java.lang.Math.IEEEremainder  overloads ieeeRemainder

-- | Returns the natural logarithm (base e) of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#log
log ∷ Double → Double 
     | Float → Double 
pure native java.lang.Math.log

-- | Returns the natural logarithm (base e) of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#logα
logα ∷ Double → Double 
pure native java.lang.Math.log  overloads log

-- | Returns the natural logarithm (base e) of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#logβ
logβ ∷ Float → Double 
pure native java.lang.Math.log  overloads log

-- | Returns the base 10 logarithm of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#log10
log10 ∷ Double → Double 
       | Float → Double 
pure native java.lang.Math.log10

-- | Returns the base 10 logarithm of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#log10α
log10α ∷ Double → Double 
pure native java.lang.Math.log10  overloads log10

-- | Returns the base 10 logarithm of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#log10β
log10β ∷ Float → Double 
pure native java.lang.Math.log10  overloads log10

-- | Returns the natural logarithm of the sum of the argument and 1.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#log1p
log1p ∷ Double → Double 
       | Float → Double 
pure native java.lang.Math.log1p

-- | Returns the natural logarithm of the sum of the argument and 1.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#log1pα
log1pα ∷ Double → Double 
pure native java.lang.Math.log1p  overloads log1p

-- | Returns the natural logarithm of the sum of the argument and 1.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#log1pβ
log1pβ ∷ Float → Double 
pure native java.lang.Math.log1p  overloads log1p

-- | Returns the floating-point number adjacent to the first argument in the direction of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#nextAfter
nextAfter ∷ Double → Double → Double 
           | Float → Float → Double 
pure native java.lang.Math.nextAfter

-- | Returns the floating-point number adjacent to the first argument in the direction of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#nextAfterα
nextAfterα ∷ Double → Double → Double 
pure native java.lang.Math.nextAfter  overloads nextAfter

-- | Returns the floating-point number adjacent to the first argument in the direction of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#nextAfterβ
nextAfterβ ∷ Float → Float → Double 
pure native java.lang.Math.nextAfter  overloads nextAfter

-- | Returns the floating-point value adjacent to the argument in the direction of positive infinity.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#nextUp
nextUp ∷ Double → Double 
        | Float → Float 
pure native java.lang.Math.nextUp

-- | Returns the floating-point value adjacent to the argument in the direction of positive infinity.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#nextUpα
nextUpα ∷ Double → Double 
pure native java.lang.Math.nextUp  overloads nextUp

-- | Returns the floating-point value adjacent to the argument in the direction of positive infinity.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#nextUpβ
nextUpβ ∷ Float → Float 
pure native java.lang.Math.nextUp  overloads nextUp

-- | Returns the value of the first argument raised to the power of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#_star_star
(**) ∷  Double → Double → Double 
    | Float → Float → Double 
pure native java.lang.Math.pow 
infixr  15

-- | Returns the value of the first argument raised to the power of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#_star_starα
**α ∷ Double → Double → Double 
pure native java.lang.Math.pow  overloads ** 
infixr  15

-- | Returns the value of the first argument raised to the power of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#_star_starβ
**β ∷ Float → Float → Double 
pure native java.lang.Math.pow  overloads ** 
infixr  15

-- | Returns the value of the first argument raised to the power of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#pow
pow ∷ Double → Double → Double 
     | Float → Float → Double 
pure native java.lang.Math.pow

-- | Returns the value of the first argument raised to the power of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#powα
powα ∷ Double → Double → Double 
pure native java.lang.Math.pow  overloads pow

-- | Returns the value of the first argument raised to the power of the second argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#powβ
powβ ∷ Float → Float → Double 
pure native java.lang.Math.pow  overloads pow

-- | Returns the Double value that is closest in value to the argument and is equal to a mathematical integer.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#rint
rint ∷ Double → Double 
      | Float → Double 
pure native java.lang.Math.rint

-- | Returns the Double value that is closest in value to the argument and is equal to a mathematical integer.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#rintα
rintα ∷ Double → Double 
pure native java.lang.Math.rint  overloads rint

-- | Returns the Double value that is closest in value to the argument and is equal to a mathematical integer.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#rintβ
rintβ ∷ Float → Double 
pure native java.lang.Math.rint  overloads rint

-- | Returns the closest Long to the argument, with ties rounding up.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#round
round ∷ Double → Long 
       | Float → Long 
pure native java.lang.Math.round

-- | Returns the closest Long to the argument, with ties rounding up.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#roundα
roundα ∷ Double → Long 
pure native java.lang.Math.round  overloads round

-- | Returns the closest Long to the argument, with ties rounding up.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#roundβ
roundβ ∷ Float → Long 
pure native java.lang.Math.round  overloads round

-- | scalb d scaleFactor 
--   Return d * 2^scaleFactor rounded as if performed by a single correctly rounded floating-point multiply.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#scalb
scalb ∷ Double → Int → Double 
       | Float → Int → Float 
pure native java.lang.Math.scalb

-- | scalb d scaleFactor 
--   Return d * 2^scaleFactor rounded as if performed by a single correctly rounded floating-point multiply.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#scalbα
scalbα ∷ Double → Int → Double 
pure native java.lang.Math.scalb  overloads scalb

-- | scalb d scaleFactor 
--   Return d * 2^scaleFactor rounded as if performed by a single correctly rounded floating-point multiply.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#scalbβ
scalbβ ∷ Float → Int → Float 
pure native java.lang.Math.scalb  overloads scalb

-- | Returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#signum
signum ∷ Double → Double 
        | Float → Float 
pure native java.lang.Math.signum

-- | Returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#signumα
signumα ∷ Double → Double 
pure native java.lang.Math.signum  overloads signum

-- | Returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#signumβ
signumβ ∷ Float → Float 
pure native java.lang.Math.signum  overloads signum

-- | Returns the trigonometric sine of an angle.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#sin
sin ∷ Double → Double 
     | Float → Double 
pure native java.lang.Math.sin

-- | Returns the trigonometric sine of an angle.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#sinα
sinα ∷ Double → Double 
pure native java.lang.Math.sin  overloads sin

-- | Returns the trigonometric sine of an angle.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#sinβ
sinβ ∷ Float → Double 
pure native java.lang.Math.sin  overloads sin

-- | Returns the hyperbolic sine of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#sinh
sinh ∷ Double → Double 
      | Float → Double 
pure native java.lang.Math.sinh

-- | Returns the hyperbolic sine of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#sinhα
sinhα ∷ Double → Double 
pure native java.lang.Math.sinh  overloads sinh

-- | Returns the hyperbolic sine of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#sinhβ
sinhβ ∷ Float → Double 
pure native java.lang.Math.sinh  overloads sinh

-- | Returns the correctly rounded positive square root of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#sqrt
sqrt ∷ Double → Double 
      | Float → Double 
pure native java.lang.Math.sqrt

-- | Returns the correctly rounded positive square root of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#sqrtα
sqrtα ∷ Double → Double 
pure native java.lang.Math.sqrt  overloads sqrt

-- | Returns the correctly rounded positive square root of a value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#sqrtβ
sqrtβ ∷ Float → Double 
pure native java.lang.Math.sqrt  overloads sqrt

-- | Returns the trigonometric tangent of an angle.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#tan
tan ∷ Double → Double 
     | Float → Double 
pure native java.lang.Math.tan

-- | Returns the trigonometric tangent of an angle.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#tanα
tanα ∷ Double → Double 
pure native java.lang.Math.tan  overloads tan

-- | Returns the trigonometric tangent of an angle.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#tanβ
tanβ ∷ Float → Double 
pure native java.lang.Math.tan  overloads tan

-- | Returns the hyperbolic tangent of a floating point value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#tanh
tanh ∷ Double → Double 
      | Float → Double 
pure native java.lang.Math.tanh

-- | Returns the hyperbolic tangent of a floating point value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#tanhα
tanhα ∷ Double → Double 
pure native java.lang.Math.tanh  overloads tanh

-- | Returns the hyperbolic tangent of a floating point value.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#tanhβ
tanhβ ∷ Float → Double 
pure native java.lang.Math.tanh  overloads tanh

-- | Converts an angle measured in radians to an approximately equivalent angle measured in degrees.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#toDegrees
toDegrees ∷ Double → Double 
           | Float → Double 
pure native java.lang.Math.toDegrees

-- | Converts an angle measured in radians to an approximately equivalent angle measured in degrees.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#toDegreesα
toDegreesα ∷ Double → Double 
pure native java.lang.Math.toDegrees  overloads toDegrees

-- | Converts an angle measured in radians to an approximately equivalent angle measured in degrees.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#toDegreesβ
toDegreesβ ∷ Float → Double 
pure native java.lang.Math.toDegrees  overloads toDegrees

-- | Converts an angle measured in degrees to an approximately equivalent angle measured in radians.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#toRadians
toRadians ∷ Double → Double 
           | Float → Double 
pure native java.lang.Math.toRadians

-- | Converts an angle measured in degrees to an approximately equivalent angle measured in radians.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#toRadiansα
toRadiansα ∷ Double → Double 
pure native java.lang.Math.toRadians  overloads toRadians

-- | Converts an angle measured in degrees to an approximately equivalent angle measured in radians.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#toRadiansβ
toRadiansβ ∷ Float → Double 
pure native java.lang.Math.toRadians  overloads toRadians

-- | Returns the size of an ulp of the argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#ulp
ulp ∷ Double → Double 
     | Float → Float 
pure native java.lang.Math.ulp

-- | Returns the size of an ulp of the argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#ulpα
ulpα ∷ Double → Double 
pure native java.lang.Math.ulp  overloads ulp

-- | Returns the size of an ulp of the argument.  
@url http://www.frege-lang.org/doc/frege/java/lang/Math#ulpβ
ulpβ ∷ Float → Float 
pure native java.lang.Math.ulp  overloads ulp

-- | The type Process provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process. 
--   An instance of Process can be obtained from the Process.exec or ProcessBuilder.start methods. 
--   Member Functions
--  ----------------
--  destroy ∷ Process → IO () 
--  native destroy 
--   Kills the subprocess. The subprocess represented by this Process object is forcibly terminated.   
--  exec ∷ ArrayOf RealWorld String → Maybe (ArrayOf RealWorld String) → Maybe (MutableIO File) → IO Process 
--            throws IOException 
--        | String → IO Process 
--            throws IOException 
--  native java.lang.Runtime.getRuntime().exec 
--   Process.exec cmdarray envp dir Process.exec "command" 
--   Executes the specified command and arguments in a separate process with the specified environment and working directory. 
--   Given an array of strings cmdarray, representing the tokens of a command line, and an array of strings envp, representing "environment" variable settings, this method creates a new process in which to execute the specified command. 
--   This method checks that cmdarray is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings. 
--   If envp is Maybe.Nothing, the subprocess inherits the environment settings of the current process. 
--   A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the specified environment. 
--   The working directory of the new subprocess is specified by dir. If dir is Maybe.Nothing, the subprocess inherits the current working directory of the current process. 
--   If a security manager exists, its checkExec method is invoked with the first component of the array cmdarray as its argument. This may result in a SecurityException being thrown. 
--   Starting an operating system process is highly system-dependent. Among the many things that can go wrong are: The operating system program file was not found. Access to the program file was denied. The working directory does not exist. 
--   In such cases an exception will be thrown. The exact nature of the exception is system-dependent, but it will always be a subclass of IOException.  
--   Returns: 
--  A new Process object for managing the subprocess  
--   Throws: 
--  SecurityException - If a security manager exists and its checkExec method doesn't allow creation of the subprocess IOException - If an I/O error occurs NullPointerException - If one of the elements of the passed arrays is null IndexOutOfBoundsException - If cmdarray is an empty array (has length 0)  
--  execα ∷ ArrayOf RealWorld String → Maybe (ArrayOf RealWorld String) → Maybe (MutableIO File) → IO Process 
--  native java.lang.Runtime.getRuntime().exec  throws IOException  overloads exec 
--   Process.exec cmdarray envp dir Process.exec "command" 
--   Executes the specified command and arguments in a separate process with the specified environment and working directory. 
--   Given an array of strings cmdarray, representing the tokens of a command line, and an array of strings envp, representing "environment" variable settings, this method creates a new process in which to execute the specified command. 
--   This method checks that cmdarray is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings. 
--   If envp is Maybe.Nothing, the subprocess inherits the environment settings of the current process. 
--   A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the specified environment. 
--   The working directory of the new subprocess is specified by dir. If dir is Maybe.Nothing, the subprocess inherits the current working directory of the current process. 
--   If a security manager exists, its checkExec method is invoked with the first component of the array cmdarray as its argument. This may result in a SecurityException being thrown. 
--   Starting an operating system process is highly system-dependent. Among the many things that can go wrong are: The operating system program file was not found. Access to the program file was denied. The working directory does not exist. 
--   In such cases an exception will be thrown. The exact nature of the exception is system-dependent, but it will always be a subclass of IOException.  
--   Returns: 
--  A new Process object for managing the subprocess  
--   Throws: 
--  SecurityException - If a security manager exists and its checkExec method doesn't allow creation of the subprocess IOException - If an I/O error occurs NullPointerException - If one of the elements of the passed arrays is null IndexOutOfBoundsException - If cmdarray is an empty array (has length 0)  
--  execβ ∷ String → IO Process 
--  native java.lang.Runtime.getRuntime().exec  throws IOException  overloads exec 
--   Process.exec cmdarray envp dir Process.exec "command" 
--   Executes the specified command and arguments in a separate process with the specified environment and working directory. 
--   Given an array of strings cmdarray, representing the tokens of a command line, and an array of strings envp, representing "environment" variable settings, this method creates a new process in which to execute the specified command. 
--   This method checks that cmdarray is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings. 
--   If envp is Maybe.Nothing, the subprocess inherits the environment settings of the current process. 
--   A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the specified environment. 
--   The working directory of the new subprocess is specified by dir. If dir is Maybe.Nothing, the subprocess inherits the current working directory of the current process. 
--   If a security manager exists, its checkExec method is invoked with the first component of the array cmdarray as its argument. This may result in a SecurityException being thrown. 
--   Starting an operating system process is highly system-dependent. Among the many things that can go wrong are: The operating system program file was not found. Access to the program file was denied. The working directory does not exist. 
--   In such cases an exception will be thrown. The exact nature of the exception is system-dependent, but it will always be a subclass of IOException.  
--   Returns: 
--  A new Process object for managing the subprocess  
--   Throws: 
--  SecurityException - If a security manager exists and its checkExec method doesn't allow creation of the subprocess IOException - If an I/O error occurs NullPointerException - If one of the elements of the passed arrays is null IndexOutOfBoundsException - If cmdarray is an empty array (has length 0)  
--  exitValue ∷ Process → IO Int 
--  native exitValue  throws IllegalThreadStateException 
--   Returns the exit value for the subprocess represented by this Process object. 
--   By convention, the value 0 indicates normal termination.   
--  getErrorStream ∷ Process → IO InputStream 
--  native getErrorStream 
--   Returns the input stream connected to the standard error output of the subprocess. The stream obtains data piped from the error output of the process represented by this Process object. 
--   If the standard error of the subprocess has been redirected using ProcessBuilder.redirectError or ProcessBuilder.redirectErrorStream then this method will return an input stream, for which the InputStream.read method always returns -1, the InputStream.available method returns always 0 and the InputStream.close method does nothing.  
--  getInputStream ∷ Process → IO InputStream 
--  native getInputStream 
--   Returns the input stream connected to the standard output of the subprocess. The stream obtains data piped from the standard output of the process represented by this Process object. 
--   If the standard output of the subprocess has been redirected using ProcessBuilder.redirectOutput then this method will return an input stream, for which the InputStream.read method always returns -1, the InputStream.available method returns always 0 and the InputStream.close method does nothing. 
--   Otherwise, if the standard error of the subprocess has been redirected using ProcessBuilder.redirectErrorStream then the input stream returned by this method will receive the merged standard output and the standard error of the subprocess.  
--  getOutputStream ∷ Process → IO OutputStream 
--  native getOutputStream 
--   Returns the output stream connected to the standard input of the subprocess. Output to the stream is piped into the standard input of the process represented by this Process object. 
--   If the standard input of the subprocess has been redirected using ProcessBuilder.redirectInput then this method will return an output stream for which the OutputStream.write method always throws IOException and the OutputStream.close method does nothing.  
--  waitFor ∷ Process → IO Int 
--  native waitFor  throws InterruptedException 
--   Causes the current thread to wait, if necessary, until the process represented by this Process object has terminated. This method returns immediately if the subprocess has already terminated. If the subprocess has not yet terminated, the calling thread will be blocked until the subprocess exits.  
--   Returns: 
--  the exit value of the subprocess represented by this Process object. By convention, the value 0 indicates normal termination.  
--   Throws: 
--  InterruptedException if the current Thread is interrupted by another Thread while it is waiting.     
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process
data Process 

-- | Kills the subprocess. The subprocess represented by this Process object is forcibly terminated.  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process.destroy
destroy ∷ Process → IO () 
native destroy

-- | Process.exec cmdarray envp dir Process.exec "command" 
--   Executes the specified command and arguments in a separate process with the specified environment and working directory. 
--   Given an array of strings cmdarray, representing the tokens of a command line, and an array of strings envp, representing "environment" variable settings, this method creates a new process in which to execute the specified command. 
--   This method checks that cmdarray is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings. 
--   If envp is Maybe.Nothing, the subprocess inherits the environment settings of the current process. 
--   A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the specified environment. 
--   The working directory of the new subprocess is specified by dir. If dir is Maybe.Nothing, the subprocess inherits the current working directory of the current process. 
--   If a security manager exists, its checkExec method is invoked with the first component of the array cmdarray as its argument. This may result in a SecurityException being thrown. 
--   Starting an operating system process is highly system-dependent. Among the many things that can go wrong are: The operating system program file was not found. Access to the program file was denied. The working directory does not exist. 
--   In such cases an exception will be thrown. The exact nature of the exception is system-dependent, but it will always be a subclass of IOException.  
--   Returns: 
--  A new Process object for managing the subprocess  
--   Throws: 
--  SecurityException - If a security manager exists and its checkExec method doesn't allow creation of the subprocess IOException - If an I/O error occurs NullPointerException - If one of the elements of the passed arrays is null IndexOutOfBoundsException - If cmdarray is an empty array (has length 0) 
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process.exec
exec ∷ ArrayOf RealWorld String → Maybe (ArrayOf RealWorld String) → Maybe (MutableIO File) → IO Process 
          throws IOException 
      | String → IO Process 
          throws IOException 
native java.lang.Runtime.getRuntime().exec

-- | Process.exec cmdarray envp dir Process.exec "command" 
--   Executes the specified command and arguments in a separate process with the specified environment and working directory. 
--   Given an array of strings cmdarray, representing the tokens of a command line, and an array of strings envp, representing "environment" variable settings, this method creates a new process in which to execute the specified command. 
--   This method checks that cmdarray is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings. 
--   If envp is Maybe.Nothing, the subprocess inherits the environment settings of the current process. 
--   A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the specified environment. 
--   The working directory of the new subprocess is specified by dir. If dir is Maybe.Nothing, the subprocess inherits the current working directory of the current process. 
--   If a security manager exists, its checkExec method is invoked with the first component of the array cmdarray as its argument. This may result in a SecurityException being thrown. 
--   Starting an operating system process is highly system-dependent. Among the many things that can go wrong are: The operating system program file was not found. Access to the program file was denied. The working directory does not exist. 
--   In such cases an exception will be thrown. The exact nature of the exception is system-dependent, but it will always be a subclass of IOException.  
--   Returns: 
--  A new Process object for managing the subprocess  
--   Throws: 
--  SecurityException - If a security manager exists and its checkExec method doesn't allow creation of the subprocess IOException - If an I/O error occurs NullPointerException - If one of the elements of the passed arrays is null IndexOutOfBoundsException - If cmdarray is an empty array (has length 0) 
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process.execα
execα ∷ ArrayOf RealWorld String → Maybe (ArrayOf RealWorld String) → Maybe (MutableIO File) → IO Process 
native java.lang.Runtime.getRuntime().exec  throws IOException  overloads exec

-- | Process.exec cmdarray envp dir Process.exec "command" 
--   Executes the specified command and arguments in a separate process with the specified environment and working directory. 
--   Given an array of strings cmdarray, representing the tokens of a command line, and an array of strings envp, representing "environment" variable settings, this method creates a new process in which to execute the specified command. 
--   This method checks that cmdarray is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings. 
--   If envp is Maybe.Nothing, the subprocess inherits the environment settings of the current process. 
--   A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the specified environment. 
--   The working directory of the new subprocess is specified by dir. If dir is Maybe.Nothing, the subprocess inherits the current working directory of the current process. 
--   If a security manager exists, its checkExec method is invoked with the first component of the array cmdarray as its argument. This may result in a SecurityException being thrown. 
--   Starting an operating system process is highly system-dependent. Among the many things that can go wrong are: The operating system program file was not found. Access to the program file was denied. The working directory does not exist. 
--   In such cases an exception will be thrown. The exact nature of the exception is system-dependent, but it will always be a subclass of IOException.  
--   Returns: 
--  A new Process object for managing the subprocess  
--   Throws: 
--  SecurityException - If a security manager exists and its checkExec method doesn't allow creation of the subprocess IOException - If an I/O error occurs NullPointerException - If one of the elements of the passed arrays is null IndexOutOfBoundsException - If cmdarray is an empty array (has length 0) 
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process.execβ
execβ ∷ String → IO Process 
native java.lang.Runtime.getRuntime().exec  throws IOException  overloads exec

-- | Returns the exit value for the subprocess represented by this Process object. 
--   By convention, the value 0 indicates normal termination.  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process.exitValue
exitValue ∷ Process → IO Int 
native exitValue  throws IllegalThreadStateException

-- | Returns the input stream connected to the standard error output of the subprocess. The stream obtains data piped from the error output of the process represented by this Process object. 
--   If the standard error of the subprocess has been redirected using ProcessBuilder.redirectError or ProcessBuilder.redirectErrorStream then this method will return an input stream, for which the InputStream.read method always returns -1, the InputStream.available method returns always 0 and the InputStream.close method does nothing. 
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process.getErrorStream
getErrorStream ∷ Process → IO InputStream 
native getErrorStream

-- | Returns the input stream connected to the standard output of the subprocess. The stream obtains data piped from the standard output of the process represented by this Process object. 
--   If the standard output of the subprocess has been redirected using ProcessBuilder.redirectOutput then this method will return an input stream, for which the InputStream.read method always returns -1, the InputStream.available method returns always 0 and the InputStream.close method does nothing. 
--   Otherwise, if the standard error of the subprocess has been redirected using ProcessBuilder.redirectErrorStream then the input stream returned by this method will receive the merged standard output and the standard error of the subprocess. 
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process.getInputStream
getInputStream ∷ Process → IO InputStream 
native getInputStream

-- | Returns the output stream connected to the standard input of the subprocess. Output to the stream is piped into the standard input of the process represented by this Process object. 
--   If the standard input of the subprocess has been redirected using ProcessBuilder.redirectInput then this method will return an output stream for which the OutputStream.write method always throws IOException and the OutputStream.close method does nothing. 
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process.getOutputStream
getOutputStream ∷ Process → IO OutputStream 
native getOutputStream

-- | Causes the current thread to wait, if necessary, until the process represented by this Process object has terminated. This method returns immediately if the subprocess has already terminated. If the subprocess has not yet terminated, the calling thread will be blocked until the subprocess exits.  
--   Returns: 
--  the exit value of the subprocess represented by this Process object. By convention, the value 0 indicates normal termination.  
--   Throws: 
--  InterruptedException if the current Thread is interrupted by another Thread while it is waiting.   
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Process.waitFor
waitFor ∷ Process → IO Int 
native waitFor  throws InterruptedException

-- | Convenience function to get an UTF-8 encoded PrintWriter that is connected to the standard input of a Process. 
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#stdinWriter
stdinWriter ∷ Process → IO PrintWriter

-- | Convenience function to get an UTF-8 encoded BufferedReader that is connected to the standard output of a Process. 
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#stdoutReader
stdoutReader ∷ Process → IO BufferedReader

-- | Convenience function to get an UTF-8 encoded BufferedReader that is connected to the standard error of a Process. 
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#stderrReader
stderrReader ∷ Process → IO BufferedReader

-- | Represents a source of subprocess input or a destination of subprocess output. Each Redirect is one of the following: the special value Redirect.pipe the special value Redirect.inherit a redirection to read from a file, created by an invocation of Redirect.from a redirection to write to a file, created by an invocation of Redirect.to a redirection to append to a file, created by an invocation of Redirect.appendTo 
--   Member Functions
--  ----------------
--  appendTo ∷ MutableIO File → IO Redirect 
--  native java.lang.ProcessBuilder.Redirect.appendTo 
--   Redirect to append to the specified file. 
--   Each write operation first advances the position to the end of the file and then writes the requested data.   
--  file ∷ Redirect → IO (Maybe (MutableIO File)) 
--  native file 
--   Returns the File source or destination associated with this redirect, or null if there is no such file.   
--  from ∷ MutableIO File → IO Redirect 
--  native java.lang.ProcessBuilder.Redirect.from 
--   Redirect to read from the specified File.   
--  inherit ∷ Redirect 
--  native java.lang.ProcessBuilder.Redirect.INHERIT 
--   nowarn: We know this is constant 
--   Indicates that subprocess I/O source or destination will be the same as those of the current process. 
--   This is the normal behavior of most operating system command interpreters (shells).   
--  pipe ∷ Redirect 
--  native java.lang.ProcessBuilder.Redirect.PIPE 
--   nowarn: We know this is constant 
--   Indicates that subprocess I/O will be connected to the current Java process over a pipe. 
--   This is the default handling of subprocess standard I/O.   
--  to ∷ MutableIO File → IO Redirect 
--  native java.lang.ProcessBuilder.Redirect.to 
--   Redirect to write to the specified file, discarding previous content, if any.    
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Redirect
data Redirect 

-- | Redirect to append to the specified file. 
--   Each write operation first advances the position to the end of the file and then writes the requested data.  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Redirect.appendTo
appendTo ∷ MutableIO File → IO Redirect 
native java.lang.ProcessBuilder.Redirect.appendTo

-- | Returns the File source or destination associated with this redirect, or null if there is no such file.  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Redirect.file
file ∷ Redirect → IO (Maybe (MutableIO File)) 
native file

-- | Redirect to read from the specified File.  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Redirect.from
from ∷ MutableIO File → IO Redirect 
native java.lang.ProcessBuilder.Redirect.from

-- | nowarn: We know this is constant 
--   Indicates that subprocess I/O source or destination will be the same as those of the current process. 
--   This is the normal behavior of most operating system command interpreters (shells).  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Redirect.inherit
inherit ∷ Redirect 
native java.lang.ProcessBuilder.Redirect.INHERIT

-- | nowarn: We know this is constant 
--   Indicates that subprocess I/O will be connected to the current Java process over a pipe. 
--   This is the default handling of subprocess standard I/O.  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Redirect.pipe
pipe ∷ Redirect 
native java.lang.ProcessBuilder.Redirect.PIPE

-- | Redirect to write to the specified file, discarding previous content, if any.  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#Redirect.to
to ∷ MutableIO File → IO Redirect 
native java.lang.ProcessBuilder.Redirect.to

-- | The ProcessBuilder type is used to create operating system processes. 
--   Each ProcessBuilder manages a collection of process attributes. The ProcessBuilder.start method creates a new Process instance with those attributes. The ProcessBuilder.start method can be invoked repeatedly from the same instance to create new subprocesses with identical or related attributes. 
--   The following attributes are being managed: a command, a list of strings which signifies the external program file to be invoked and its arguments, if any. Which string lists represent a valid operating system command is system-dependent. For example, it is common for each conceptual argument to be an element in this list, but there are operating systems where programs are expected to tokenize command line strings themselves - on such a system a Java implementation might require commands to contain exactly two elements. an environment, which is a system-dependent mapping from variables to values. The initial value is a copy of the environment of the current process (see System.getenv). a working directory. The default value is the current working directory of the current process, usually the directory named by the system property user.dir. a source of standard input. By default, the subprocess reads input from a pipe. Frege code can access this pipe via the output stream returned by Process.getOutputStream. However, standard input may be redirected to another source using ProcessBuilder.redirectInput. In this case, Process.getOutputStream will return an output stream, for which the write methods always throws IOException and the close method does nothing. a destination for standard output and standard error. By default, the subprocess writes standard output and standard error to pipes. Frege code can access these pipes via the input streams returned by Process.getInputStream and Process.getErrorStream. However, standard output and standard error may be redirected to other destinations using ProcessBuilder.redirectOutput and ProcessBuilder.redirectError. In this case, Process.getInputStream and/or Process.getErrorStream will return an input stream, for which the read methods always return -1, the available method always returns 0 and the close method does nothing. a redirectErrorStream property. Initially, this property is false, meaning that the standard output and error output of a subprocess are sent to two separate streams, which can be accessed using the Process.getInputStream and Process.getErrorStream methods. If the value is set to true, then standard error is merged with the standard output and always sent to the same destination (this makes it easier to correlate error messages with the corresponding output); the common destination of standard error and standard output can be redirected using ProcessBuilder.redirectOutput; and any redirection set by the ProcessBuilder.redirectError method is ignored when creating a subprocess. 
--   Modifying a process builder's attributes will affect processes subsequently started by that object's start() method, but will never affect previously started processes or the Java process itself. 
--   Most error checking is performed by the start() method. It is possible to modify the state of an object so that start() will fail. For example, setting the command attribute to an empty list will not throw an exception unless start() is invoked. 
--   Note that this type is not synchronized. If multiple threads access a ProcessBuilder instance concurrently, and at least one of the threads modifies one of the attributes structurally, it must be synchronized externally. 
--   Member Functions
--  ----------------
--  directory ∷ ProcessBuilder → MutableIO File → IO ProcessBuilder 
--  native directory 
--   set the working directory   
--  inheritIO ∷ ProcessBuilder → IO ProcessBuilder 
--  native inheritIO 
--   inherit the standard input, output and error from the current process   
--  new ∷ [String] → IO ProcessBuilder 
--   create a ProcessBuilder passing the command line as list.   
--  newFromArray ∷ ArrayOf RealWorld String → IO ProcessBuilder 
--  native new 
--   create a ProcessBuilder passing the command line as array   
--  redirectError ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
--                 | ProcessBuilder → MutableIO File → IO ProcessBuilder 
--  native redirectError 
--   redirect standard error   
--  redirectErrorStream ∷ ProcessBuilder → Bool → IO ProcessBuilder 
--  native redirectErrorStream 
--   set the redirectErrorStream property   
--  redirectErrorα ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
--  native redirectError  overloads redirectError 
--   redirect standard error   
--  redirectErrorβ ∷ ProcessBuilder → MutableIO File → IO ProcessBuilder 
--  native redirectError  overloads redirectError 
--   redirect standard error   
--  redirectInput ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
--                 | ProcessBuilder → MutableIO File → IO ProcessBuilder 
--  native redirectInput 
--   redirect standard input   
--  redirectInputα ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
--  native redirectInput  overloads redirectInput 
--   redirect standard input   
--  redirectInputβ ∷ ProcessBuilder → MutableIO File → IO ProcessBuilder 
--  native redirectInput  overloads redirectInput 
--   redirect standard input   
--  redirectOutput ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
--                  | ProcessBuilder → MutableIO File → IO ProcessBuilder 
--  native redirectOutput 
--   redirect standard output   
--  redirectOutputα ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
--  native redirectOutput  overloads redirectOutput 
--   redirect standard output   
--  redirectOutputβ ∷ ProcessBuilder → MutableIO File → IO ProcessBuilder 
--  native redirectOutput  overloads redirectOutput 
--   redirect standard output   
--  start ∷ ProcessBuilder → IO Process 
--  native start  throws IOException 
--   start the new process 
--   For details see Process.exec    
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder
data ProcessBuilder 

-- | set the working directory  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.directory
directory ∷ ProcessBuilder → MutableIO File → IO ProcessBuilder 
native directory

-- | inherit the standard input, output and error from the current process  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.inheritIO
inheritIO ∷ ProcessBuilder → IO ProcessBuilder 
native inheritIO

-- | create a ProcessBuilder passing the command line as list.  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder._new
new ∷ [String] → IO ProcessBuilder

-- | create a ProcessBuilder passing the command line as array  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.newFromArray
newFromArray ∷ ArrayOf RealWorld String → IO ProcessBuilder 
native new

-- | redirect standard error  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectError
redirectError ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
               | ProcessBuilder → MutableIO File → IO ProcessBuilder 
native redirectError

-- | set the redirectErrorStream property  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectErrorStream
redirectErrorStream ∷ ProcessBuilder → Bool → IO ProcessBuilder 
native redirectErrorStream

-- | redirect standard error  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectErrorα
redirectErrorα ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
native redirectError  overloads redirectError

-- | redirect standard error  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectErrorβ
redirectErrorβ ∷ ProcessBuilder → MutableIO File → IO ProcessBuilder 
native redirectError  overloads redirectError

-- | redirect standard input  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectInput
redirectInput ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
               | ProcessBuilder → MutableIO File → IO ProcessBuilder 
native redirectInput

-- | redirect standard input  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectInputα
redirectInputα ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
native redirectInput  overloads redirectInput

-- | redirect standard input  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectInputβ
redirectInputβ ∷ ProcessBuilder → MutableIO File → IO ProcessBuilder 
native redirectInput  overloads redirectInput

-- | redirect standard output  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectOutput
redirectOutput ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
                | ProcessBuilder → MutableIO File → IO ProcessBuilder 
native redirectOutput

-- | redirect standard output  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectOutputα
redirectOutputα ∷ ProcessBuilder → Redirect → IO ProcessBuilder 
native redirectOutput  overloads redirectOutput

-- | redirect standard output  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.redirectOutputβ
redirectOutputβ ∷ ProcessBuilder → MutableIO File → IO ProcessBuilder 
native redirectOutput  overloads redirectOutput

-- | start the new process 
--   For details see Process.exec  
@url http://www.frege-lang.org/doc/frege/java/lang/Processes#ProcessBuilder.start
start ∷ ProcessBuilder → IO Process 
native start  throws IOException


@url http://www.frege-lang.org/doc/frege/java/lang/Reflect#InvocationTargetException
data InvocationTargetException 

-- | This type class is used only to add methods to Class  
--   Known Instances
--  ----------------
--  Class 
--   Member Functions
--  ----------------
--  getDeclaredField ∷ ReflectedClass c ⇒ c → String → IO Field 
--  native getDeclaredField  throws NoSuchFieldException 

@url http://www.frege-lang.org/doc/frege/java/lang/Reflect#ReflectedClass
class ReflectedClass c


@url http://www.frege-lang.org/doc/frege/java/lang/Reflect#ReflectedClass.getDeclaredField
getDeclaredField ∷ ReflectedClass c ⇒ c → String → IO Field 
native getDeclaredField  throws NoSuchFieldException

-- | Member Functions
--  ----------------
--  get ∷ Field → Maybe Object → IO Object 
--  native get  throws IllegalAccessException, IllegalArgumentException, ExceptionInInitializerError 

@url http://www.frege-lang.org/doc/frege/java/lang/Reflect#Field
data Field 


@url http://www.frege-lang.org/doc/frege/java/lang/Reflect#Field.get
get ∷ Field → Maybe Object → IO Object 
native get  throws IllegalAccessException, IllegalArgumentException, ExceptionInInitializerError

-- | Member Functions
--  ----------------
--  baseline ∷ Alignment 
--  pure native javax.swing.GroupLayout.Alignment.BASELINE 
--  center ∷ Alignment 
--  pure native javax.swing.GroupLayout.Alignment.CENTER 
--  leading ∷ Alignment 
--  pure native javax.swing.GroupLayout.Alignment.LEADING 
--  trailing ∷ Alignment 
--  pure native javax.swing.GroupLayout.Alignment.TRAILING 

@url http://www.frege-lang.org/doc/frege/java/swing/GroupLayout#Alignment
data Alignment 


@url http://www.frege-lang.org/doc/frege/java/swing/GroupLayout#Alignment.baseline
baseline ∷ Alignment 
pure native javax.swing.GroupLayout.Alignment.BASELINE


@url http://www.frege-lang.org/doc/frege/java/swing/GroupLayout#Alignment.center
center ∷ Alignment 
pure native javax.swing.GroupLayout.Alignment.CENTER


@url http://www.frege-lang.org/doc/frege/java/swing/GroupLayout#Alignment.leading
leading ∷ Alignment 
pure native javax.swing.GroupLayout.Alignment.LEADING


@url http://www.frege-lang.org/doc/frege/java/swing/GroupLayout#Alignment.trailing
trailing ∷ Alignment 
pure native javax.swing.GroupLayout.Alignment.TRAILING


@url http://www.frege-lang.org/doc/frege/java/swing/GroupLayout#ParallelGroup
data ParallelGroup 


@url http://www.frege-lang.org/doc/frege/java/swing/GroupLayout#Group
data Group 

-- | Thrown when a task is submitted to an ExecutorService that was shut down or whose queue is full.  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#RejectedExecutionException
data RejectedExecutionException 

-- | Member Functions
--  ----------------
--  add ∷ BlockingQueue e → e → IO Bool 
--  native add  throws IllegalStateException 
--   add element to blocking queue, throw exception if not possible   
--  offer ∷ BlockingQueue e → e → IO Bool 
--  native offer 
--   add element to blocking queue, return false if not possible   
--  poll ∷ BlockingQueue e → IO (Maybe e) 
--  native poll 
--   get and remove element from blocking queue, return null if it is empty   
--  put ∷ BlockingQueue e → e → IO () 
--  native put  throws InterruptedException 
--   add element to blocking queue, block until possible   
--  remove ∷ BlockingQueue e → IO e 
--  native remove  throws NoSuchElementException 
--   get and remove element from blocking queue, throw exception if it is empty   
--  take ∷ BlockingQueue e → IO e 
--  native take  throws InterruptedException 
--   get and remove element from blocking queue, block until something is available    
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#BlockingQueue
data BlockingQueue e 

-- | add element to blocking queue, throw exception if not possible  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#BlockingQueue.add
add ∷ BlockingQueue e → e → IO Bool 
native add  throws IllegalStateException

-- | add element to blocking queue, return false if not possible  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#BlockingQueue.offer
offer ∷ BlockingQueue e → e → IO Bool 
native offer

-- | get and remove element from blocking queue, return null if it is empty  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#BlockingQueue.poll
poll ∷ BlockingQueue e → IO (Maybe e) 
native poll

-- | add element to blocking queue, block until possible  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#BlockingQueue.put
put ∷ BlockingQueue e → e → IO () 
native put  throws InterruptedException

-- | get and remove element from blocking queue, throw exception if it is empty  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#BlockingQueue.remove
remove ∷ BlockingQueue e → IO e 
native remove  throws NoSuchElementException

-- | get and remove element from blocking queue, block until something is available  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#BlockingQueue.take
take ∷ BlockingQueue e → IO e 
native take  throws InterruptedException

-- | Member Functions
--  ----------------
--  new ∷ Int → IO (ArrayBlockingQueue e) 
--       | Int → Bool → IO (ArrayBlockingQueue e) 
--  native new 
--   Creates an ArrayBlockingQueue with the given (fixed) capacity and the specified access policy. 
--   If the Bool argument is missing, the default access policy is used. If it is true then queue accesses for threads blocked on insertion or removal, are processed in FIFO order; otherwise the access order is unspecified. 
--   The capacity must be greater than 0, otherwise an IllegalArgumentException is thrown.  
--  newα ∷ Int → IO (ArrayBlockingQueue e) 
--  native new  overloads new 
--   Creates an ArrayBlockingQueue with the given (fixed) capacity and the specified access policy. 
--   If the Bool argument is missing, the default access policy is used. If it is true then queue accesses for threads blocked on insertion or removal, are processed in FIFO order; otherwise the access order is unspecified. 
--   The capacity must be greater than 0, otherwise an IllegalArgumentException is thrown.  
--  newβ ∷ Int → Bool → IO (ArrayBlockingQueue e) 
--  native new  overloads new 
--   Creates an ArrayBlockingQueue with the given (fixed) capacity and the specified access policy. 
--   If the Bool argument is missing, the default access policy is used. If it is true then queue accesses for threads blocked on insertion or removal, are processed in FIFO order; otherwise the access order is unspecified. 
--   The capacity must be greater than 0, otherwise an IllegalArgumentException is thrown.   
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ArrayBlockingQueue
data ArrayBlockingQueue e 

-- | Creates an ArrayBlockingQueue with the given (fixed) capacity and the specified access policy. 
--   If the Bool argument is missing, the default access policy is used. If it is true then queue accesses for threads blocked on insertion or removal, are processed in FIFO order; otherwise the access order is unspecified. 
--   The capacity must be greater than 0, otherwise an IllegalArgumentException is thrown. 
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ArrayBlockingQueue._new
new ∷ Int → IO (ArrayBlockingQueue e) 
     | Int → Bool → IO (ArrayBlockingQueue e) 
native new

-- | Creates an ArrayBlockingQueue with the given (fixed) capacity and the specified access policy. 
--   If the Bool argument is missing, the default access policy is used. If it is true then queue accesses for threads blocked on insertion or removal, are processed in FIFO order; otherwise the access order is unspecified. 
--   The capacity must be greater than 0, otherwise an IllegalArgumentException is thrown. 
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ArrayBlockingQueue.newα
newα ∷ Int → IO (ArrayBlockingQueue e) 
native new  overloads new

-- | Creates an ArrayBlockingQueue with the given (fixed) capacity and the specified access policy. 
--   If the Bool argument is missing, the default access policy is used. If it is true then queue accesses for threads blocked on insertion or removal, are processed in FIFO order; otherwise the access order is unspecified. 
--   The capacity must be greater than 0, otherwise an IllegalArgumentException is thrown. 
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ArrayBlockingQueue.newβ
newβ ∷ Int → Bool → IO (ArrayBlockingQueue e) 
native new  overloads new

-- | The Java executor service interface.  
--   Member Functions
--  ----------------
--  executorService ∷ () → IO ExecutorService 
--  native frege.runtime.Concurrent.executorService 
--   The default executor service of the Frege runtime   
--  isShutdown ∷ ExecutorService → IO Bool 
--  native isShutdown 
--   Tells if this executor has been shut down.   
--  isTerminated ∷ ExecutorService → IO Bool 
--  native isTerminated 
--   Tells if all tasks have completed after ExecutorService.shutdown.   
--  shutdown ∷ ExecutorService → IO () 
--  native shutdown 
--   Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted.   
--  submit ∷ ExecutorService → MutableIO Runnable → IO () 
--  native submit  throws RejectedExecutionException 
--   Submit a Runnable for execution. 
--   Note that unlike in Java, no Future is returned.    
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ExecutorService
data ExecutorService 

-- | The default executor service of the Frege runtime  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ExecutorService.executorService
executorService ∷ () → IO ExecutorService 
native frege.runtime.Concurrent.executorService

-- | Tells if this executor has been shut down.  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ExecutorService.isShutdown
isShutdown ∷ ExecutorService → IO Bool 
native isShutdown

-- | Tells if all tasks have completed after ExecutorService.shutdown.  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ExecutorService.isTerminated
isTerminated ∷ ExecutorService → IO Bool 
native isTerminated

-- | Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted.  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ExecutorService.shutdown
shutdown ∷ ExecutorService → IO () 
native shutdown

-- | Submit a Runnable for execution. 
--   Note that unlike in Java, no Future is returned.  
@url http://www.frege-lang.org/doc/frege/java/util/Concurrent#ExecutorService.submit
submit ∷ ExecutorService → MutableIO Runnable → IO () 
native submit  throws RejectedExecutionException

-- | Member Functions
--  ----------------
--  entries ∷ JarFile → STMutable RealWorld (Enumeration JarEntry) 
--  native entries 
--  getInputStream ∷ JarFile → ZipEntry → IO InputStream 
--  native getInputStream  throws IOException 
--  getJarEntry ∷ JarFile → String → IO (Maybe JarEntry) 
--  native getJarEntry 
--   get the JarEntry for the specified name, or Maybe.Nothing if not found.   
--  getManifest ∷ JarFile → IO (Maybe (MutableIO Manifest)) 
--  native getManifest  throws IOException 
--   retrieve the Manifest, if there is one   
--  new ∷ MutableIO File → IO JarFile 
--  native new  throws IOException 

@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarFile
data JarFile 


@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarFile.entries
entries ∷ JarFile → STMutable RealWorld (Enumeration JarEntry) 
native entries


@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarFile.getInputStream
getInputStream ∷ JarFile → ZipEntry → IO InputStream 
native getInputStream  throws IOException

-- | get the JarEntry for the specified name, or Maybe.Nothing if not found.  
@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarFile.getJarEntry
getJarEntry ∷ JarFile → String → IO (Maybe JarEntry) 
native getJarEntry

-- | retrieve the Manifest, if there is one  
@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarFile.getManifest
getManifest ∷ JarFile → IO (Maybe (MutableIO Manifest)) 
native getManifest  throws IOException


@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarFile._new
new ∷ MutableIO File → IO JarFile 
native new  throws IOException

-- | Member Functions
--  ----------------
--  getName ∷ JarEntry → IO String 
--  native getName 
--  isDirectory ∷ JarEntry → IO Bool 
--  native isDirectory 
--  new ∷ ZipEntry → IO JarEntry 
--       | String → IO JarEntry 
--  native new 
--  newα ∷ ZipEntry → IO JarEntry 
--  native new  overloads new 
--  newβ ∷ String → IO JarEntry 
--  native new  overloads new 

@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarEntry
data JarEntry 


@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarEntry.getName
getName ∷ JarEntry → IO String 
native getName


@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarEntry.isDirectory
isDirectory ∷ JarEntry → IO Bool 
native isDirectory


@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarEntry._new
new ∷ ZipEntry → IO JarEntry 
     | String → IO JarEntry 
native new


@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarEntry.newα
newα ∷ ZipEntry → IO JarEntry 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/util/Jar#JarEntry.newβ
newβ ∷ String → IO JarEntry 
native new  overloads new

-- | The Manifest of a JarFile 
--   see java doc  
--   Member Functions
--  ----------------
--  getMainAttributes ∷ Mutable s Manifest → STMutable s Attributes 
--  native getMainAttributes 

@url http://www.frege-lang.org/doc/frege/java/util/Jar#Manifest
data Manifest 


@url http://www.frege-lang.org/doc/frege/java/util/Jar#Manifest.getMainAttributes
getMainAttributes ∷ Mutable s Manifest → STMutable s Attributes 
native getMainAttributes

-- | Attributes of a Manifest 
--   see java doc  
--   Member Functions
--  ----------------
--  getValue ∷ Mutable s Attributes → String → ST s (Maybe String) 
--            | Mutable s Attributes → AttributesName → ST s (Maybe String) 
--                throws IllegalArgumentException 
--  native getValue 
--  getValueα ∷ Mutable s Attributes → String → ST s (Maybe String) 
--  native getValue  overloads getValue 
--  getValueβ ∷ Mutable s Attributes → AttributesName → ST s (Maybe String) 
--  native getValue  throws IllegalArgumentException  overloads getValue 
--  keySet ∷ Mutable s Attributes → STMutable s (Set String) 
--  native keySet 

@url http://www.frege-lang.org/doc/frege/java/util/Jar#Attributes
data Attributes 


@url http://www.frege-lang.org/doc/frege/java/util/Jar#Attributes.getValue
getValue ∷ Mutable s Attributes → String → ST s (Maybe String) 
          | Mutable s Attributes → AttributesName → ST s (Maybe String) 
              throws IllegalArgumentException 
native getValue


@url http://www.frege-lang.org/doc/frege/java/util/Jar#Attributes.getValueα
getValueα ∷ Mutable s Attributes → String → ST s (Maybe String) 
native getValue  overloads getValue


@url http://www.frege-lang.org/doc/frege/java/util/Jar#Attributes.getValueβ
getValueβ ∷ Mutable s Attributes → AttributesName → ST s (Maybe String) 
native getValue  throws IllegalArgumentException  overloads getValue


@url http://www.frege-lang.org/doc/frege/java/util/Jar#Attributes.keySet
keySet ∷ Mutable s Attributes → STMutable s (Set String) 
native keySet

-- | Predefined keys for Attributes maps.  
--   Member Functions
--  ----------------
--  class_path ∷ AttributesName 
--  pure native java.util.jar.Attributes.Name.CLASS_PATH 
--   Name object for Class-Path manifest attribute. 
--   Bundled extensions can use this attribute to find other JAR files containing needed classes.   
--  main_class ∷ AttributesName 
--  pure native java.util.jar.Attributes.Name.MAIN_CLASS 
--   Name object for Main-Class manifest attribute used for launching applications packaged in JAR files.   
--  toString ∷ AttributesName → String 
--  pure native toString 
--   Returns the attribute name as a String.    
@url http://www.frege-lang.org/doc/frege/java/util/Jar#AttributesName
data AttributesName 

-- | Name object for Class-Path manifest attribute. 
--   Bundled extensions can use this attribute to find other JAR files containing needed classes.  
@url http://www.frege-lang.org/doc/frege/java/util/Jar#AttributesName.class_path
class_path ∷ AttributesName 
pure native java.util.jar.Attributes.Name.CLASS_PATH

-- | Name object for Main-Class manifest attribute used for launching applications packaged in JAR files.  
@url http://www.frege-lang.org/doc/frege/java/util/Jar#AttributesName.main_class
main_class ∷ AttributesName 
pure native java.util.jar.Attributes.Name.MAIN_CLASS

-- | Returns the attribute name as a String.  
@url http://www.frege-lang.org/doc/frege/java/util/Jar#AttributesName.toString
toString ∷ AttributesName → String 
pure native toString

-- |Regex values are based on Java's java.util.regex.Pattern objects, which are compiled representations of regular expressions. 
--   We call them Regex and not Pattern in Frege, because the word "pattern" and the phrase "pattern matching" have a quite different meaning in deconstruction of algebraic data types. 
--   There are 2 ways to obtain a compiled regular expression: Use a Regex literal, see the language reference section 2.7.3. All regular expression literals are values of type Regex. It is not possible to run a program which contains a syntactically invalid Regex literal - the compiler will flag it already at compile time. Hence, with Regex literals one is immune against PatternSyntaxExceptions. Compile a String with Regex.compile or regforce at run-time. Illegal regular expression will cause PatternSyntaxException to be thrown, which, when not handled appropriately, may crash the program. 
--  Regex values are immutable. 
--   Member Functions
--  ----------------
--  canon_eq ∷ Int 
--  pure native java.util.regex.Pattern.CANON_EQ 
--   Enables canonical equivalence. 
--   When this flag is specified then two characters will be considered to match if, and only if, their full canonical decompositions match. The expression ´a\u030A´, for example, will match the string "\u00E5" when this flag is specified. 
--   There is no embedded flag character for enabling canonical equivalence. 
--   Specifying this flag may impose a performance penalty. 
--   Frege Regex literals will always be parsed with this flag.  
--  case_insensitive ∷ Int 
--  pure native java.util.regex.Pattern.CASE_INSENSITIVE 
--   Enables case-insensitive matching. 
--   By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. Unicode-aware case-insensitive matching can be enabled by specifying the Regex.unicode_case flag in conjunction with this flag. 
--   Case-insensitive matching can also be enabled via the embedded flag expression (?i). 
--   Specifying this flag may impose a slight performance penalty.  
--  comments ∷ Int 
--  pure native java.util.regex.Pattern.COMMENTS 
--   Permits whitespace and comments in pattern. 
--   In this mode, whitespace is ignored, and embedded comments starting with # are ignored until the end of a line. 
--   Comments mode can also be enabled via the embedded flag expression (?x).  
--  compile ∷ String → (PatternSyntaxException | Regex) 
--           | String → Int → (PatternSyntaxException | Regex) 
--  pure native java.util.regex.Pattern.compile 
--   compile a String to a Regex 
--   Returns either a PatternSyntaxException in Either.Left or a Regex in Either.Right. 
--   The overloaded form has an additional Int argument which is a set of flags. Such a set can be constructed by adding up the individual flag values, for example: 
--   Regex.compile "foo|bar" (Regex.canon_eq + Regex.case_insensitive)  
--  compileα ∷ String → (PatternSyntaxException | Regex) 
--  pure native java.util.regex.Pattern.compile  overloads compile 
--   compile a String to a Regex 
--   Returns either a PatternSyntaxException in Either.Left or a Regex in Either.Right. 
--   The overloaded form has an additional Int argument which is a set of flags. Such a set can be constructed by adding up the individual flag values, for example: 
--   Regex.compile "foo|bar" (Regex.canon_eq + Regex.case_insensitive)  
--  compileβ ∷ String → Int → (PatternSyntaxException | Regex) 
--  pure native java.util.regex.Pattern.compile  overloads compile 
--   compile a String to a Regex 
--   Returns either a PatternSyntaxException in Either.Left or a Regex in Either.Right. 
--   The overloaded form has an additional Int argument which is a set of flags. Such a set can be constructed by adding up the individual flag values, for example: 
--   Regex.compile "foo|bar" (Regex.canon_eq + Regex.case_insensitive)  
--  dotall ∷ Int 
--  pure native java.util.regex.Pattern.DOTALL 
--   Enables dotall mode. 
--   In dotall mode, the expression . matches any character, including a line terminator. By default this expression does not match line terminators. 
--   Dotall mode can also be enabled via the embedded flag expression (?s). (The s is a mnemonic for "single-line" mode, which is what this is called in Perl.)  
--  flags ∷ Regex → Int 
--  pure native flags 
--   return the flags this pattern was compiled with   
--  literal ∷ Int 
--  pure native java.util.regex.Pattern.LITERAL 
--   Enables literal parsing of the pattern. 
--   When this flag is specified then the input string that specifies the pattern is treated as a sequence of literal characters. Metacharacters or escape sequences in the input sequence will be given no special meaning. 
--   The flags Regex.case_insensitive and Regex.unicode_case retain their impact on matching when used in conjunction with this flag. The other flags become superfluous. 
--   There is no embedded flag character for enabling literal parsing.  
--  multiline ∷ Int 
--  pure native java.util.regex.Pattern.MULTILINE 
--   Enables multiline mode. 
--   In multiline mode the expressions ^ and $ match just after or just before, respectively, a line terminator or the end of the input sequence. By default these expressions only match at the beginning and the end of the entire input sequence. 
--   Multiline mode can also be enabled via the embedded flag expression (?m).  
--  pattern ∷ Regex → String 
--  pure native pattern 
--   return the source of this Regex   
--  split ∷ Regex → String → JArray String 
--  pure native split 
--  java.util.regex.Pattern.split method 
--   As this returns a String array, one usually uses Regex.splitted   
--  splitted ∷ Regex → String → [String] 
--   Split a string around matches of a regular expression and return the result as list of strings. 
--   Empty strings on the start of the string are preserved, but not those on the end of the string, e.g.: 
--   ´,´.splitted ",,a,b,c,," == ["", "", "a", "b", "c"]  
--  toString ∷ Regex → String 
--  pure native toString 
--   Returns the string representation of this pattern. 
--   This is the regular expression from which this pattern was Regex.compiled.   
--  unicode_case ∷ Int 
--  pure native java.util.regex.Pattern.UNICODE_CASE 
--   Enables Unicode-aware case folding. 
--   When this flag is specified then case-insensitive matching, when enabled by the Regex.case_insensitive flag, is done in a manner consistent with the Unicode Standard. By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. 
--   Unicode-aware case folding can also be enabled via the embedded flag expression (?u). 
--   Specifying this flag may impose a performance penalty. 
--   Because Frege Regex literals will always be parsed with the Regex.unicode_character_class flag, this flag is also implicitly enabled by default. 
--   It can be disabled with the embedded flag expression (?-u).  
--  unicode_character_class ∷ Int 
--  pure native java.util.regex.Pattern.UNICODE_CHARACTER_CLASS 
--   Enables the Unicode version of Predefined character classes and POSIX character classes. 
--   When this flag is specified then the (US-ASCII only) Predefined character classes and POSIX character classes are in conformance with Unicode Technical Standard #18: Unicode Regular Expression Annex C: Compatibility Properties. 
--   The Regex.unicode_character_class mode can also be enabled via the embedded flag expression (?U). 
--   The flag implies Regex.unicode_case, that is, it enables Unicode-aware case folding. 
--   Specifying this flag may impose a performance penalty. 
--   Frege Regex literals will always be parsed with this flag. It can be disabled with the embedded flag expression (?-U).  
--  unix_lines ∷ Int 
--  pure native java.util.regex.Pattern.UNIX_LINES 
--   Enables UNIX lines mode. 
--   In this mode, only the \n line terminator is recognized in the behavior of ., ^, and $. 
--   Unix lines mode can also be enabled via the embedded flag expression (?d).    
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex
data Regex 

-- | Enables canonical equivalence. 
--   When this flag is specified then two characters will be considered to match if, and only if, their full canonical decompositions match. The expression ´a\u030A´, for example, will match the string "\u00E5" when this flag is specified. 
--   There is no embedded flag character for enabling canonical equivalence. 
--   Specifying this flag may impose a performance penalty. 
--   Frege Regex literals will always be parsed with this flag. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.canon_eq
canon_eq ∷ Int 
pure native java.util.regex.Pattern.CANON_EQ

-- | Enables case-insensitive matching. 
--   By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. Unicode-aware case-insensitive matching can be enabled by specifying the Regex.unicode_case flag in conjunction with this flag. 
--   Case-insensitive matching can also be enabled via the embedded flag expression (?i). 
--   Specifying this flag may impose a slight performance penalty. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.case_insensitive
case_insensitive ∷ Int 
pure native java.util.regex.Pattern.CASE_INSENSITIVE

-- | Permits whitespace and comments in pattern. 
--   In this mode, whitespace is ignored, and embedded comments starting with # are ignored until the end of a line. 
--   Comments mode can also be enabled via the embedded flag expression (?x). 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.comments
comments ∷ Int 
pure native java.util.regex.Pattern.COMMENTS

-- | compile a String to a Regex 
--   Returns either a PatternSyntaxException in Either.Left or a Regex in Either.Right. 
--   The overloaded form has an additional Int argument which is a set of flags. Such a set can be constructed by adding up the individual flag values, for example: 
--   Regex.compile "foo|bar" (Regex.canon_eq + Regex.case_insensitive) 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.compile
compile ∷ String → (PatternSyntaxException | Regex) 
         | String → Int → (PatternSyntaxException | Regex) 
pure native java.util.regex.Pattern.compile

-- | compile a String to a Regex 
--   Returns either a PatternSyntaxException in Either.Left or a Regex in Either.Right. 
--   The overloaded form has an additional Int argument which is a set of flags. Such a set can be constructed by adding up the individual flag values, for example: 
--   Regex.compile "foo|bar" (Regex.canon_eq + Regex.case_insensitive) 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.compileα
compileα ∷ String → (PatternSyntaxException | Regex) 
pure native java.util.regex.Pattern.compile  overloads compile

-- | compile a String to a Regex 
--   Returns either a PatternSyntaxException in Either.Left or a Regex in Either.Right. 
--   The overloaded form has an additional Int argument which is a set of flags. Such a set can be constructed by adding up the individual flag values, for example: 
--   Regex.compile "foo|bar" (Regex.canon_eq + Regex.case_insensitive) 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.compileβ
compileβ ∷ String → Int → (PatternSyntaxException | Regex) 
pure native java.util.regex.Pattern.compile  overloads compile

-- | Enables dotall mode. 
--   In dotall mode, the expression . matches any character, including a line terminator. By default this expression does not match line terminators. 
--   Dotall mode can also be enabled via the embedded flag expression (?s). (The s is a mnemonic for "single-line" mode, which is what this is called in Perl.) 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.dotall
dotall ∷ Int 
pure native java.util.regex.Pattern.DOTALL

-- | return the flags this pattern was compiled with  
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.flags
flags ∷ Regex → Int 
pure native flags

-- | Enables literal parsing of the pattern. 
--   When this flag is specified then the input string that specifies the pattern is treated as a sequence of literal characters. Metacharacters or escape sequences in the input sequence will be given no special meaning. 
--   The flags Regex.case_insensitive and Regex.unicode_case retain their impact on matching when used in conjunction with this flag. The other flags become superfluous. 
--   There is no embedded flag character for enabling literal parsing. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.literal
literal ∷ Int 
pure native java.util.regex.Pattern.LITERAL

-- | Enables multiline mode. 
--   In multiline mode the expressions ^ and $ match just after or just before, respectively, a line terminator or the end of the input sequence. By default these expressions only match at the beginning and the end of the entire input sequence. 
--   Multiline mode can also be enabled via the embedded flag expression (?m). 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.multiline
multiline ∷ Int 
pure native java.util.regex.Pattern.MULTILINE

-- | return the source of this Regex  
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.pattern
pattern ∷ Regex → String 
pure native pattern

-- |java.util.regex.Pattern.split method 
--   As this returns a String array, one usually uses Regex.splitted  
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.split
split ∷ Regex → String → JArray String 
pure native split

-- | Split a string around matches of a regular expression and return the result as list of strings. 
--   Empty strings on the start of the string are preserved, but not those on the end of the string, e.g.: 
--   ´,´.splitted ",,a,b,c,," == ["", "", "a", "b", "c"] 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.splitted
splitted ∷ Regex → String → [String]

-- | Returns the string representation of this pattern. 
--   This is the regular expression from which this pattern was Regex.compiled.  
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.toString
toString ∷ Regex → String 
pure native toString

-- | Enables Unicode-aware case folding. 
--   When this flag is specified then case-insensitive matching, when enabled by the Regex.case_insensitive flag, is done in a manner consistent with the Unicode Standard. By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. 
--   Unicode-aware case folding can also be enabled via the embedded flag expression (?u). 
--   Specifying this flag may impose a performance penalty. 
--   Because Frege Regex literals will always be parsed with the Regex.unicode_character_class flag, this flag is also implicitly enabled by default. 
--   It can be disabled with the embedded flag expression (?-u). 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.unicode_case
unicode_case ∷ Int 
pure native java.util.regex.Pattern.UNICODE_CASE

-- | Enables the Unicode version of Predefined character classes and POSIX character classes. 
--   When this flag is specified then the (US-ASCII only) Predefined character classes and POSIX character classes are in conformance with Unicode Technical Standard #18: Unicode Regular Expression Annex C: Compatibility Properties. 
--   The Regex.unicode_character_class mode can also be enabled via the embedded flag expression (?U). 
--   The flag implies Regex.unicode_case, that is, it enables Unicode-aware case folding. 
--   Specifying this flag may impose a performance penalty. 
--   Frege Regex literals will always be parsed with this flag. It can be disabled with the embedded flag expression (?-U). 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.unicode_character_class
unicode_character_class ∷ Int 
pure native java.util.regex.Pattern.UNICODE_CHARACTER_CLASS

-- | Enables UNIX lines mode. 
--   In this mode, only the \n line terminator is recognized in the behavior of ., ^, and $. 
--   Unix lines mode can also be enabled via the embedded flag expression (?d).  
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Regex.unix_lines
unix_lines ∷ Int 
pure native java.util.regex.Pattern.UNIX_LINES

-- | Will be thrown when one compiles a String to a Regex using Regex.compile or regforce  
@url http://www.frege-lang.org/doc/frege/java/util/Regex#PatternSyntaxException
data PatternSyntaxException 

-- | Alias for Regex.compile 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#regcomp
regcomp ∷ String → (PatternSyntaxException | Regex) 
         | String → Int → (PatternSyntaxException | Regex) 
pure native java.util.regex.Pattern.compile

-- | compile a String to a Regex 
--   This will throw PatternSyntaxException when the regular expression is illegal. 
--   Use this only if you're sure that pattern compilation will not throw an exception, or if you don't care. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#regforce
regforce ∷ String → Regex 
          | String → Int → Regex 
pure native java.util.regex.Pattern.compile

-- | compile a String to a Regex 
--   This will throw PatternSyntaxException when the regular expression is illegal. 
--   Use this only if you're sure that pattern compilation will not throw an exception, or if you don't care. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#regforceα
regforceα ∷ String → Regex 
pure native java.util.regex.Pattern.compile  overloads regforce

-- | compile a String to a Regex 
--   This will throw PatternSyntaxException when the regular expression is illegal. 
--   Use this only if you're sure that pattern compilation will not throw an exception, or if you don't care. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#regforceβ
regforceβ ∷ String → Int → Regex 
pure native java.util.regex.Pattern.compile  overloads regforce

-- | this is only used to inject the replace functions into String  
--   Known Instances
--  ----------------
--  StringJ 
--   Member Functions
--  ----------------
--  replaceAll ∷ Replace s ⇒ s → Regex → s → s 
--   Like Replace.replaceFirst, but replaces all substrings that match the pattern.  
--  replaceFirst ∷ Replace s ⇒ s → Regex → s → s 
--   Replaces the first subsequence of the input sequence that matches the pattern with the given replacement string. 
--   This method scans the input sequence from the start looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences. 
--   Note that backslashes (\\) and dollar signs ($) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string. Dollar signs may be treated as references to captured subsequences as described above, and backslashes are used to escape literal characters in the replacement string. 
--   For example 
--   replaceFirst "zzzdogzzzdogzzz" ´dog´ "cat" == "zzzcatzzzdogzzz"   
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Replace
class Replace s

-- | Like Replace.replaceFirst, but replaces all substrings that match the pattern. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Replace.replaceAll
replaceAll ∷ Replace s ⇒ s → Regex → s → s

-- | Replaces the first subsequence of the input sequence that matches the pattern with the given replacement string. 
--   This method scans the input sequence from the start looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences. 
--   Note that backslashes (\\) and dollar signs ($) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string. Dollar signs may be treated as references to captured subsequences as described above, and backslashes are used to escape literal characters in the replacement string. 
--   For example 
--   replaceFirst "zzzdogzzzdogzzz" ´dog´ "cat" == "zzzcatzzzdogzzz" 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#Replace.replaceFirst
replaceFirst ∷ Replace s ⇒ s → Regex → s → s

-- | Alias for Replace_String.replaceFirst 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#substituteFirst
substituteFirst ∷ String → Regex → String → String 
pure native frege.runtime.Regex9.replaceFirst

-- | Alias for Replace_String.replaceAll 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#substituteAll
substituteAll ∷ String → Regex → String → String 
pure native frege.runtime.Regex9.replaceAll

-- | This interface contains query methods used to determine the results of a match against a regular expression. 
--   More: JavaDoc 
--   Member Functions
--  ----------------
--  end ∷ MatchResult → Int → Int 
--  pure native end 
--   Returns the offset after the last character of the subsequence captured by the given group during the previous match operation where group 0 denotes the entire pattern. 
--   If the specified capturing group failed to match, the return value will be -1. 
--   The following property holds: 
--   (m.group n == Nothing) ==> (m.end n < 0)  
--  group ∷ MatchResult → Int → Maybe String 
--   group m n 
--   retrieves the input subsequence captured by the given group index during the previous match operation. 
--   Capturing groups are indexed from left to right, starting at one. Group zero denotes the entire pattern, so the expression (m.group 0) retrieves that portion of the input string that was matched by the pattern. 
--   If the match was successful but the group specified failed to match any part of the input sequence, then Maybe.Nothing is returned. 
--   Note that some groups, for example (a?), match the empty string. This function will return Just "" when such a group successfully matches the empty string in the input. 
--   The result will also be Maybe.Nothing when the specified group does not exist, that is, when the Int argument is outside the range [0..MatchResult.groupCount m] 
--   The following property holds for a MatchResult m with input sequence s and valid group index g: 
--   isJust (m.group g) ==> (m.group g) == Just (s.substr (m.start g) (m.end g))  
--  groupCount ∷ MatchResult → Int 
--  pure native groupCount 
--   Returns the number of capturing groups in this matcher's pattern. 
--   Group zero denotes the entire pattern by convention. It is not included in this count. 
--   Any non-negative integer smaller than or equal to the value returned by this method is guaranteed to be a valid group index for this matcher.  
--  groupPrim ∷ MatchResult → Int → (IndexOutOfBoundsException | Maybe String) 
--  pure native group 
--  groups ∷ Maybe MatchResult → [Maybe String] 
--   The list of subsequences captured during the previous match operation, or the empty list if there was no match. 
--   To be used like: 
--   groups $ s =~ regex 
--   See also =~~  
--  match ∷ MatchResult → String 
--  pure native group 
--  MatchResult.match m returns the input subsequence matched by the previous match. The result is undefined if the last match was not successful. 
--   For a MatchResult m with input sequence s, the following holds: 
--   isJust (m.group 0) ==> unJust (m.group 0) == m.match 
--   Note that some patterns, for example a?, match the empty string. This method will return the empty string when the pattern successfully matches the empty string in the input.  
--  start ∷ MatchResult → Int → Int 
--  pure native start 
--   Returns the start index of the subsequence captured by the given group during the previous match operation where group 0 denotes the entire pattern. 
--   If the specified capturing group failed to match, the return value will be -1. 
--   The following property holds: 
--   (m.group n == Nothing) ==> (m.start n < 0)   
@url http://www.frege-lang.org/doc/frege/java/util/Regex#MatchResult
data MatchResult 

-- | Returns the offset after the last character of the subsequence captured by the given group during the previous match operation where group 0 denotes the entire pattern. 
--   If the specified capturing group failed to match, the return value will be -1. 
--   The following property holds: 
--   (m.group n == Nothing) ==> (m.end n < 0) 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#MatchResult.end
end ∷ MatchResult → Int → Int 
pure native end

-- | group m n 
--   retrieves the input subsequence captured by the given group index during the previous match operation. 
--   Capturing groups are indexed from left to right, starting at one. Group zero denotes the entire pattern, so the expression (m.group 0) retrieves that portion of the input string that was matched by the pattern. 
--   If the match was successful but the group specified failed to match any part of the input sequence, then Maybe.Nothing is returned. 
--   Note that some groups, for example (a?), match the empty string. This function will return Just "" when such a group successfully matches the empty string in the input. 
--   The result will also be Maybe.Nothing when the specified group does not exist, that is, when the Int argument is outside the range [0..MatchResult.groupCount m] 
--   The following property holds for a MatchResult m with input sequence s and valid group index g: 
--   isJust (m.group g) ==> (m.group g) == Just (s.substr (m.start g) (m.end g)) 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#MatchResult.group
group ∷ MatchResult → Int → Maybe String

-- | Returns the number of capturing groups in this matcher's pattern. 
--   Group zero denotes the entire pattern by convention. It is not included in this count. 
--   Any non-negative integer smaller than or equal to the value returned by this method is guaranteed to be a valid group index for this matcher. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#MatchResult.groupCount
groupCount ∷ MatchResult → Int 
pure native groupCount


@url http://www.frege-lang.org/doc/frege/java/util/Regex#MatchResult.groupPrim
groupPrim ∷ MatchResult → Int → (IndexOutOfBoundsException | Maybe String) 
pure native group

-- | The list of subsequences captured during the previous match operation, or the empty list if there was no match. 
--   To be used like: 
--   groups $ s =~ regex 
--   See also =~~ 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#MatchResult.groups
groups ∷ Maybe MatchResult → [Maybe String]

-- |MatchResult.match m returns the input subsequence matched by the previous match. The result is undefined if the last match was not successful. 
--   For a MatchResult m with input sequence s, the following holds: 
--   isJust (m.group 0) ==> unJust (m.group 0) == m.match 
--   Note that some patterns, for example a?, match the empty string. This method will return the empty string when the pattern successfully matches the empty string in the input. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#MatchResult.match
match ∷ MatchResult → String 
pure native group

-- | Returns the start index of the subsequence captured by the given group during the previous match operation where group 0 denotes the entire pattern. 
--   If the specified capturing group failed to match, the return value will be -1. 
--   The following property holds: 
--   (m.group n == Nothing) ==> (m.start n < 0) 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#MatchResult.start
start ∷ MatchResult → Int → Int 
pure native start

-- | string =~ regex 
--   tries to match string against regex and returns Just matcher if it succeeds, Nothing otherwise. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#_eq_tilde
(=~) ∷  String → Regex → Maybe MatchResult 
pure native frege.runtime.Regex9.findResult 
infix  15

-- | findAt string regex offset 
--   Like =~, but matches only the substring of string that starts at offset against regex. 
--   If offset is negative or not smaller than the length of string, the result is Nothing 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#findAt
findAt ∷ String → Regex → Int → Maybe MatchResult 
pure native frege.runtime.Regex9.findResult

-- | string =~~ regex 
--   tries to match string against regex and returns a list of all captured substrings, see MatchResult.groups. 
--   Example: 
--   case "today is 2014-02-18" =~~ ´(\d\d\d\d)-(0[1-9]|1[012])-(\d\d)´ of [Just date, Just year, Just month, Just day] -> ... baddate -> .... 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#_eq_tilde_tilde
(=~~) ∷  String → Regex → [Maybe String] 
infix  15

-- | string ~ regex 
--  true if string matches regex, false otherwise 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#_tilde
(~) ∷  String → Regex → Bool 
pure native frege.runtime.Regex9.find 
infix  15

-- | s !~ p == !(s ~ p) 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#_excl_tilde
(!~) ∷  String → Regex → Bool 
infix  15

-- | ("string" ~~ ´r..´) == Just "rin" 
--   Tries a match and returns Just x where x is the matched substring or Nothing if there was no match. 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#_tilde_tilde
(~~) ∷  String → Regex → Maybe String 
infix  15

-- | string ~~~ regex 
--   Matches string with regex and returns a function that can be used to extract the matched part of the string and the captured substrings. 
--   let f = "frege" ~~~ ´(..).(..)´ in [ f i | i <- 0..3 ] 
--   yields 
--   [Just "frege", Just "fr", Just "ge", Nothing] 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#_tilde_tilde_tilde
(~~~) ∷  String → Regex → Int → Maybe String 
infix  15

-- | "cats and dogs are not concatenated." ~~* ´cat|dog´ 
--   Matches the string with the regex and returns a list of all matches. The example gives: 
--   ["cat", "dog", "cat"] 
@url http://www.frege-lang.org/doc/frege/java/util/Regex#_tilde_tilde_star
(~~*) ∷  String → Regex → [String] 
infix  15


@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipException
data ZipException 

-- | Member Functions
--  ----------------
--  entries ∷ ZipFile → STMutable RealWorld (Enumeration ZipEntry) 
--  native entries 
--  getEntry ∷ ZipFile → String → IO (Maybe ZipEntry) 
--  native getEntry 
--   get the ZipEntry for the specified name, or Maybe.Nothing if not found.   
--  getInputStream ∷ ZipFile → ZipEntry → IO InputStream 
--  native getInputStream  throws IOException 
--  new ∷ MutableIO File → IO ZipFile 
--  native new  throws ZipException, IOException 

@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipFile
data ZipFile 


@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipFile.entries
entries ∷ ZipFile → STMutable RealWorld (Enumeration ZipEntry) 
native entries

-- | get the ZipEntry for the specified name, or Maybe.Nothing if not found.  
@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipFile.getEntry
getEntry ∷ ZipFile → String → IO (Maybe ZipEntry) 
native getEntry


@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipFile.getInputStream
getInputStream ∷ ZipFile → ZipEntry → IO InputStream 
native getInputStream  throws IOException


@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipFile._new
new ∷ MutableIO File → IO ZipFile 
native new  throws ZipException, IOException

-- | Member Functions
--  ----------------
--  getName ∷ ZipEntry → IO String 
--  native getName 
--  isDirectory ∷ ZipEntry → IO Bool 
--  native isDirectory 
--  new ∷ ZipEntry → IO ZipEntry 
--       | String → IO ZipEntry 
--  native new 
--  newα ∷ ZipEntry → IO ZipEntry 
--  native new  overloads new 
--  newβ ∷ String → IO ZipEntry 
--  native new  overloads new 

@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipEntry
data ZipEntry 


@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipEntry.getName
getName ∷ ZipEntry → IO String 
native getName


@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipEntry.isDirectory
isDirectory ∷ ZipEntry → IO Bool 
native isDirectory


@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipEntry._new
new ∷ ZipEntry → IO ZipEntry 
     | String → IO ZipEntry 
native new


@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipEntry.newα
newα ∷ ZipEntry → IO ZipEntry 
native new  overloads new


@url http://www.frege-lang.org/doc/frege/java/util/Zip#ZipEntry.newβ
newβ ∷ String → IO ZipEntry 
native new  overloads new

-- | usage 
--  a `par` b   
--   Fork evaluation of a and return b. 
@url http://www.frege-lang.org/doc/frege/lib/ForkJoin#par
par ∷ β → α → α 
infixr  2

-- | usage 
--  f $| a   
--   Equivalent to a `par` f a 
@url http://www.frege-lang.org/doc/frege/lib/ForkJoin#$_bar
($|) ∷  (β→α) → β → α 
infixr  1

-- | usage 
--  parOp f a b   
--   Equivalent to a `par` b `par` f a b 
@url http://www.frege-lang.org/doc/frege/lib/ForkJoin#parOp
parOp ∷ (β→γ→α) → β → γ → α

-- | usage 
--  a :| as   
--   Equivalent to parOp (:) a as 
@url http://www.frege-lang.org/doc/frege/lib/ForkJoin#_colon_bar
(:|) ∷  α → [α] → [α] 
infixr  4

-- | usage 
--  mapP f xs   
--   Like map, but applies the function parallel to mapping the rest of the list. It does therefore not work with infinite lists. 
@url http://www.frege-lang.org/doc/frege/lib/ForkJoin#mapP
mapP ∷ (β→α) → [β] → [α]

-- | Walk a ZipFile and find Frege modules. 
--   The classes inside the ZIP/JAR must be loadable with the given ClassLoader 
--   Ignores ClassNotFoundExceptions and the strange Errors that can happen during class loading. 
@url http://www.frege-lang.org/doc/frege/lib/Modules#zipWalk
zipWalk ∷ ClassLoader → ZipFile → IO [(String, FregePackage)]

-- | load a package and return maybe a tuple of package name and FregePackage  
@url http://www.frege-lang.org/doc/frege/lib/Modules#getX
getX ∷ ClassLoader → String → IO (Maybe (String, FregePackage))


@url http://www.frege-lang.org/doc/frege/lib/Modules#classAtEnd
classAtEnd ∷ Regex


@url http://www.frege-lang.org/doc/frege/lib/Modules#dollars
dollars ∷ Regex


@url http://www.frege-lang.org/doc/frege/lib/Modules#dirSep
dirSep ∷ Regex

-- | the path separator used here  
@url http://www.frege-lang.org/doc/frege/lib/Modules#pathSep
pathSep ∷ String

-- | a pattern that can be used to Regex.split a String by the path separator  
@url http://www.frege-lang.org/doc/frege/lib/Modules#pathRE
pathRE ∷ Regex

-- | the class path this JVM started with, as [String]  
@url http://www.frege-lang.org/doc/frege/lib/Modules#classPath
classPath ∷ [String]

-- | Walk a directory and find Frege modules. 
--   The classes in the directory must be loadable with the given ClassLoader 
--   Ignores ClassNotFoundExceptions and the strange Errors that can happen during class loading. 
@url http://www.frege-lang.org/doc/frege/lib/Modules#dirWalk
dirWalk ∷ ClassLoader → String → MutableIO File → IO [(String, FregePackage)]

-- | Walk a directory or a zip file and search for Frege packages. 
--   If the argument is neither a directory nor a ZIP/JAR file, an empty list is returned.  
@url http://www.frege-lang.org/doc/frege/lib/Modules#walkThing
walkThing ∷ String → IO [(String, FregePackage)]

-- | walk the class path  
@url http://www.frege-lang.org/doc/frege/lib/Modules#walkCP
walkCP ∷ IO [(String, FregePackage)]

-- | walk a given path  
@url http://www.frege-lang.org/doc/frege/lib/Modules#walkPath
walkPath ∷ String → IO [(String, FregePackage)]


@url http://www.frege-lang.org/doc/frege/lib/Modules#_main
main ∷ [String] → IO ()

-- | Constructors
--  ----------------
--  R (String) 
--  T (TreeMap String a) 

@url http://www.frege-lang.org/doc/frege/lib/Modules#RTree
data RTree a


@url http://www.frege-lang.org/doc/frege/lib/Modules#RTree.R
R (String)


@url http://www.frege-lang.org/doc/frege/lib/Modules#RTree.T
T (TreeMap String a)

-- | Constructors
--  ----------------
--  Y (f (Y f)) 

@url http://www.frege-lang.org/doc/frege/lib/Modules#Y
data Y f


@url http://www.frege-lang.org/doc/frege/lib/Modules#Y.Y
Y (f (Y f))


@url http://www.frege-lang.org/doc/frege/lib/Modules#noPacks
noPacks ∷ Y RTree


@url http://www.frege-lang.org/doc/frege/lib/Modules#out
out ∷ Y α → α (Y α)


@url http://www.frege-lang.org/doc/frege/lib/Modules#pack
pack ∷ Y RTree → ([String], FregePackage) → Y RTree


@url http://www.frege-lang.org/doc/frege/lib/Modules#pfind
pfind ∷ [String] → Y RTree → Maybe (Y RTree)


@url http://www.frege-lang.org/doc/frege/lib/Modules#flat
flat ∷ Y RTree → [(String, Y RTree)]


@url http://www.frege-lang.org/doc/frege/lib/Modules#nf
nf ∷ Y RTree → Y RTree


@url http://www.frege-lang.org/doc/frege/lib/Modules#unR
unR ∷ Y RTree → Maybe String

-- | Constructors
--  ----------------
--  APPEND DOCUMENT   DOCUMENT 
--  GROUP DOCUMENT   DOCUMENT 
--  infixr  9 
--  LINE 
--  NEST Int   DOCUMENT 
--  NONE 
--  TEXT (String) 

@url http://www.frege-lang.org/doc/frege/lib/PP#DOCUMENT
data DOCUMENT


@url http://www.frege-lang.org/doc/frege/lib/PP#DOCUMENT.APPEND
APPEND DOCUMENT   DOCUMENT


@url http://www.frege-lang.org/doc/frege/lib/PP#DOCUMENT.GROUP
GROUP DOCUMENT   DOCUMENT 
infixr  9


@url http://www.frege-lang.org/doc/frege/lib/PP#DOCUMENT.LINE
LINE


@url http://www.frege-lang.org/doc/frege/lib/PP#DOCUMENT.NEST
NEST Int   DOCUMENT


@url http://www.frege-lang.org/doc/frege/lib/PP#DOCUMENT.NONE
NONE


@url http://www.frege-lang.org/doc/frege/lib/PP#DOCUMENT.TEXT
TEXT (String)

-- | Constructors
--  ----------------
--  Line {ind ∷ Int, doc ∷ Doc} 
--  None 
--  Text {hd ∷ String, doc ∷ Doc} 
--   Member Functions
--  ----------------
--  doc ∷ Doc → Doc 
--   access field doc  
--  hd ∷ Doc → String 
--   access field hd  
--  ind ∷ Doc → Int 
--   access field ind   
@url http://www.frege-lang.org/doc/frege/lib/PP#Doc
data Doc


@url http://www.frege-lang.org/doc/frege/lib/PP#Doc.Line
Line {ind ∷ Int, doc ∷ Doc}


@url http://www.frege-lang.org/doc/frege/lib/PP#Doc.None
None


@url http://www.frege-lang.org/doc/frege/lib/PP#Doc.Text
Text {hd ∷ String, doc ∷ Doc}


@url http://www.frege-lang.org/doc/frege/lib/PP#_lt_gt
(<>) ∷  DOCUMENT → DOCUMENT → DOCUMENT 
infixr  6


@url http://www.frege-lang.org/doc/frege/lib/PP#nest
nest ∷ Int → DOCUMENT → DOCUMENT


@url http://www.frege-lang.org/doc/frege/lib/PP#text
text ∷ String → DOCUMENT


@url http://www.frege-lang.org/doc/frege/lib/PP#group
group ∷ DOCUMENT → DOCUMENT


@url http://www.frege-lang.org/doc/frege/lib/PP#flatten
flatten ∷ DOCUMENT → DOCUMENT


@url http://www.frege-lang.org/doc/frege/lib/PP#layout_tick
layout' ∷ Doc → String


@url http://www.frege-lang.org/doc/frege/lib/PP#layout
layout ∷ Doc → ST α String


@url http://www.frege-lang.org/doc/frege/lib/PP#appendableFromWriter
appendableFromWriter ∷ Writer → STMutable RealWorld Appendable 
native (Appendable)


@url http://www.frege-lang.org/doc/frege/lib/PP#prettyIO
prettyIO ∷ Writer → Int → DOCUMENT → IO ()


@url http://www.frege-lang.org/doc/frege/lib/PP#blanks64
blanks64 ∷ String


@url http://www.frege-lang.org/doc/frege/lib/PP#best
best ∷ Int → Int → DOCUMENT → Doc


@url http://www.frege-lang.org/doc/frege/lib/PP#be
be ∷ Int → Int → [(Int, DOCUMENT)] → Doc


@url http://www.frege-lang.org/doc/frege/lib/PP#better
better ∷ Int → Int → Doc → Maybe Doc


@url http://www.frege-lang.org/doc/frege/lib/PP#fits
fits ∷ Int → Doc → Bool


@url http://www.frege-lang.org/doc/frege/lib/PP#pretty
pretty ∷ Int → DOCUMENT → String

-- | two documents with intervening space  
@url http://www.frege-lang.org/doc/frege/lib/PP#_lt_plus_gt
(<+>) ∷  DOCUMENT → DOCUMENT → DOCUMENT 
infixr  8

-- | two documents stacked  
@url http://www.frege-lang.org/doc/frege/lib/PP#_lt_div_gt
(</>) ∷  DOCUMENT → DOCUMENT → DOCUMENT 
infixr  7


@url http://www.frege-lang.org/doc/frege/lib/PP#folddoc
folddoc ∷ (DOCUMENT→DOCUMENT→DOCUMENT) → [DOCUMENT] → DOCUMENT

-- | some documents with space inbetween  
@url http://www.frege-lang.org/doc/frege/lib/PP#spread
spread ∷ [DOCUMENT] → DOCUMENT

-- | some documents stacked  
@url http://www.frege-lang.org/doc/frege/lib/PP#stack
stack ∷ [DOCUMENT] → DOCUMENT


@url http://www.frege-lang.org/doc/frege/lib/PP#bracket
bracket ∷ String → DOCUMENT → String → DOCUMENT


@url http://www.frege-lang.org/doc/frege/lib/PP#block
block ∷ String → DOCUMENT → String → DOCUMENT

-- | join two documents without intervening space or stack them  
@url http://www.frege-lang.org/doc/frege/lib/PP#_lt_tilde_div_gt
(<~/>) ∷  DOCUMENT → DOCUMENT → DOCUMENT 
infixr  7

-- | join two documents with intervening space or stack them  
@url http://www.frege-lang.org/doc/frege/lib/PP#_lt_plus_div_gt
(<+/>) ∷  DOCUMENT → DOCUMENT → DOCUMENT 
infixr  7


@url http://www.frege-lang.org/doc/frege/lib/PP#fill
fill ∷ [DOCUMENT] → DOCUMENT

-- | like fill, but with separator between items  
@url http://www.frege-lang.org/doc/frege/lib/PP#sep
sep ∷ String → [DOCUMENT] → DOCUMENT

-- | like sep, but no space after separator  
@url http://www.frege-lang.org/doc/frege/lib/PP#tight
tight ∷ String → [DOCUMENT] → DOCUMENT

-- | fill words of a string  
@url http://www.frege-lang.org/doc/frege/lib/PP#_break
break ∷ String → [DOCUMENT]

-- | turn a string into a document by breaking on space and filling up  
@url http://www.frege-lang.org/doc/frege/lib/PP#msgdoc
msgdoc ∷ String → DOCUMENT

-- | Returns a Double with a positive sign, greater than or equal to 0.0 and less than 1.0.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#random
random ∷ () → IO Double 
native java.lang.Math.random

-- | square  
@url http://www.frege-lang.org/doc/frege/prelude/Math#sqr
sqr ∷ Num a ⇒ a → a

-- | Known Instances
--  ----------------
--  Double, Float 
--   Member Functions
--  ----------------
--  acos ∷ Floating r ⇒ r → Double 
--   Returns the arc cosine of a value; the returned angle is in the range 0.0 through Floating.pi.   
--  acosh ∷ Floating r ⇒ r → Double 
--   Inverse hyperbolic function for Floating.cosh   
--  asin ∷ Floating r ⇒ r → Double 
--   Returns the arc sine of a value; the returned angle is in the range -Floating.pi/2 through Floating.pi/2.   
--  asinh ∷ Floating r ⇒ r → Double 
--   Inverse hyperbolic function for Floating.sinh   
--  atan ∷ Floating r ⇒ r → Double 
--   Returns the arc tangent of a value; the returned angle is in the range -Floating.pi/2 through Floating.pi/2.   
--  atan2 ∷ Floating r ⇒ r → r → Double 
--   Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).   
--  atanh ∷ Floating r ⇒ r → Double 
--   Inverse hyperbolic function for Floating.tanh   
--  cbrt ∷ Floating r ⇒ r → Double 
--   Returns the cube root of a value.   
--  ceil ∷ Floating r ⇒ r → Double 
--   Returns the smallest (closest to negative infinity) value that is greater than or equal to the argument and is equal to a mathematical integer.   
--  copySign ∷ Floating r ⇒ r → r → r 
--   Returns the first argument with the sign of the second argument.   
--  cos ∷ Floating r ⇒ r → Double 
--   Returns the trigonometric cosine of an angle.   
--  cosh ∷ Floating r ⇒ r → Double 
--   Returns the hyperbolic cosine of a floating point value.   
--  e ∷ Floating r ⇒ r 
--   The value that is closer than any other to e, the base of the natural logarithms.   
--  exp ∷ Floating r ⇒ r → Double 
--   Returns Euler's number Floating.e raised to the power of a floating-point value.   
--  expm1 ∷ Floating r ⇒ r → Double 
--   Returns e^x -1.   
--  floor ∷ Floating r ⇒ r → Double 
--   Returns the largest (closest to positive infinity) value that is less than or equal to the argument and is equal to a mathematical integer. 
--   Special cases: If the argument value is already equal to a mathematical integer, then the result is the same as the argument. If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument.  
--  getExponent ∷ Floating r ⇒ r → Int 
--   Returns the unbiased exponent used in the representation of a floating point number.   
--  hypot ∷ Floating r ⇒ r → r → Double 
--   Returns Floating.sqrt (x² + y²) without intermediate overflow or underflow.   
--  ieeeRemainder ∷ Floating r ⇒ r → r → Double 
--   Computes the remainder operation on two arguments as prescribed by the IEEE 754 standard.   
--  log ∷ Floating r ⇒ r → Double 
--   Returns the natural logarithm (base Floating.e) of a value.   
--  log10 ∷ Floating r ⇒ r → Double 
--   Returns the base 10 logarithm of a value.   
--  log1p ∷ Floating r ⇒ r → Double 
--   Returns the natural logarithm of the sum of the argument and 1.   
--  logBase ∷ Floating r ⇒ r → r → Double 
--   Returns the logarithm of the second argument to the base given by the first argument.   
--  nextAfter ∷ Floating r ⇒ r → r → Double 
--   Returns the floating-point number adjacent to the first argument in the direction of the second argument.   
--  nextUp ∷ Floating r ⇒ r → r 
--   Returns the floating-point value adjacent to the argument in the direction of positive infinity.   
--  pi ∷ Floating r ⇒ r 
--   The value that is closer than any other to pi, the ratio of the circumference of a circle to its diameter.   
--  pow ∷ Floating r ⇒ r → r → Double 
--  infixr  15 
--   Returns the value of the first argument raised to the power of the second argument.   
--  rint ∷ Floating r ⇒ r → Double 
--   Returns the double value that is closest in value to the argument and is equal to a mathematical integer.   
--  round ∷ Floating r ⇒ r → Long 
--   Returns the closest Long to the argument, with ties rounding up.   
--  scalb ∷ Floating r ⇒ r → Int → r 
--   scalb d scaleFactor 
--   Return d * 2^scaleFactor rounded as if performed by a single correctly rounded floating-point multiply.   
--  signum ∷ Floating r ⇒ r → r 
--   Returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero.   
--  sin ∷ Floating r ⇒ r → Double 
--   Returns the trigonometric sine of an angle.   
--  sinh ∷ Floating r ⇒ r → Double 
--   Returns the hyperbolic sine of a value.   
--  sqrt ∷ Floating r ⇒ r → Double 
--   Returns the correctly rounded positive square root of a value.   
--  tan ∷ Floating r ⇒ r → Double 
--   Returns the trigonometric tangent of an angle.   
--  tanh ∷ Floating r ⇒ r → Double 
--   Returns the hyperbolic tangent of a floating point value.   
--  toDegrees ∷ Floating r ⇒ r → Double 
--   Converts an angle measured in radians to an approximately equivalent angle measured in degrees.   
--  toRadians ∷ Floating r ⇒ r → Double 
--   Converts an angle measured in degrees to an approximately equivalent angle measured in radians.   
--  ulp ∷ Floating r ⇒ r → r 
--   Returns the size of an ulp of the argument.    
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating
class (Eq r, Ord r, Num r, Real r) ⇒ Floating r

-- | Returns the arc cosine of a value; the returned angle is in the range 0.0 through Floating.pi.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.acos
acos ∷ Floating r ⇒ r → Double

-- | Inverse hyperbolic function for Floating.cosh  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.acosh
acosh ∷ Floating r ⇒ r → Double

-- | Returns the arc sine of a value; the returned angle is in the range -Floating.pi/2 through Floating.pi/2.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.asin
asin ∷ Floating r ⇒ r → Double

-- | Inverse hyperbolic function for Floating.sinh  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.asinh
asinh ∷ Floating r ⇒ r → Double

-- | Returns the arc tangent of a value; the returned angle is in the range -Floating.pi/2 through Floating.pi/2.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.atan
atan ∷ Floating r ⇒ r → Double

-- | Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.atan2
atan2 ∷ Floating r ⇒ r → r → Double

-- | Inverse hyperbolic function for Floating.tanh  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.atanh
atanh ∷ Floating r ⇒ r → Double

-- | Returns the cube root of a value.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.cbrt
cbrt ∷ Floating r ⇒ r → Double

-- | Returns the smallest (closest to negative infinity) value that is greater than or equal to the argument and is equal to a mathematical integer.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.ceil
ceil ∷ Floating r ⇒ r → Double

-- | Returns the first argument with the sign of the second argument.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.copySign
copySign ∷ Floating r ⇒ r → r → r

-- | Returns the trigonometric cosine of an angle.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.cos
cos ∷ Floating r ⇒ r → Double

-- | Returns the hyperbolic cosine of a floating point value.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.cosh
cosh ∷ Floating r ⇒ r → Double

-- | The value that is closer than any other to e, the base of the natural logarithms.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.e
e ∷ Floating r ⇒ r

-- | Returns Euler's number Floating.e raised to the power of a floating-point value.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.exp
exp ∷ Floating r ⇒ r → Double

-- | Returns e^x -1.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.expm1
expm1 ∷ Floating r ⇒ r → Double

-- | Returns the largest (closest to positive infinity) value that is less than or equal to the argument and is equal to a mathematical integer. 
--   Special cases: If the argument value is already equal to a mathematical integer, then the result is the same as the argument. If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument. 
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.floor
floor ∷ Floating r ⇒ r → Double

-- | Returns the unbiased exponent used in the representation of a floating point number.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.getExponent
getExponent ∷ Floating r ⇒ r → Int

-- | Returns Floating.sqrt (x² + y²) without intermediate overflow or underflow.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.hypot
hypot ∷ Floating r ⇒ r → r → Double

-- | Computes the remainder operation on two arguments as prescribed by the IEEE 754 standard.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.ieeeRemainder
ieeeRemainder ∷ Floating r ⇒ r → r → Double

-- | Returns the natural logarithm (base Floating.e) of a value.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.log
log ∷ Floating r ⇒ r → Double

-- | Returns the base 10 logarithm of a value.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.log10
log10 ∷ Floating r ⇒ r → Double

-- | Returns the natural logarithm of the sum of the argument and 1.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.log1p
log1p ∷ Floating r ⇒ r → Double

-- | Returns the logarithm of the second argument to the base given by the first argument.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.logBase
logBase ∷ Floating r ⇒ r → r → Double

-- | Returns the floating-point number adjacent to the first argument in the direction of the second argument.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.nextAfter
nextAfter ∷ Floating r ⇒ r → r → Double

-- | Returns the floating-point value adjacent to the argument in the direction of positive infinity.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.nextUp
nextUp ∷ Floating r ⇒ r → r

-- | The value that is closer than any other to pi, the ratio of the circumference of a circle to its diameter.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.pi
pi ∷ Floating r ⇒ r

-- | Returns the value of the first argument raised to the power of the second argument.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.pow
pow ∷ Floating r ⇒ r → r → Double 
infixr  15

-- | Returns the double value that is closest in value to the argument and is equal to a mathematical integer.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.rint
rint ∷ Floating r ⇒ r → Double

-- | Returns the closest Long to the argument, with ties rounding up.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.round
round ∷ Floating r ⇒ r → Long

-- | scalb d scaleFactor 
--   Return d * 2^scaleFactor rounded as if performed by a single correctly rounded floating-point multiply.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.scalb
scalb ∷ Floating r ⇒ r → Int → r

-- | Returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.signum
signum ∷ Floating r ⇒ r → r

-- | Returns the trigonometric sine of an angle.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.sin
sin ∷ Floating r ⇒ r → Double

-- | Returns the hyperbolic sine of a value.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.sinh
sinh ∷ Floating r ⇒ r → Double

-- | Returns the correctly rounded positive square root of a value.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.sqrt
sqrt ∷ Floating r ⇒ r → Double

-- | Returns the trigonometric tangent of an angle.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.tan
tan ∷ Floating r ⇒ r → Double

-- | Returns the hyperbolic tangent of a floating point value.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.tanh
tanh ∷ Floating r ⇒ r → Double

-- | Converts an angle measured in radians to an approximately equivalent angle measured in degrees.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.toDegrees
toDegrees ∷ Floating r ⇒ r → Double

-- | Converts an angle measured in degrees to an approximately equivalent angle measured in radians.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.toRadians
toRadians ∷ Floating r ⇒ r → Double

-- | Returns the size of an ulp of the argument.  
@url http://www.frege-lang.org/doc/frege/prelude/Math#Floating.ulp
ulp ∷ Floating r ⇒ r → r

-- |true if and only if the argument is a Maybe.Just value  
@url http://www.frege-lang.org/doc/frege/prelude/Maybe#isJust
isJust ∷ Maybe α → Bool

-- |true if and only if the argument is Maybe.Nothing 
--   This function is preferable over v == Nothing because no Eq constraint is needed.  
@url http://www.frege-lang.org/doc/frege/prelude/Maybe#isNothing
isNothing ∷ Maybe α → Bool

-- |fromMaybe d (Just a) returns a and fromMaybe d Nothing returns d  
@url http://www.frege-lang.org/doc/frege/prelude/Maybe#fromMaybe
fromMaybe ∷ α → Maybe α → α

-- |unJust Nothing is undefined whereas unJust (Just a) is a  
@url http://www.frege-lang.org/doc/frege/prelude/Maybe#unJust
unJust ∷ Maybe α → α

-- | The catMaybes function takes a list of Maybes and returns a list of all the Maybe.Just values.  
@url http://www.frege-lang.org/doc/frege/prelude/Maybe#catMaybes
catMaybes ∷ ListSource β ⇒ β (Maybe α) → [α]

-- | The mapMaybe function is a version of map which can throw out elements. In particular, the functional argument returns something of type Maybe b. If this is Maybe.Nothing, no element is added on to the result list. If it just Maybe.Just b, then b is included in the result list. 
@url http://www.frege-lang.org/doc/frege/prelude/Maybe#mapMaybe
mapMaybe ∷ (β→Maybe α) → [β] → [α]

-- | give the first element of a list or Maybe.Nothing  
@url http://www.frege-lang.org/doc/frege/prelude/Maybe#listToMaybe
listToMaybe ∷ ListSource α ⇒ α β → Maybe β

-- | convert a Maybe to a single element list or an empty list  
@url http://www.frege-lang.org/doc/frege/prelude/Maybe#maybeToList
maybeToList ∷ Maybe a → [a]

-- | short hand for Mutable s (JArray a)  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayOf
type ArrayOf s a = Mutable s (JArray a)

-- | The type JArray X corresponds to Java's J[] for any type X where J is the corresponding java type of X, but note that Java does not really have generic arrays. 
--   We can use arrays generically inside Frege, but native code that expects or returns arrays will not be generic. 
--   The native interface will take every occurrence of 
--   JArray X 
--   or 
--   Mutable s (JArray X) 
--   in native declarations to denote the corresponding Java array type. But when the type argument is variable, it will be just Object. This corresponds to the usage in the array reflection API. 
--   Multi-dimensional arrays are not very well supported out of the box. If one needs more than 1 dimensions, the type will get quite complex, as of course arrays are mutable and so one will have multiple levels of JArray nested in Mutable nested in JArray and so forth. Moreover, multi-dimensional arrays cannot be generic at all. 
--   Note that there are really 2 different APIs: With the JArray.getElemAt, JArray.getAt, JArray.setAt, JArray.setElemAt, JArray.itemAt and JArray.elemAt it is possible to work on Java objects with java compile time type java.lang.Object or X[] for some java type X or java.lang.Object[], but the run time type is always java.lang.Object[]. With the ArrayElem.newArray, ArrayElem.getElemAt, ArrayElem.getAt, ArrayElem.setAt, ArrayElem.setElemAt, ArrayElem.itemAt and ArrayElem.elemAt functions of the ArrayElem class for some type F that is an instance of ArrayElem, we can work on Java objects with Java compile time type X[], where X is the Java type corresponding to F, but the run time type is always X[]. 
--   The former ones are usable only in polymorphic functions where the type argument for JArray is a variable and we don't (want to) have ArrayElem constraints. They are not good for interfacing native methods that take or return arrays of a certain type. Run time type errors are possible because native methods could put anything there. However, when used in Frege only, the typing is safe. 
--   The latter ones are truly type safe, because their Frege type corresponds to the expected Java compile time type, which is also the actual run time type. 
--   Here is a cheat sheet for the different array get and set methods: 
--   Array type Argument/ Description Result 
--   setAt Mutable (JArray s X) Maybe X set null or data element setElemAt Mutable (JArray s X) X set data element getAt Mutable (JArray s X) Maybe X get null or data element getElemAt Mutable (JArray s X) X get data element (unsafe) itemAt JArray s X Maybe X get null or data element (pure) elemAt JArray s X X get data element (pure, unsafe) 
--   "unsafe" in this context applies only to non-primitive types and means that the function will fail with a NullPointerException if the value accessed is a Java null. 
--   Member Functions
--  ----------------
--  cache ∷ ArrayElem β ⇒ (Int→JArray β→β) → Int → STMutable α (JArray β) 
--   Create a mutable array of a given size and compute the values of its elements by some function. The function gets the current index and the already computed values in the form of an immutable array, where it can access elements with a smaller index than the current one. 
--   The restriction to smaller indexes is because array elements are strict in Frege. For example, we can't store unevaluated values in an int[] array, because the Java type of unevaluated values is not int. 
--   To create an array of 1000 fibonacci numbers, one could write: 
--   cache fib 1000 where fib 0 _ = 1n fib 1 _ = 1n fib n a = a.[n-1] + a.[n-2]  
--  elemAt ∷ JArray a → Int → a 
--  pure native java.lang.reflect.Array.get 
--   Like JArray.itemAt but the result is not wrapped in Maybe. 
--   This is appropriate for arrays of primitive values. For all other arrays, the user is expected to prove that the element cannot be null or else risk a NullPointerException.  
--  fold ∷ ArrayElem α ⇒ (β → α → β) → β → ArrayOf γ α → ST γ β 
--   Equivalent of fold for mutable arrays.   
--  fromIndexList ∷ ArrayElem α ⇒ [(Int, α)] → STMutable β (JArray α) 
--   Create a mutable array from a finite index/value list. 
--   Indexes not mentioned in the list remain null for non primitive array elements and 0 otherwise.  
--  fromList ∷ ArrayElem α ⇒ [α] → STMutable β (JArray α) 
--   Create a mutable array from a finite list.  
--  fromMaybeList ∷ ArrayElem α ⇒ [Maybe α] → STMutable β (JArray α) 
--   Create a mutable array from a finite list of Maybe values.  
--  genericFromIndexList ∷ JavaType α ⇒ [(Int, α)] → STMutable β (JArray α) 
--   Create a mutable generic array from a finite index/value list. 
--   Indexes not mentioned in the list remain null for non primitive array elements and 0 otherwise.  
--  getAt ∷ ArrayOf s a → Int → ST s (Maybe a) 
--  native java.lang.reflect.Array.get 
--   Get the array element at a certain index of a mutable array and return it in the ST monad. 
--   This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array. 
--   Because in general, array elements may be null, the return value is wrapped in Maybe, as usual.  
--  getElemAt ∷ ArrayOf s a → Int → ST s a 
--  native java.lang.reflect.Array.get 
--   Get the array element at a certain index of a mutable array and return it in the ST monad. 
--   This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array. 
--   Unlike with JArray.getAt the element must not be null. 
--   This is appropriate for arrays of primitive values. For all other arrays, the user is expected to prove that the element cannot be null or else risk a NullPointerException.  
--  getLength ∷ ArrayOf α β → ST α Int 
--   Return the length of a mutable array in the ST monad.   
--  itemAt ∷ JArray a → Int → Maybe a 
--  pure native java.lang.reflect.Array.get 
--   Get the array element at a given index. This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array. 
--   Because in general, array elements may be null, the return value is wrapped in Maybe, as usual.  
--  length ∷ JArray a → Int 
--  pure native java.lang.reflect.Array.getLength 
--   Tell the length of an immutable Java array. 
--   Because the length of an array cannot change, it is safe to use this function with Mutable.readonly.  
--  map ∷ (ArrayElem α, ArrayElem β) ⇒ (α → β) → JArray α → STMutable γ (JArray β) 
--   Map a function over the elements of an immutable array. 
--   The results will be collected in a new mutable array of the same length. 
--   If the target element type is a primitive one, no null elements are allowed in the source array.   
--  mapElem ∷ (ArrayElem γ, ArrayElem α) ⇒ (γ → α) → JArray γ → ArrayOf β α → Int → ST β () 
--   Apply a function to an array element and write the result to another array at the same index. 
--   If the target array is a primitive one, there must be no null elements in the source array.  
--  modify ∷ ArrayElem α ⇒ (α → α) → ArrayOf β α → ST β () 
--   Modify a mutable array by applying a function to all its elements.   
--  new ∷ Class a → Int → STMutable s (JArray a) 
--  native java.lang.reflect.Array.newInstance 
--   create a one dimensional Java array   
--  newM ∷ Class a → Int → STMutable s (JArray (Mutable s a)) 
--  native java.lang.reflect.Array.newInstance 
--   create a one dimensional Java array that holds Mutable data   
--  setAt ∷ ArrayOf s a → Int → Maybe a → ST s () 
--  native java.lang.reflect.Array.set 
--   Set the element at a certain index of a mutable array to a value that is wrapped in Maybe. This won't work for primitive element types. 
--   This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array. 
--   To set the corresponding array element to null, pass Maybe.Nothing, otherwise pass a Maybe.Just value.  
--  setElemAt ∷ ArrayOf s a → Int → a → ST s () 
--  native java.lang.reflect.Array.set 
--   Set the element at a certain index of a mutable array. 
--   This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array.   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray
data JArray a 

-- | Create a mutable array of a given size and compute the values of its elements by some function. The function gets the current index and the already computed values in the form of an immutable array, where it can access elements with a smaller index than the current one. 
--   The restriction to smaller indexes is because array elements are strict in Frege. For example, we can't store unevaluated values in an int[] array, because the Java type of unevaluated values is not int. 
--   To create an array of 1000 fibonacci numbers, one could write: 
--   cache fib 1000 where fib 0 _ = 1n fib 1 _ = 1n fib n a = a.[n-1] + a.[n-2] 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.cache
cache ∷ ArrayElem β ⇒ (Int→JArray β→β) → Int → STMutable α (JArray β)

-- | Like JArray.itemAt but the result is not wrapped in Maybe. 
--   This is appropriate for arrays of primitive values. For all other arrays, the user is expected to prove that the element cannot be null or else risk a NullPointerException. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.elemAt
elemAt ∷ JArray a → Int → a 
pure native java.lang.reflect.Array.get

-- | Equivalent of fold for mutable arrays.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.fold
fold ∷ ArrayElem α ⇒ (β → α → β) → β → ArrayOf γ α → ST γ β

-- | Create a mutable array from a finite index/value list. 
--   Indexes not mentioned in the list remain null for non primitive array elements and 0 otherwise. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.fromIndexList
fromIndexList ∷ ArrayElem α ⇒ [(Int, α)] → STMutable β (JArray α)

-- | Create a mutable array from a finite list. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.fromList
fromList ∷ ArrayElem α ⇒ [α] → STMutable β (JArray α)

-- | Create a mutable array from a finite list of Maybe values. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.fromMaybeList
fromMaybeList ∷ ArrayElem α ⇒ [Maybe α] → STMutable β (JArray α)

-- | Create a mutable generic array from a finite index/value list. 
--   Indexes not mentioned in the list remain null for non primitive array elements and 0 otherwise. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.genericFromIndexList
genericFromIndexList ∷ JavaType α ⇒ [(Int, α)] → STMutable β (JArray α)

-- | Get the array element at a certain index of a mutable array and return it in the ST monad. 
--   This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array. 
--   Because in general, array elements may be null, the return value is wrapped in Maybe, as usual. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.getAt
getAt ∷ ArrayOf s a → Int → ST s (Maybe a) 
native java.lang.reflect.Array.get

-- | Get the array element at a certain index of a mutable array and return it in the ST monad. 
--   This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array. 
--   Unlike with JArray.getAt the element must not be null. 
--   This is appropriate for arrays of primitive values. For all other arrays, the user is expected to prove that the element cannot be null or else risk a NullPointerException. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.getElemAt
getElemAt ∷ ArrayOf s a → Int → ST s a 
native java.lang.reflect.Array.get

-- | Return the length of a mutable array in the ST monad.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.getLength
getLength ∷ ArrayOf α β → ST α Int

-- | Get the array element at a given index. This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array. 
--   Because in general, array elements may be null, the return value is wrapped in Maybe, as usual. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.itemAt
itemAt ∷ JArray a → Int → Maybe a 
pure native java.lang.reflect.Array.get

-- | Tell the length of an immutable Java array. 
--   Because the length of an array cannot change, it is safe to use this function with Mutable.readonly. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.length
length ∷ JArray a → Int 
pure native java.lang.reflect.Array.getLength

-- | Map a function over the elements of an immutable array. 
--   The results will be collected in a new mutable array of the same length. 
--   If the target element type is a primitive one, no null elements are allowed in the source array.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.map
map ∷ (ArrayElem α, ArrayElem β) ⇒ (α → β) → JArray α → STMutable γ (JArray β)

-- | Apply a function to an array element and write the result to another array at the same index. 
--   If the target array is a primitive one, there must be no null elements in the source array. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.mapElem
mapElem ∷ (ArrayElem γ, ArrayElem α) ⇒ (γ → α) → JArray γ → ArrayOf β α → Int → ST β ()

-- | Modify a mutable array by applying a function to all its elements.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.modify
modify ∷ ArrayElem α ⇒ (α → α) → ArrayOf β α → ST β ()

-- | create a one dimensional Java array  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray._new
new ∷ Class a → Int → STMutable s (JArray a) 
native java.lang.reflect.Array.newInstance

-- | create a one dimensional Java array that holds Mutable data  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.newM
newM ∷ Class a → Int → STMutable s (JArray (Mutable s a)) 
native java.lang.reflect.Array.newInstance

-- | Set the element at a certain index of a mutable array to a value that is wrapped in Maybe. This won't work for primitive element types. 
--   This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array. 
--   To set the corresponding array element to null, pass Maybe.Nothing, otherwise pass a Maybe.Just value. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.setAt
setAt ∷ ArrayOf s a → Int → Maybe a → ST s () 
native java.lang.reflect.Array.set

-- | Set the element at a certain index of a mutable array. 
--   This will throw an IndexOutOfBoundsException if the index is lower than 0 or greater or equal to the length of the array. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#JArray.setElemAt
setElemAt ∷ ArrayOf s a → Int → a → ST s () 
native java.lang.reflect.Array.set

-- | Unload an immutable array to a list. 
--   The non-null elements become Maybe.Just values, the nulls translate to Maybe.Nothing  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#toMaybeList
toMaybeList ∷ JArray α → [Maybe α]

-- | Create an immutable array from a finite list whose elements are Maybe values. 
--   Uses JArray.fromMaybeList and freezes the resulting array. 
--   Note that 
--   arrayFromList . toList 
--   does not guarantee reconstruction of the original array, because nulls get lost, whereas 
--   arrayFromMaybeList . toMaybeList 
--   does.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#arrayFromMaybeList
arrayFromMaybeList ∷ ArrayElem a ⇒ [Maybe a] → JArray a

-- | Create an immutable array from a finite list whose elements are 'ArrayElem` 
--   Uses JArray.fromList and freezes the resulting array.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#arrayFromList
arrayFromList ∷ ArrayElem α ⇒ [α] → JArray α

-- | Create an immutable array from a finite index/value list. 
--   Uses JArray.fromIndexList and freezes the resulting array.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#arrayFromIndexList
arrayFromIndexList ∷ ArrayElem α ⇒ [(Int, α)] → JArray α

-- | Create an immutable generic array from a finite index/value list. 
--   Uses JArray.genericFromIndexList and freezes the resulting array.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#genericArrayFromIndexList
genericArrayFromIndexList ∷ JavaType α ⇒ [(Int, α)] → JArray α

-- | Map a function over the elements of an immutable array, and collect the results in another immutable array. 
--   Uses JArray.map and makes result read-only. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#arrayMap
arrayMap ∷ (ArrayElem α, ArrayElem β) ⇒ (α → β) → JArray α → JArray β

-- | Left fold an immutable array 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#arrayFold
arrayFold ∷ (α → β → α) → α → JArray β → α

-- | Memoize a number of results from a function that maps Int to the array element. 
--   Uses JArray.cache and makes it immutable 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#arrayCache
arrayCache ∷ ArrayElem α ⇒ (Int→JArray α→α) → Int → JArray α

-- | Type class for basic JArray operations. The element type must be an instance of this class to support arrays of that type. 
--  ArrayElem is not derivable, derive sub-class ArrayElement instead. 
--   The operations are mostly overloaded on return type and provide the appropriate java.lang.Class object when needed. 
--   This supports one dimensional arrays, though more dimensions would be possible with some extra effort. 
--   Note that JArray cannot be an instance of ArrayElem itself, because it has no fixed java.lang.Class instance. 
--   Known Instances
--  ----------------
--  StringJ, ->, (,), (,,), Integer, [], Int, Char, Bool, Float, Double, Long 
--   Member Functions
--  ----------------
--  elemAt ∷ ArrayElem a ⇒ JArray a → Int → a 
--  pure native [i] 
--   Get non-null element at index from immutable array, see JArray.elemAt   
--  getAt ∷ ArrayElem a ⇒ ArrayOf s a → Int → ST s (Maybe a) 
--  native [i] 
--   Get item at index from mutable array, see JArray.getAt   
--  getElemAt ∷ ArrayElem a ⇒ ArrayOf s a → Int → ST s a 
--  native [i] 
--   Get non null item at index from mutable array, see JArray.getElemAt   
--  itemAt ∷ ArrayElem a ⇒ JArray a → Int → Maybe a 
--  pure native [i] 
--   Get item at index from immutable array, see JArray.itemAt   
--  modifyAt ∷ ArrayElem a ⇒ (a → a) → ArrayOf s a → Int → ST s () 
--   Modify item at index in mutable array with result of function application.   
--  modifyElemAt ∷ ArrayElem a ⇒ (a → a) → ArrayOf s a → Int → ST s () 
--   Modify non null item at index in mutable array with result of function application.   
--  newArray ∷ ArrayElem a ⇒ Int → STMutable s (JArray a) 
--  native new[] 
--   Create a one dimensional array with elements of the instantiated type.   
--  setAt ∷ ArrayElem a ⇒ ArrayOf s a → Int → Maybe a → ST s () 
--  native []= 
--   Set item or null at index in mutable array, see JArray.setAt   
--  setElemAt ∷ ArrayElem a ⇒ ArrayOf s a → Int → a → ST s () 
--  native []= 
--   Set item at index in mutable array. see JArray.setElemAt    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem
class JavaType a ⇒ ArrayElem a

-- | Get non-null element at index from immutable array, see JArray.elemAt  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem.elemAt
elemAt ∷ ArrayElem a ⇒ JArray a → Int → a 
pure native [i]

-- | Get item at index from mutable array, see JArray.getAt  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem.getAt
getAt ∷ ArrayElem a ⇒ ArrayOf s a → Int → ST s (Maybe a) 
native [i]

-- | Get non null item at index from mutable array, see JArray.getElemAt  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem.getElemAt
getElemAt ∷ ArrayElem a ⇒ ArrayOf s a → Int → ST s a 
native [i]

-- | Get item at index from immutable array, see JArray.itemAt  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem.itemAt
itemAt ∷ ArrayElem a ⇒ JArray a → Int → Maybe a 
pure native [i]

-- | Modify item at index in mutable array with result of function application.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem.modifyAt
modifyAt ∷ ArrayElem a ⇒ (a → a) → ArrayOf s a → Int → ST s ()

-- | Modify non null item at index in mutable array with result of function application.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem.modifyElemAt
modifyElemAt ∷ ArrayElem a ⇒ (a → a) → ArrayOf s a → Int → ST s ()

-- | Create a one dimensional array with elements of the instantiated type.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem.newArray
newArray ∷ ArrayElem a ⇒ Int → STMutable s (JArray a) 
native new[]

-- | Set item or null at index in mutable array, see JArray.setAt  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem.setAt
setAt ∷ ArrayElem a ⇒ ArrayOf s a → Int → Maybe a → ST s () 
native []=

-- | Set item at index in mutable array. see JArray.setElemAt  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElem.setElemAt
setElemAt ∷ ArrayElem a ⇒ ArrayOf s a → Int → a → ST s () 
native []=

-- | Type class for array elements of primitive type. 
--   Not thought for public use, as all instances are pre-defined. 
--   The default implementation of PrimitiveArrayElement.setAt does not support passing Maybe.Nothing, because there can be no null in primitive arrays. 
--   Known Instances
--  ----------------
--  Int, Char, Bool, Float, Double, Long 
--   Member Functions
--  ----------------
--  getAt ∷ PrimitiveArrayElement a ⇒ ArrayOf s a → Int → ST s (Maybe a) 
--   Default implementation suitable for primitive types, wraps result with Maybe.Just   
--  itemAt ∷ PrimitiveArrayElement a ⇒ JArray a → Int → Maybe a 
--   Default implementation suitable for primitive types, wraps result with Maybe.Just   
--  setAt ∷ PrimitiveArrayElement a ⇒ ArrayOf s a → Int → Maybe a → ST s () 
--   Default implementation suitable for primitive types. 
--   It is an error to put Maybe.Nothing in a primitive array.    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#PrimitiveArrayElement
class (JavaType a, ArrayElem a) ⇒ PrimitiveArrayElement a

-- | Default implementation suitable for primitive types, wraps result with Maybe.Just  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#PrimitiveArrayElement.getAt
getAt ∷ PrimitiveArrayElement a ⇒ ArrayOf s a → Int → ST s (Maybe a)

-- | Default implementation suitable for primitive types, wraps result with Maybe.Just  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#PrimitiveArrayElement.itemAt
itemAt ∷ PrimitiveArrayElement a ⇒ JArray a → Int → Maybe a

-- | Default implementation suitable for primitive types. 
--   It is an error to put Maybe.Nothing in a primitive array.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#PrimitiveArrayElement.setAt
setAt ∷ PrimitiveArrayElement a ⇒ ArrayOf s a → Int → Maybe a → ST s ()

-- |ArrayElement is the class one derives for array elements. 
--   In addition to the base class ArrayElem it also supports mutable array elements.  
--   Known Instances
--  ----------------
--  StringJ, ->, (,), (,,), Integer, [] 
--   Member Functions
--  ----------------
--  newArrayM ∷ ArrayElement a ⇒ Int → STMutable s (JArray (Mutable s a)) 
--   Create an array of mutable items. 
--   Such an array may never be immutable itself.    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElement
class (JavaType a, ArrayElem a) ⇒ ArrayElement a

-- | Create an array of mutable items. 
--   Such an array may never be immutable itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeArrays#ArrayElement.newArrayM
newArrayM ∷ ArrayElement a ⇒ Int → STMutable s (JArray (Mutable s a))

-- | Unit type 
--   Constructors
--  ----------------
--  () 
--   Unit value   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Unit
data ()

-- | Unit value 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Unit.Unit
()

-- | 2-tuple 
--   Constructors
--  ----------------
--  (,) a   b 
--   2-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple2
data (a, b)

-- | 2-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple2.Tuple2
(,) a   b

-- | 3-tuple 
--   Constructors
--  ----------------
--  (,,) a   b   c 
--   3-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple3
data (a, b, c)

-- | 3-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple3.Tuple3
(,,) a   b   c

-- | 4-tuple 
--   Constructors
--  ----------------
--  (,,,) a   b   c   d 
--   4-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple4
data (a, b, c, d)

-- | 4-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple4.Tuple4
(,,,) a   b   c   d

-- | 5-tuple 
--   Constructors
--  ----------------
--  (,,,,) a   b   c   d   e 
--   5-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple5
data (a, b, c, d, e)

-- | 5-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple5.Tuple5
(,,,,) a   b   c   d   e

-- | 6-tuple 
--   Constructors
--  ----------------
--  (,,,,,) a   b   c   d   e   f 
--   6-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple6
data (a, b, c, d, e, f)

-- | 6-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple6.Tuple6
(,,,,,) a   b   c   d   e   f

-- | 7-tuple 
--   Constructors
--  ----------------
--  (,,,,,,) a   b   c   d   e   f   g 
--   7-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple7
data (a, b, c, d, e, f, g)

-- | 7-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple7.Tuple7
(,,,,,,) a   b   c   d   e   f   g

-- | 8-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,) a   b   c   d   e   f   g   h 
--   8-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple8
data (a, b, c, d, e, f, g, h)

-- | 8-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple8.Tuple8
(,,,,,,,) a   b   c   d   e   f   g   h

-- | 9-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,) a   b   c   d   e   f   g   h   i 
--   9-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple9
data (a, b, c, d, e, f, g, h, i)

-- | 9-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple9.Tuple9
(,,,,,,,,) a   b   c   d   e   f   g   h   i

-- | 10-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,) a   b   c   d   e   f   g   h   i   j 
--   10-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple10
data (a, b, c, d, e, f, g, h, i, j)

-- | 10-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple10.Tuple10
(,,,,,,,,,) a   b   c   d   e   f   g   h   i   j

-- | 11-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k 
--   11-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple11
data (a, b, c, d, e, f, g, h, i, j, k)

-- | 11-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple11.Tuple11
(,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k

-- | 12-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l 
--   12-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple12
data (a, b, c, d, e, f, g, h, i, j, k, l)

-- | 12-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple12.Tuple12
(,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l

-- | 13-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m 
--   13-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple13
data (a, b, c, d, e, f, g, h, i, j, k, l, m)

-- | 13-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple13.Tuple13
(,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m

-- | 14-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n 
--   14-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple14
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n)

-- | 14-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple14.Tuple14
(,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n

-- | 15-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o 
--   15-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple15
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)

-- | 15-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple15.Tuple15
(,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o

-- | 16-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p 
--   16-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple16
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)

-- | 16-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple16.Tuple16
(,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p

-- | 17-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q 
--   17-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple17
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)

-- | 17-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple17.Tuple17
(,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q

-- | 18-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r 
--   18-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple18
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)

-- | 18-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple18.Tuple18
(,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r

-- | 19-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s 
--   19-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple19
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s)

-- | 19-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple19.Tuple19
(,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s

-- | 20-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t 
--   20-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple20
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t)

-- | 20-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple20.Tuple20
(,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t

-- | 21-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u 
--   21-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple21
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u)

-- | 21-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple21.Tuple21
(,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u

-- | 22-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v 
--   22-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple22
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v)

-- | 22-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple22.Tuple22
(,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v

-- | 23-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w 
--   23-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple23
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w)

-- | 23-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple23.Tuple23
(,,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w

-- | 24-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x 
--   24-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple24
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x)

-- | 24-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple24.Tuple24
(,,,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x

-- | 25-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x   y 
--   25-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple25
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y)

-- | 25-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple25.Tuple25
(,,,,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x   y

-- | 26-tuple 
--   Constructors
--  ----------------
--  (,,,,,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x   y   z 
--   26-tuple constructor   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple26
data (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z)

-- | 26-tuple constructor 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Tuple26.Tuple26
(,,,,,,,,,,,,,,,,,,,,,,,,,) a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x   y   z

-- | function 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Function
data a→b

-- | list type 
--   Constructors
--  ----------------
--  : a   [a] 
--  infixr  4 
--   list construction  
--  [] 
--   empty list   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#List
data [a]

-- | list construction 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#List.Cons
: a   [a] 
infixr  4

-- | empty list 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#List.List
[]

-- | The type class Eq provides operators Eq.==, Eq.!= and Eq.hashCode. 
--   All types whose values can be compared for equality should be instances of this class. For algebraic data types instances can be automatically derived if all components are themselves instances of Eq. 
--   Known Instances
--  ----------------
--  Integer, Long, Char, Bool, (), Float, Double, Int, [], StringJ 
--   Member Functions
--  ----------------
--  != ∷ Eq eq ⇒ eq → eq → Bool 
--  infix  7 
--   Check for inequality. The default implementation obeys the laws 
--   !(a != a) 
--   (a != b) == !(a == b) 
--   (a == b) != (a != b) 
--   These laws shall also be obeyed in all implementations.   
--  == ∷ Eq eq ⇒ eq → eq → Bool 
--  infix  7 
--   Check for equality. This function is required in all instances. 
--   The basic law of philosophy 
--   a == a 
--   shall be obeyed by all implementations.   
--  hashCode ∷ Eq eq ⇒ eq → Int 
--   Compute a hash code. 
--   The following rules shall hold in all instances: 
--   a == b ==> hashCode a == hashCode b 
--   hashCode a != hashCode b ==> a != b 
--   In addition, unequal values should produce unequal hash codes more likely than not. 
--   The hash code in derived instances for algebraic data types is computed as follows: 
--   hashCode v = case v of Con_1 f_1 ... f_k -> fold mkhash 1 [1, hashCode f_1, ..., hashCode f_k ] ... Con_n f_1 ... f_k -> fold mkhash 1 [n, hashCode f_1, ..., hashCode f_k ] where mkhash a b = (31 * a) + b 
--   Here, the Con_i with i>0 are the constructors, and in each clause the f_j with j >= 0 are bound to the fields of the constructor under consideration.   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Eq
class Eq eq

-- | Check for inequality. The default implementation obeys the laws 
--   !(a != a) 
--   (a != b) == !(a == b) 
--   (a == b) != (a != b) 
--   These laws shall also be obeyed in all implementations.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Eq._excl_eq
(!=) ∷  Eq eq ⇒ eq → eq → Bool 
infix  7

-- | Check for equality. This function is required in all instances. 
--   The basic law of philosophy 
--   a == a 
--   shall be obeyed by all implementations.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Eq._eq_eq
(==) ∷  Eq eq ⇒ eq → eq → Bool 
infix  7

-- | Compute a hash code. 
--   The following rules shall hold in all instances: 
--   a == b ==> hashCode a == hashCode b 
--   hashCode a != hashCode b ==> a != b 
--   In addition, unequal values should produce unequal hash codes more likely than not. 
--   The hash code in derived instances for algebraic data types is computed as follows: 
--   hashCode v = case v of Con_1 f_1 ... f_k -> fold mkhash 1 [1, hashCode f_1, ..., hashCode f_k ] ... Con_n f_1 ... f_k -> fold mkhash 1 [n, hashCode f_1, ..., hashCode f_k ] where mkhash a b = (31 * a) + b 
--   Here, the Con_i with i>0 are the constructors, and in each clause the f_j with j >= 0 are bound to the fields of the constructor under consideration. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Eq.hashCode
hashCode ∷ Eq eq ⇒ eq → Int

-- | Determines the constructor of a value. This is used like 
--   constructor arg 
--   where arg is any frege value. 
--   Returns 0 for function types, product types and native types or the constructor number for constructed types. The constructor number is a small integer associated with every constructed value. It indicates the data constructor a value was constructed with. 
--   The compiler assigns constructor numbers starting from 0 to the constructors defined in a data definition in the order of their appearance. 
--   Examples 
--   constructor [] == 0 constructor (a:as) == 1 constructor "string" == 0 // native value 
--   This function is strict in its argument, i.e. 
--   constructor undefined == undefined 
--  Implementation specific: This function is used in derived instances of Eq and Ord. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#constructor
constructor ∷ a → Int 
pure native frege.runtime.Runtime.constructor

-- |Bool values are based on Java's primitive boolean values. Note that true and false are literals, not constructors. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Bool
data Bool 

-- | For compatibility with Haskell, the HaskellBool type defines constructors HaskellBool.True and HaskellBool.False. 
--   When the identifiers True or False are used in patterns or expressions, qualified or unqualified, and name resolution detects that they resolve to HaskellBool.True or HaskellBool.False they will be replaced by literals true or false. 
--   This is, of course, a hack, but I see no other way to bridge the gap between redefinable constructor ids and literals. For example, we couldn't simply define True as another literal keyword, because some Haskell code might use Prelude.True or could have code like. 
--   import Prelude hiding(True, False) data TriBool = False | Perhaps | True 
--   Constructors
--  ----------------
--  False 
--   will be replaced by literal false   
--  True 
--   will be replaced by literal true    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#HaskellBool
data HaskellBool

-- | will be replaced by literal false  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#HaskellBool.False
False

-- | will be replaced by literal true  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#HaskellBool.True
True

-- | This is a constant with the value true. It is most often used as the last alternative in pattern guards: 
--   foo n | n >= 0 = ... | otherwise = ... 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#otherwise
otherwise ∷ Bool

-- | warning: will soon be replaced with bool This is used by code generation when a conditional expression appears in a lazy context, i.e. 
--   (42, if foo then bar else baz) 
--  lazyif a b c evaluates to b if a is true, otherwise to c. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#lazyif
lazyif ∷ Bool → α → α → α

-- | This is used by code generation when a conditional expression appears in a lazy context, i.e. 
--   (42, if foo then bar else baz) 
--  bool a b c evaluates to a if c is true, otherwise to b. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#bool
bool ∷ α → α → Bool → α

-- |Int values are based on Java's primitive int values. 
--   The existence of this type is assumed in numerous places in the compiler. 
--   Like with all native Java types, be they primitive or reference types, Frege holds the raw int in boxed form. However, in certain cases the compiler will optimize the boxing away: Strict variables or function arguments work with the unboxed value directly. Functions with a native return type generally return the unboxed value. Polymorphic data structures or functions always work with boxed values. Thus, for example, the function 
--   sum a b c = a + b + c 
--   can compute the sum of 3 Ints, Longs, Doubles or any other values of a type that is an instance of type class Num, but it may be somewhat slower than functions specialized for a given type. 
--   According to the Java Language Specification, int values are 32 bit wide signed two's complement integers (§4.2). Java operations on int do not indicate overflow or underflow in any way (§4.2.2). Instead, just the low 32 bits of every result are retained. 
--   Member Functions
--  ----------------
--  .&. ∷ Int → Int → Int 
--  pure native & 
--  infixl  11 
--   Computes binary /and/ of two integers. Uses the java &-operator.   
--  .^. ∷ Int → Int → Int 
--  pure native ^ 
--  infixl  10 
--   Computes binary /exclusive or/ of two integers. Uses the java ^-operator.   
--  .|. ∷ Int → Int → Int 
--  pure native | 
--  infixl  10 
--   Computes binary /or/ of two integers. Uses the java |-operator.   
--  char ∷ Int → Char 
--  pure native (char) 
--  i.char returns the Char value whose ordinal number is i 
--   Result is only valid for integers in the range 0..65535   
--  complement ∷ Int → Int 
--  pure native ~ 
--  double ∷ Int → Double 
--  pure native java.lang.Double.valueOf 
--   convert an Int to a Double, i.e. 2.double == 2.0.   
--  float ∷ Int → Float 
--  pure native java.lang.Float.valueOf 
--   convert an Int to a Float, i.e. 2.float == 2.0f. 
--   For large integers, the result may have been be rounded.   
--  long ∷ Int → Long 
--  pure native java.lang.Long.valueOf 
--   Convert an Int to a Long, i.e. 2.long == 2L.   
--  rotateL ∷ Int → Int → Int 
--  pure native java.lang.Integer.rotateLeft 
--  infixl  12 
--   Returns the value obtained by rotating the two's complement binary representation of the specified int value left 
--   by the specified number of bits.   
--  rotateR ∷ Int → Int → Int 
--  pure native java.lang.Integer.rotateRight 
--  infixl  12 
--   Returns the value obtained by rotating the two's complement binary representation of the specified int value 
--   right by the specified number of bits.   
--  shiftL ∷ Int → Int → Int 
--  pure native << 
--  infixl  12 
--  shiftR ∷ Int → Int → Int 
--  pure native >> 
--  infixl  12 
--  size ∷ Int 
--  pure native java.lang.Integer.SIZE 
--   The number of bits used to represent an int value in two's complement binary form   
--  toHexString ∷ Int → String 
--  pure native java.lang.Integer.toHexString 
--   convert to a hexadecimal string   
--  ushiftR ∷ Int → Int → Int 
--  pure native >>> 
--  infixl  12 
--   unsigned right shift    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int
data Int 

-- | Computes binary /and/ of two integers. Uses the java &-operator.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int._dot_amp_dot
(.&.) ∷  Int → Int → Int 
pure native & 
infixl  11

-- | Computes binary /exclusive or/ of two integers. Uses the java ^-operator.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int._dot_caret_dot
(.^.) ∷  Int → Int → Int 
pure native ^ 
infixl  10

-- | Computes binary /or/ of two integers. Uses the java |-operator.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int._dot_bar_dot
(.|.) ∷  Int → Int → Int 
pure native | 
infixl  10

-- |i.char returns the Char value whose ordinal number is i 
--   Result is only valid for integers in the range 0..65535  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int._char
char ∷ Int → Char 
pure native (char)


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int.complement
complement ∷ Int → Int 
pure native ~

-- | convert an Int to a Double, i.e. 2.double == 2.0.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int._double
double ∷ Int → Double 
pure native java.lang.Double.valueOf

-- | convert an Int to a Float, i.e. 2.float == 2.0f. 
--   For large integers, the result may have been be rounded.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int._float
float ∷ Int → Float 
pure native java.lang.Float.valueOf

-- | Convert an Int to a Long, i.e. 2.long == 2L.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int._long
long ∷ Int → Long 
pure native java.lang.Long.valueOf

-- | Returns the value obtained by rotating the two's complement binary representation of the specified int value left 
--   by the specified number of bits.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int.rotateL
rotateL ∷ Int → Int → Int 
pure native java.lang.Integer.rotateLeft 
infixl  12

-- | Returns the value obtained by rotating the two's complement binary representation of the specified int value 
--   right by the specified number of bits.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int.rotateR
rotateR ∷ Int → Int → Int 
pure native java.lang.Integer.rotateRight 
infixl  12


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int.shiftL
shiftL ∷ Int → Int → Int 
pure native << 
infixl  12


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int.shiftR
shiftR ∷ Int → Int → Int 
pure native >> 
infixl  12

-- | The number of bits used to represent an int value in two's complement binary form  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int.size
size ∷ Int 
pure native java.lang.Integer.SIZE

-- | convert to a hexadecimal string  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int.toHexString
toHexString ∷ Int → String 
pure native java.lang.Integer.toHexString

-- | unsigned right shift  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Int.ushiftR
ushiftR ∷ Int → Int → Int 
pure native >>> 
infixl  12

-- |Integer is a type for integer numbers of unlimited size, It has instances for Eq, Ord, Show and Integral. 
--   This is derived from java.math.BigInteger. 
--   Member Functions
--  ----------------
--  .&. ∷ Integer → Integer → Integer 
--  pure native and 
--  infixl  11 
--  .^. ∷ Integer → Integer → Integer 
--  pure native xor 
--  infixl  10 
--  .|. ∷ Integer → Integer → Integer 
--  pure native or 
--  infixl  10 
--  bitLength ∷ Integer → Int 
--  pure native bitLength 
--   Returns the number of bits in the minimal two's-complement representation of this Integer, excluding a sign bit.   
--  compareTo ∷ Integer → Integer → Int 
--  pure native compareTo 
--  complement ∷ Integer → Integer 
--  pure native not 
--  double ∷ Integer → Double 
--  pure native doubleValue 
--  int ∷ Integer → Int 
--  pure native intValue 
--  long ∷ Integer → Long 
--  pure native longValue 
--  nMod ∷ Integer → Integer → Integer 
--  pure native mod 
--  Warning! Throws ArithmeticException when divisor is negative.   
--  shiftL ∷ Integer → Int → Integer 
--  pure native shiftLeft 
--  infixl  12 
--  shiftR ∷ Integer → Int → Integer 
--  pure native shiftRight 
--  infixl  12 
--  ten ∷ Integer 
--  pure native java.math.BigInteger.TEN 
--  toString ∷ Integer → String 
--  pure native toString 
--  ushiftR ∷ Integer → Int → Integer 
--  infixl  12 
--   unsigned right shift on big integers does not really make sense ...   
--  valueOf ∷ Long → Integer 
--  pure native java.math.BigInteger.valueOf 
--   construction from a Long, see also StringJ.aton and StringJ.integer    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer
data Integer 


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer._dot_amp_dot
(.&.) ∷  Integer → Integer → Integer 
pure native and 
infixl  11


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer._dot_caret_dot
(.^.) ∷  Integer → Integer → Integer 
pure native xor 
infixl  10


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer._dot_bar_dot
(.|.) ∷  Integer → Integer → Integer 
pure native or 
infixl  10

-- | Returns the number of bits in the minimal two's-complement representation of this Integer, excluding a sign bit.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.bitLength
bitLength ∷ Integer → Int 
pure native bitLength


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.compareTo
compareTo ∷ Integer → Integer → Int 
pure native compareTo


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.complement
complement ∷ Integer → Integer 
pure native not


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer._double
double ∷ Integer → Double 
pure native doubleValue


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer._int
int ∷ Integer → Int 
pure native intValue


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer._long
long ∷ Integer → Long 
pure native longValue

-- |Warning! Throws ArithmeticException when divisor is negative.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.nMod
nMod ∷ Integer → Integer → Integer 
pure native mod


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.shiftL
shiftL ∷ Integer → Int → Integer 
pure native shiftLeft 
infixl  12


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.shiftR
shiftR ∷ Integer → Int → Integer 
pure native shiftRight 
infixl  12


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.ten
ten ∷ Integer 
pure native java.math.BigInteger.TEN


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.toString
toString ∷ Integer → String 
pure native toString

-- | unsigned right shift on big integers does not really make sense ...  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.ushiftR
ushiftR ∷ Integer → Int → Integer 
infixl  12

-- | construction from a Long, see also StringJ.aton and StringJ.integer  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integer.valueOf
valueOf ∷ Long → Integer 
pure native java.math.BigInteger.valueOf

-- |Long values are based on Java's primitive long values. 
--   According to the Java Language Specification, long values are 64 bit wide signed two's complement integers (§4.2). Java operations on long do not indicate overflow or underflow in any way (§4.2.2). Instead, just the low 64 bits of every result are retained. 
--   Member Functions
--  ----------------
--  .&. ∷ Long → Long → Long 
--  pure native & 
--  infixl  11 
--   Computes binary and of two integers. Uses the java &-operator.   
--  .^. ∷ Long → Long → Long 
--  pure native ^ 
--  infixl  10 
--   Computes binary exclusive or of two long integers. Uses the java ^-operator.   
--  .|. ∷ Long → Long → Long 
--  pure native | 
--  infixl  10 
--   Computes binary or of two long integers. Uses the java |-operator.   
--  complement ∷ Long → Long 
--  pure native ~ 
--  double ∷ Long → Double 
--  pure native java.lang.Double.valueOf 
--   Convert an Long to a Double, i.e. 42L.double == 42.0. 
--   For large numbers, the result may have been be rounded.   
--  float ∷ Long → Float 
--  pure native java.lang.Float.valueOf 
--   Convert an Long to a Float, i.e. 42L.float == 42.0f. 
--   For large numbers, the result may have been be rounded.   
--  int ∷ Long → Int 
--  pure native (int) 
--   Uses a java cast to convert a Long to an Int. This is a narrowing primitive conversion in java parlance.   
--  rotateL ∷ Long → Int → Long 
--  pure native java.lang.Long.rotateLeft 
--  infixl  12 
--   Returns the value obtained by rotating the two's complement binary representation 
--   of the specified long value left by the specified number of bits.   
--  rotateR ∷ Long → Int → Long 
--  pure native java.lang.Long.rotateRight 
--  infixl  12 
--   Returns the value obtained by rotating the two's complement binary representation 
--   of the specified long value right by the specified number of bits.   
--  shiftL ∷ Long → Int → Long 
--  pure native << 
--  infixl  12 
--  shiftR ∷ Long → Int → Long 
--  pure native >> 
--  infixl  12 
--  size ∷ Int 
--  pure native java.lang.Long.SIZE 
--  ushiftR ∷ Long → Int → Long 
--  pure native >>> 
--  infixl  12 
--   unsigned right shift    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long
data Long 

-- | Computes binary and of two integers. Uses the java &-operator.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long._dot_amp_dot
(.&.) ∷  Long → Long → Long 
pure native & 
infixl  11

-- | Computes binary exclusive or of two long integers. Uses the java ^-operator.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long._dot_caret_dot
(.^.) ∷  Long → Long → Long 
pure native ^ 
infixl  10

-- | Computes binary or of two long integers. Uses the java |-operator.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long._dot_bar_dot
(.|.) ∷  Long → Long → Long 
pure native | 
infixl  10


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long.complement
complement ∷ Long → Long 
pure native ~

-- | Convert an Long to a Double, i.e. 42L.double == 42.0. 
--   For large numbers, the result may have been be rounded.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long._double
double ∷ Long → Double 
pure native java.lang.Double.valueOf

-- | Convert an Long to a Float, i.e. 42L.float == 42.0f. 
--   For large numbers, the result may have been be rounded.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long._float
float ∷ Long → Float 
pure native java.lang.Float.valueOf

-- | Uses a java cast to convert a Long to an Int. This is a narrowing primitive conversion in java parlance.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long._int
int ∷ Long → Int 
pure native (int)

-- | Returns the value obtained by rotating the two's complement binary representation 
--   of the specified long value left by the specified number of bits.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long.rotateL
rotateL ∷ Long → Int → Long 
pure native java.lang.Long.rotateLeft 
infixl  12

-- | Returns the value obtained by rotating the two's complement binary representation 
--   of the specified long value right by the specified number of bits.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long.rotateR
rotateR ∷ Long → Int → Long 
pure native java.lang.Long.rotateRight 
infixl  12


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long.shiftL
shiftL ∷ Long → Int → Long 
pure native << 
infixl  12


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long.shiftR
shiftR ∷ Long → Int → Long 
pure native >> 
infixl  12


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long.size
size ∷ Int 
pure native java.lang.Long.SIZE

-- | unsigned right shift  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Long.ushiftR
ushiftR ∷ Long → Int → Long 
pure native >>> 
infixl  12

-- |Char values are based on Java's primitive char values. 
--   This type has many native functions based on the methods in java.lang.Character. 
--   Most is... functions work on Char and Int (codepoint). 
--   Likewise, most to...Case functions work on codepoints.  
--   Member Functions
--  ----------------
--  digit ∷ Char → Int → Int 
--  pure native java.lang.Character.digit 
--   Returns the numeric value of the character argument in the specified radix. 
--   If the character is not a digit in the given radix, -1 is returned. 
--   The radix must be in the range 2..36, otherwise also -1 is returned.   
--  forDigit ∷ Int → Int → Char 
--  pure native java.lang.Character.forDigit 
--   Char.forDigit d r 
--   returns the character for the digit d in radix r 
--  d must not be negative and lower than r, and r must be in the range 2..36 
--   When the arguments are invalid the character '\u0000' is returned.   
--  getName ∷ Char → Maybe String 
--           | Int → Maybe String 
--  pure native java.lang.Character.getName 
--   Return the Unicode name of the code point or null if it is unassigned.  
--  getNameα ∷ Char → Maybe String 
--  pure native java.lang.Character.getName  overloads getName 
--   Return the Unicode name of the code point or null if it is unassigned.  
--  getNameβ ∷ Int → Maybe String 
--  pure native java.lang.Character.getName  overloads getName 
--   Return the Unicode name of the code point or null if it is unassigned.  
--  getType ∷ Char → Int 
--           | Int → Int 
--  pure native java.lang.Character.getType 
--   Returns a value indicating a character's general category.  
--  getTypeα ∷ Char → Int 
--  pure native java.lang.Character.getType  overloads getType 
--   Returns a value indicating a character's general category.  
--  getTypeβ ∷ Int → Int 
--  pure native java.lang.Character.getType  overloads getType 
--   Returns a value indicating a character's general category.  
--  highSurrogate ∷ Int → Char 
--  pure native java.lang.Character.highSurrogate 
--   The leading surrogate (which is a high surrogate code unit) of the surrogate pair representing the specified supplementary character (Unicode code point) in the UTF-16 encoding. 
--   If the specified value is not a supplementary character, an unspecified character is returned. 
--   See also: Char.isSupplementaryCodePoint, Char.lowSurrogate, Char.toCodePoint 
--   The following holds: 
--   isSupplementaryCodePoint x ==> (x == toCodePoint (highSurrogate x) (lowSurrogate x))  
--  isDefined ∷ Char → Bool 
--             | Int → Bool 
--  pure native java.lang.Character.isDefined 
--   Determines if a character (Unicode code point) is defined in Unicode. 
--   A character is defined if at least one of the following is true: It has an entry in the UnicodeData file. It has a value in a range defined by the UnicodeData file.  
--  isDefinedα ∷ Char → Bool 
--  pure native java.lang.Character.isDefined  overloads isDefined 
--   Determines if a character (Unicode code point) is defined in Unicode. 
--   A character is defined if at least one of the following is true: It has an entry in the UnicodeData file. It has a value in a range defined by the UnicodeData file.  
--  isDefinedβ ∷ Int → Bool 
--  pure native java.lang.Character.isDefined  overloads isDefined 
--   Determines if a character (Unicode code point) is defined in Unicode. 
--   A character is defined if at least one of the following is true: It has an entry in the UnicodeData file. It has a value in a range defined by the UnicodeData file.  
--  isDigit ∷ Char → Bool 
--           | Int → Bool 
--  pure native java.lang.Character.isDigit 
--  isDigitα ∷ Char → Bool 
--  pure native java.lang.Character.isDigit  overloads isDigit 
--  isDigitβ ∷ Int → Bool 
--  pure native java.lang.Character.isDigit  overloads isDigit 
--  isHighSurrogate ∷ Char → Bool 
--  pure native java.lang.Character.isHighSurrogate 
--   Determines if the given char value is a Unicode high-surrogate code unit (also known as leading-surrogate code unit). 
--   Such values do not represent characters by themselves, but are used in the representation of supplementary characters in the UTF-16 encoding.  
--  isISOControl ∷ Char → Bool 
--                | Int → Bool 
--  pure native java.lang.Character.isISOControl 
--   Determines if the specified character is an ISO control character. A character is considered to be an ISO control character if its code is in the range "\u0000" through "\u001F" or in the range "\u007F" through "\u009F".  
--  isISOControlα ∷ Char → Bool 
--  pure native java.lang.Character.isISOControl  overloads isISOControl 
--   Determines if the specified character is an ISO control character. A character is considered to be an ISO control character if its code is in the range "\u0000" through "\u001F" or in the range "\u007F" through "\u009F".  
--  isISOControlβ ∷ Int → Bool 
--  pure native java.lang.Character.isISOControl  overloads isISOControl 
--   Determines if the specified character is an ISO control character. A character is considered to be an ISO control character if its code is in the range "\u0000" through "\u001F" or in the range "\u007F" through "\u009F".  
--  isLetter ∷ Char → Bool 
--            | Int → Bool 
--  pure native java.lang.Character.isLetter 
--  isLetterOrDigit ∷ Char → Bool 
--                   | Int → Bool 
--  pure native java.lang.Character.isLetterOrDigit 
--  isLetterOrDigitα ∷ Char → Bool 
--  pure native java.lang.Character.isLetterOrDigit  overloads isLetterOrDigit 
--  isLetterOrDigitβ ∷ Int → Bool 
--  pure native java.lang.Character.isLetterOrDigit  overloads isLetterOrDigit 
--  isLetterα ∷ Char → Bool 
--  pure native java.lang.Character.isLetter  overloads isLetter 
--  isLetterβ ∷ Int → Bool 
--  pure native java.lang.Character.isLetter  overloads isLetter 
--  isLowSurrogate ∷ Char → Bool 
--  pure native java.lang.Character.isLowSurrogate 
--   Determines if the given char value is a Unicode low-surrogate code unit (also known as trailing-surrogate code unit). 
--   Such values do not represent characters by themselves, but are used in the representation of supplementary characters in the UTF-16 encoding.  
--  isLowerCase ∷ Char → Bool 
--               | Int → Bool 
--  pure native java.lang.Character.isLowerCase 
--  isLowerCaseα ∷ Char → Bool 
--  pure native java.lang.Character.isLowerCase  overloads isLowerCase 
--  isLowerCaseβ ∷ Int → Bool 
--  pure native java.lang.Character.isLowerCase  overloads isLowerCase 
--  isSupplementaryCodePoint ∷ Int → Bool 
--  pure native java.lang.Character.isSupplementaryCodePoint 
--   Determines whether the specified character (Unicode code point) is in the supplementary character range. 
--   This is roughly equivalent to 
--   (> ord Char.maxBound) 
--   except that it also checks if the value is lower than 0x110000 
--   If, for some integer n 
--   not (Char.isSupplementaryCodePoint n) && (n > ord Char.maxBound) 
--   then n is not a codepoint at all.  
--  isSurrogate ∷ Char → Bool 
--  pure native java.lang.Character.isSurrogate 
--   Determines if the given char value is a Unicode surrogate code unit. 
--   Such values do not represent characters by themselves, but are used in the representation of supplementary characters in the UTF-16 encoding. 
--   A char value is a surrogate code unit if and only if it is either a low-surrogate code unit or a high-surrogate code unit.  
--  isSurrogatePair ∷ Char → Char → Bool 
--  pure native java.lang.Character.isSurrogatePair 
--   Determines whether the specified pair of char values is a valid Unicode surrogate pair.  
--  isUpperCase ∷ Char → Bool 
--               | Int → Bool 
--  pure native java.lang.Character.isUpperCase 
--  isUpperCaseα ∷ Char → Bool 
--  pure native java.lang.Character.isUpperCase  overloads isUpperCase 
--  isUpperCaseβ ∷ Int → Bool 
--  pure native java.lang.Character.isUpperCase  overloads isUpperCase 
--  isValidCodePoint ∷ Int → Bool 
--  pure native java.lang.Character.isValidCodePoint 
--   Determines whether the specified code point is a valid Unicode code point value. 
--   This is the case if it is not negative and lower than 0x110000   
--  isWhitespace ∷ Char → Bool 
--                | Int → Bool 
--  pure native java.lang.Character.isWhitespace 
--  isWhitespaceα ∷ Char → Bool 
--  pure native java.lang.Character.isWhitespace  overloads isWhitespace 
--  isWhitespaceβ ∷ Int → Bool 
--  pure native java.lang.Character.isWhitespace  overloads isWhitespace 
--  lowSurrogate ∷ Int → Char 
--  pure native java.lang.Character.lowSurrogate 
--   The trailing surrogate (which is a low surrogate code unit) of the surrogate pair representing the specified supplementary character (Unicode code point) in the UTF-16 encoding. 
--   If the specified value is not a supplementary character, an unspecified character is returned. 
--   See also: Char.isSupplementaryCodePoint, Char.highSurrogate, Char.toCodePoint 
--   The following holds: 
--   isSupplementaryCodePoint x ==> (x == toCodePoint (highSurrogate x) (lowSurrogate x))  
--  toCodePoint ∷ Char → Char → Int 
--  pure native java.lang.Character.toCodePoint 
--   Char.toCodePoint high low 
--   Converts the specified surrogate pair to its supplementary code point value. This function does not validate the specified surrogate pair. The caller must validate it using Char.isSurrogatePair if necessary.  
--  toLowerCase ∷ Char → Char 
--               | Int → Int 
--  pure native java.lang.Character.toLowerCase 
--   The lowercase equivalent of the character, if any; otherwise, the character itself.   
--  toLowerCaseα ∷ Char → Char 
--  pure native java.lang.Character.toLowerCase  overloads toLowerCase 
--   The lowercase equivalent of the character, if any; otherwise, the character itself.   
--  toLowerCaseβ ∷ Int → Int 
--  pure native java.lang.Character.toLowerCase  overloads toLowerCase 
--   The lowercase equivalent of the character, if any; otherwise, the character itself.   
--  toTitleCase ∷ Char → Char 
--               | Int → Int 
--  pure native java.lang.Character.toTitleCase 
--   The titlecase equivalent of the character, if any; otherwise, the character itself.   
--  toTitleCaseα ∷ Char → Char 
--  pure native java.lang.Character.toTitleCase  overloads toTitleCase 
--   The titlecase equivalent of the character, if any; otherwise, the character itself.   
--  toTitleCaseβ ∷ Int → Int 
--  pure native java.lang.Character.toTitleCase  overloads toTitleCase 
--   The titlecase equivalent of the character, if any; otherwise, the character itself.   
--  toUpperCase ∷ Char → Char 
--               | Int → Int 
--  pure native java.lang.Character.toUpperCase 
--   The uppercase equivalent of the character, if any; otherwise, the character itself.   
--  toUpperCaseα ∷ Char → Char 
--  pure native java.lang.Character.toUpperCase  overloads toUpperCase 
--   The uppercase equivalent of the character, if any; otherwise, the character itself.   
--  toUpperCaseβ ∷ Int → Int 
--  pure native java.lang.Character.toUpperCase  overloads toUpperCase 
--   The uppercase equivalent of the character, if any; otherwise, the character itself.    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char
data Char 

-- | Returns the numeric value of the character argument in the specified radix. 
--   If the character is not a digit in the given radix, -1 is returned. 
--   The radix must be in the range 2..36, otherwise also -1 is returned.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.digit
digit ∷ Char → Int → Int 
pure native java.lang.Character.digit

-- | Char.forDigit d r 
--   returns the character for the digit d in radix r 
--  d must not be negative and lower than r, and r must be in the range 2..36 
--   When the arguments are invalid the character '\u0000' is returned.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.forDigit
forDigit ∷ Int → Int → Char 
pure native java.lang.Character.forDigit

-- | Return the Unicode name of the code point or null if it is unassigned. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.getName
getName ∷ Char → Maybe String 
         | Int → Maybe String 
pure native java.lang.Character.getName

-- | Return the Unicode name of the code point or null if it is unassigned. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.getNameα
getNameα ∷ Char → Maybe String 
pure native java.lang.Character.getName  overloads getName

-- | Return the Unicode name of the code point or null if it is unassigned. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.getNameβ
getNameβ ∷ Int → Maybe String 
pure native java.lang.Character.getName  overloads getName

-- | Returns a value indicating a character's general category. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.getType
getType ∷ Char → Int 
         | Int → Int 
pure native java.lang.Character.getType

-- | Returns a value indicating a character's general category. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.getTypeα
getTypeα ∷ Char → Int 
pure native java.lang.Character.getType  overloads getType

-- | Returns a value indicating a character's general category. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.getTypeβ
getTypeβ ∷ Int → Int 
pure native java.lang.Character.getType  overloads getType

-- | The leading surrogate (which is a high surrogate code unit) of the surrogate pair representing the specified supplementary character (Unicode code point) in the UTF-16 encoding. 
--   If the specified value is not a supplementary character, an unspecified character is returned. 
--   See also: Char.isSupplementaryCodePoint, Char.lowSurrogate, Char.toCodePoint 
--   The following holds: 
--   isSupplementaryCodePoint x ==> (x == toCodePoint (highSurrogate x) (lowSurrogate x)) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.highSurrogate
highSurrogate ∷ Int → Char 
pure native java.lang.Character.highSurrogate

-- | Determines if a character (Unicode code point) is defined in Unicode. 
--   A character is defined if at least one of the following is true: It has an entry in the UnicodeData file. It has a value in a range defined by the UnicodeData file. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isDefined
isDefined ∷ Char → Bool 
           | Int → Bool 
pure native java.lang.Character.isDefined

-- | Determines if a character (Unicode code point) is defined in Unicode. 
--   A character is defined if at least one of the following is true: It has an entry in the UnicodeData file. It has a value in a range defined by the UnicodeData file. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isDefinedα
isDefinedα ∷ Char → Bool 
pure native java.lang.Character.isDefined  overloads isDefined

-- | Determines if a character (Unicode code point) is defined in Unicode. 
--   A character is defined if at least one of the following is true: It has an entry in the UnicodeData file. It has a value in a range defined by the UnicodeData file. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isDefinedβ
isDefinedβ ∷ Int → Bool 
pure native java.lang.Character.isDefined  overloads isDefined


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isDigit
isDigit ∷ Char → Bool 
         | Int → Bool 
pure native java.lang.Character.isDigit


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isDigitα
isDigitα ∷ Char → Bool 
pure native java.lang.Character.isDigit  overloads isDigit


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isDigitβ
isDigitβ ∷ Int → Bool 
pure native java.lang.Character.isDigit  overloads isDigit

-- | Determines if the given char value is a Unicode high-surrogate code unit (also known as leading-surrogate code unit). 
--   Such values do not represent characters by themselves, but are used in the representation of supplementary characters in the UTF-16 encoding. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isHighSurrogate
isHighSurrogate ∷ Char → Bool 
pure native java.lang.Character.isHighSurrogate

-- | Determines if the specified character is an ISO control character. A character is considered to be an ISO control character if its code is in the range "\u0000" through "\u001F" or in the range "\u007F" through "\u009F". 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isISOControl
isISOControl ∷ Char → Bool 
              | Int → Bool 
pure native java.lang.Character.isISOControl

-- | Determines if the specified character is an ISO control character. A character is considered to be an ISO control character if its code is in the range "\u0000" through "\u001F" or in the range "\u007F" through "\u009F". 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isISOControlα
isISOControlα ∷ Char → Bool 
pure native java.lang.Character.isISOControl  overloads isISOControl

-- | Determines if the specified character is an ISO control character. A character is considered to be an ISO control character if its code is in the range "\u0000" through "\u001F" or in the range "\u007F" through "\u009F". 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isISOControlβ
isISOControlβ ∷ Int → Bool 
pure native java.lang.Character.isISOControl  overloads isISOControl


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLetter
isLetter ∷ Char → Bool 
          | Int → Bool 
pure native java.lang.Character.isLetter


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLetterOrDigit
isLetterOrDigit ∷ Char → Bool 
                 | Int → Bool 
pure native java.lang.Character.isLetterOrDigit


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLetterOrDigitα
isLetterOrDigitα ∷ Char → Bool 
pure native java.lang.Character.isLetterOrDigit  overloads isLetterOrDigit


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLetterOrDigitβ
isLetterOrDigitβ ∷ Int → Bool 
pure native java.lang.Character.isLetterOrDigit  overloads isLetterOrDigit


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLetterα
isLetterα ∷ Char → Bool 
pure native java.lang.Character.isLetter  overloads isLetter


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLetterβ
isLetterβ ∷ Int → Bool 
pure native java.lang.Character.isLetter  overloads isLetter

-- | Determines if the given char value is a Unicode low-surrogate code unit (also known as trailing-surrogate code unit). 
--   Such values do not represent characters by themselves, but are used in the representation of supplementary characters in the UTF-16 encoding. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLowSurrogate
isLowSurrogate ∷ Char → Bool 
pure native java.lang.Character.isLowSurrogate


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLowerCase
isLowerCase ∷ Char → Bool 
             | Int → Bool 
pure native java.lang.Character.isLowerCase


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLowerCaseα
isLowerCaseα ∷ Char → Bool 
pure native java.lang.Character.isLowerCase  overloads isLowerCase


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isLowerCaseβ
isLowerCaseβ ∷ Int → Bool 
pure native java.lang.Character.isLowerCase  overloads isLowerCase

-- | Determines whether the specified character (Unicode code point) is in the supplementary character range. 
--   This is roughly equivalent to 
--   (> ord Char.maxBound) 
--   except that it also checks if the value is lower than 0x110000 
--   If, for some integer n 
--   not (Char.isSupplementaryCodePoint n) && (n > ord Char.maxBound) 
--   then n is not a codepoint at all. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isSupplementaryCodePoint
isSupplementaryCodePoint ∷ Int → Bool 
pure native java.lang.Character.isSupplementaryCodePoint

-- | Determines if the given char value is a Unicode surrogate code unit. 
--   Such values do not represent characters by themselves, but are used in the representation of supplementary characters in the UTF-16 encoding. 
--   A char value is a surrogate code unit if and only if it is either a low-surrogate code unit or a high-surrogate code unit. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isSurrogate
isSurrogate ∷ Char → Bool 
pure native java.lang.Character.isSurrogate

-- | Determines whether the specified pair of char values is a valid Unicode surrogate pair. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isSurrogatePair
isSurrogatePair ∷ Char → Char → Bool 
pure native java.lang.Character.isSurrogatePair


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isUpperCase
isUpperCase ∷ Char → Bool 
             | Int → Bool 
pure native java.lang.Character.isUpperCase


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isUpperCaseα
isUpperCaseα ∷ Char → Bool 
pure native java.lang.Character.isUpperCase  overloads isUpperCase


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isUpperCaseβ
isUpperCaseβ ∷ Int → Bool 
pure native java.lang.Character.isUpperCase  overloads isUpperCase

-- | Determines whether the specified code point is a valid Unicode code point value. 
--   This is the case if it is not negative and lower than 0x110000  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isValidCodePoint
isValidCodePoint ∷ Int → Bool 
pure native java.lang.Character.isValidCodePoint


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isWhitespace
isWhitespace ∷ Char → Bool 
              | Int → Bool 
pure native java.lang.Character.isWhitespace


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isWhitespaceα
isWhitespaceα ∷ Char → Bool 
pure native java.lang.Character.isWhitespace  overloads isWhitespace


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.isWhitespaceβ
isWhitespaceβ ∷ Int → Bool 
pure native java.lang.Character.isWhitespace  overloads isWhitespace

-- | The trailing surrogate (which is a low surrogate code unit) of the surrogate pair representing the specified supplementary character (Unicode code point) in the UTF-16 encoding. 
--   If the specified value is not a supplementary character, an unspecified character is returned. 
--   See also: Char.isSupplementaryCodePoint, Char.highSurrogate, Char.toCodePoint 
--   The following holds: 
--   isSupplementaryCodePoint x ==> (x == toCodePoint (highSurrogate x) (lowSurrogate x)) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.lowSurrogate
lowSurrogate ∷ Int → Char 
pure native java.lang.Character.lowSurrogate

-- | Char.toCodePoint high low 
--   Converts the specified surrogate pair to its supplementary code point value. This function does not validate the specified surrogate pair. The caller must validate it using Char.isSurrogatePair if necessary. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toCodePoint
toCodePoint ∷ Char → Char → Int 
pure native java.lang.Character.toCodePoint

-- | The lowercase equivalent of the character, if any; otherwise, the character itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toLowerCase
toLowerCase ∷ Char → Char 
             | Int → Int 
pure native java.lang.Character.toLowerCase

-- | The lowercase equivalent of the character, if any; otherwise, the character itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toLowerCaseα
toLowerCaseα ∷ Char → Char 
pure native java.lang.Character.toLowerCase  overloads toLowerCase

-- | The lowercase equivalent of the character, if any; otherwise, the character itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toLowerCaseβ
toLowerCaseβ ∷ Int → Int 
pure native java.lang.Character.toLowerCase  overloads toLowerCase

-- | The titlecase equivalent of the character, if any; otherwise, the character itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toTitleCase
toTitleCase ∷ Char → Char 
             | Int → Int 
pure native java.lang.Character.toTitleCase

-- | The titlecase equivalent of the character, if any; otherwise, the character itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toTitleCaseα
toTitleCaseα ∷ Char → Char 
pure native java.lang.Character.toTitleCase  overloads toTitleCase

-- | The titlecase equivalent of the character, if any; otherwise, the character itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toTitleCaseβ
toTitleCaseβ ∷ Int → Int 
pure native java.lang.Character.toTitleCase  overloads toTitleCase

-- | The uppercase equivalent of the character, if any; otherwise, the character itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toUpperCase
toUpperCase ∷ Char → Char 
             | Int → Int 
pure native java.lang.Character.toUpperCase

-- | The uppercase equivalent of the character, if any; otherwise, the character itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toUpperCaseα
toUpperCaseα ∷ Char → Char 
pure native java.lang.Character.toUpperCase  overloads toUpperCase

-- | The uppercase equivalent of the character, if any; otherwise, the character itself.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Char.toUpperCaseβ
toUpperCaseβ ∷ Int → Int 
pure native java.lang.Character.toUpperCase  overloads toUpperCase

-- |String values are based on Java's java.lang.String objects. String is an alias for StringJ Char 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#String
type String = StringJ Char

-- | For technical reasons, the native string type is defined with a phantom type, which allows us to treat strings like character lists. 
--   The following rules apply: There must be no polymorphic non empty string. Trying to extract elements from it with StringJ.charAt would fail with an exception at runtime. Every function with return type (StringJ a) must either take one or more arguments of the same type which it manipulates, or it must return the empty string. In the former case, the elements of the result string must all be computed from the elements of the argument strings. 
--   Member Functions
--  ----------------
--  ++ ∷ StringJ a → StringJ a → StringJ a 
--  pure native + 
--  infixr  13 
--   Concatenate two strings, uses Java's + operator   
--  atod ∷ String → Double 
--  pure native java.lang.Double.parseDouble 
--   Like StringJ.double, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.   
--  atof ∷ String → Float 
--  pure native java.lang.Float.parseFloat 
--   Like StringJ.float, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.   
--  atoi ∷ String → Int 
--  pure native java.lang.Integer.parseInt 
--   Like StringJ.int, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.   
--  atol ∷ String → Long 
--  pure native java.lang.Long.parseLong 
--   Like StringJ.long, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.   
--  aton ∷ String → Integer 
--  pure native new 
--   Like StringJ.integer, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.   
--  charAt ∷ String → Int → Char 
--  pure native charAt 
--   retrieve character at index   
--  compareTo ∷ String → String → Int 
--  pure native compareTo 
--  StringJ.compareTo is used in the Ord instance of String   
--  double ∷ String → (NumberFormatException | Double) 
--  pure native java.lang.Double.parseDouble 
--   Safe way to parse a Double value from a string. See StringJ.int   
--  float ∷ String → (NumberFormatException | Float) 
--  pure native java.lang.Float.parseFloat 
--   Safe way to parse a Float value from a string. See StringJ.int   
--  format ∷ String → a → String 
--          | String → a → b → String 
--          | String → a → b → c → String 
--          | String → a → b → c → d → String 
--          | String → a → b → c → d → e → String 
--          | String → a → b → c → d → e → f → String 
--          | String → a → b → c → d → e → f → g → String 
--          | String → a → b → c → d → e → f → g → h → String 
--          | String → a → b → c → d → e → f → g → h → i → String 
--  pure native java.lang.String.format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  formatα ∷ String → a → String 
--  pure native java.lang.String.format  overloads format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  formatβ ∷ String → a → b → String 
--  pure native java.lang.String.format  overloads format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  formatγ ∷ String → a → b → c → String 
--  pure native java.lang.String.format  overloads format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  formatδ ∷ String → a → b → c → d → String 
--  pure native java.lang.String.format  overloads format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  formatε ∷ String → a → b → c → d → e → String 
--  pure native java.lang.String.format  overloads format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  formatζ ∷ String → a → b → c → d → e → f → String 
--  pure native java.lang.String.format  overloads format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  formatη ∷ String → a → b → c → d → e → f → g → String 
--  pure native java.lang.String.format  overloads format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  formatθ ∷ String → a → b → c → d → e → f → g → h → String 
--  pure native java.lang.String.format  overloads format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  formatι ∷ String → a → b → c → d → e → f → g → h → i → String 
--  pure native java.lang.String.format  overloads format 
--   Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.   
--  indexOf ∷ String → Char → Int 
--  pure native indexOf 
--   str.indexOf ch 
--   the first index of ch in str, or -1 if not present   
--  int ∷ String → (NumberFormatException | Int) 
--  pure native java.lang.Integer.parseInt 
--   Safe way to parse an integer from a string. java.lang.NumberFormatException will be caught and returned as Either.Left value. When the parse succeeds, the integer is returned in the Either.Right value. 
--   Use like this: 
--   case s.int of Left exc -> ... -- s is not well formed Right i -> ... -- the parsed value is in i  
--  intToString ∷ Int → String 
--  pure native java.lang.String.valueOf 
--   convert an Int to a String   
--  integer ∷ String → (NumberFormatException | Integer) 
--  pure native new 
--   Safe way to parse a big Integer value from a string. See StringJ.int   
--  length ∷ StringJ a → Int 
--  pure native length 
--   The length of a String   
--  long ∷ String → (NumberFormatException | Long) 
--  pure native java.lang.Long.parseLong 
--   Safe way to parse a long integer from a string. See StringJ.int   
--  notify ∷ String → IO () 
--  native frege.runtime.Concurrent.notifyOne 
--   notify a single thread waiting on the objects monitor   
--  notifyAll ∷ String → IO () 
--  native frege.runtime.Concurrent.notifyAll 
--   notify all threads waiting on the objects monitor   
--  polymorphicElemAt ∷ StringJ a → Int → a 
--  pure native charAt 
--   Retrieve element of String at index 
--   Because it is impossible to create a String from anything but Chars, the type is not even wrong. 
--   Will be needed in the String instance of ListLike that expects a type with kind ->.  
--  quote ∷ String → String 
--  pure native java.util.regex.Pattern.quote 
--   quote regular expression metacharacters in string   
--  quoteReplacement ∷ String → String 
--  pure native java.util.regex.Matcher.quoteReplacement 
--   quote replacement string metacharacters in string   
--  startsWith ∷ String → String → Bool 
--  pure native startsWith 
--   true if the second string is a prefix of the first one   
--  substr ∷ StringJ a → Int → Int → StringJ a 
--  pure native substring 
--   see substr   
--  toLowerCase ∷ String → String 
--  pure native toLowerCase 
--   convert to lower case   
--  toUpperCase ∷ String → String 
--  pure native toUpperCase 
--   convert to upper case   
--  wait ∷ String → IO () 
--  native frege.runtime.Concurrent.waitFor  throws InterruptedException 
--   wait on Objects monitor    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ
data StringJ a 

-- | Concatenate two strings, uses Java's + operator  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ._plus_plus
(++) ∷  StringJ a → StringJ a → StringJ a 
pure native + 
infixr  13

-- | Like StringJ.double, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.atod
atod ∷ String → Double 
pure native java.lang.Double.parseDouble

-- | Like StringJ.float, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.atof
atof ∷ String → Float 
pure native java.lang.Float.parseFloat

-- | Like StringJ.int, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.atoi
atoi ∷ String → Int 
pure native java.lang.Integer.parseInt

-- | Like StringJ.long, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.atol
atol ∷ String → Long 
pure native java.lang.Long.parseLong

-- | Like StringJ.integer, but the exception is not checked, thus only good when one knows for sure that the parse will succeed.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.aton
aton ∷ String → Integer 
pure native new

-- | retrieve character at index  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.charAt
charAt ∷ String → Int → Char 
pure native charAt

-- |StringJ.compareTo is used in the Ord instance of String  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.compareTo
compareTo ∷ String → String → Int 
pure native compareTo

-- | Safe way to parse a Double value from a string. See StringJ.int  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ._double
double ∷ String → (NumberFormatException | Double) 
pure native java.lang.Double.parseDouble

-- | Safe way to parse a Float value from a string. See StringJ.int  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ._float
float ∷ String → (NumberFormatException | Float) 
pure native java.lang.Float.parseFloat

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.format
format ∷ String → a → String 
        | String → a → b → String 
        | String → a → b → c → String 
        | String → a → b → c → d → String 
        | String → a → b → c → d → e → String 
        | String → a → b → c → d → e → f → String 
        | String → a → b → c → d → e → f → g → String 
        | String → a → b → c → d → e → f → g → h → String 
        | String → a → b → c → d → e → f → g → h → i → String 
pure native java.lang.String.format

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.formatα
formatα ∷ String → a → String 
pure native java.lang.String.format  overloads format

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.formatβ
formatβ ∷ String → a → b → String 
pure native java.lang.String.format  overloads format

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.formatγ
formatγ ∷ String → a → b → c → String 
pure native java.lang.String.format  overloads format

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.formatδ
formatδ ∷ String → a → b → c → d → String 
pure native java.lang.String.format  overloads format

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.formatε
formatε ∷ String → a → b → c → d → e → String 
pure native java.lang.String.format  overloads format

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.formatζ
formatζ ∷ String → a → b → c → d → e → f → String 
pure native java.lang.String.format  overloads format

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.formatη
formatη ∷ String → a → b → c → d → e → f → g → String 
pure native java.lang.String.format  overloads format

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.formatθ
formatθ ∷ String → a → b → c → d → e → f → g → h → String 
pure native java.lang.String.format  overloads format

-- | Format 1 to 9 values 
--   May throw IllegalFormatException, if the type of any argument does not fit the format specifier.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.formatι
formatι ∷ String → a → b → c → d → e → f → g → h → i → String 
pure native java.lang.String.format  overloads format

-- | str.indexOf ch 
--   the first index of ch in str, or -1 if not present  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.indexOf
indexOf ∷ String → Char → Int 
pure native indexOf

-- | Safe way to parse an integer from a string. java.lang.NumberFormatException will be caught and returned as Either.Left value. When the parse succeeds, the integer is returned in the Either.Right value. 
--   Use like this: 
--   case s.int of Left exc -> ... -- s is not well formed Right i -> ... -- the parsed value is in i 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ._int
int ∷ String → (NumberFormatException | Int) 
pure native java.lang.Integer.parseInt

-- | convert an Int to a String  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.intToString
intToString ∷ Int → String 
pure native java.lang.String.valueOf

-- | Safe way to parse a big Integer value from a string. See StringJ.int  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.integer
integer ∷ String → (NumberFormatException | Integer) 
pure native new

-- | The length of a String  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.length
length ∷ StringJ a → Int 
pure native length

-- | Safe way to parse a long integer from a string. See StringJ.int  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ._long
long ∷ String → (NumberFormatException | Long) 
pure native java.lang.Long.parseLong

-- | notify a single thread waiting on the objects monitor  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.notify
notify ∷ String → IO () 
native frege.runtime.Concurrent.notifyOne

-- | notify all threads waiting on the objects monitor  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.notifyAll
notifyAll ∷ String → IO () 
native frege.runtime.Concurrent.notifyAll

-- | Retrieve element of String at index 
--   Because it is impossible to create a String from anything but Chars, the type is not even wrong. 
--   Will be needed in the String instance of ListLike that expects a type with kind ->. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.polymorphicElemAt
polymorphicElemAt ∷ StringJ a → Int → a 
pure native charAt

-- | quote regular expression metacharacters in string  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.quote
quote ∷ String → String 
pure native java.util.regex.Pattern.quote

-- | quote replacement string metacharacters in string  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.quoteReplacement
quoteReplacement ∷ String → String 
pure native java.util.regex.Matcher.quoteReplacement

-- | true if the second string is a prefix of the first one  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.startsWith
startsWith ∷ String → String → Bool 
pure native startsWith

-- | see substr  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.substr
substr ∷ StringJ a → Int → Int → StringJ a 
pure native substring

-- | convert to lower case  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.toLowerCase
toLowerCase ∷ String → String 
pure native toLowerCase

-- | convert to upper case  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.toUpperCase
toUpperCase ∷ String → String 
pure native toUpperCase

-- | wait on Objects monitor  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#StringJ.wait
wait ∷ String → IO () 
native frege.runtime.Concurrent.waitFor  throws InterruptedException

-- |substr s start end returns the sub string of s that starts with the character at position start and extends to the character at position end-1. 
--   This uses the native method substring of class java.lang.String. It will throw an IndexOutOfBoundsException if start is negative or larger than end or if end is greater than the length of s. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#substr
substr ∷ StringJ a → Int → Int → StringJ a 
pure native substring

-- |strtail s n returns a new string that is a substring of string s. The substring begins with the character at the specified index and extends to the end of s. 
--   This uses the native method substring of class java.lang.String. It will throw an IndexOutOfBoundsException if n is negative or larger than the length of s. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strtail
strtail ∷ StringJ a → Int → StringJ a 
pure native substring


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#atoi
atoi ∷ String → Int

-- |Float values are based on Java's primitive float values. 
--   According to the Java Language Specification §4.2.3, float values are 32-bit-precision binary floating point values. The values and the operations on it behave as specified in the IEEE Standard for Binary Floating-Point Arithmetic. 
--   Member Functions
--  ----------------
--  double ∷ Float → Double 
--  pure native (double) 
--   Applies the java widening primitive conversion from float to double.   
--  int ∷ Float → Int 
--  pure native java.lang.Math.round 
--   Returns the closest Int value to the argument. The result is rounded to an integer by adding 1/2, taking the floor of the result, and casting the result to type int. 
--   The following property holds: 
--   (f < Int.maxBound.float && f > Int.minBound.float) ==> (f.int.float == (f + 0.5f).floor) 
--   Special cases: If the argument is NaN, the result is 0. If the argument is negative infinity or any value less than or equal to the value of Bounded_Int.minBound, the result is equal to the value of Bounded_Int.minBound. If the argument is positive infinity or any value greater than or equal to the value of Bounded_Int.maxBound, the result is equal to the value of Bounded_Int.maxBound.   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Float
data Float 

-- | Applies the java widening primitive conversion from float to double.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Float._double
double ∷ Float → Double 
pure native (double)

-- | Returns the closest Int value to the argument. The result is rounded to an integer by adding 1/2, taking the floor of the result, and casting the result to type int. 
--   The following property holds: 
--   (f < Int.maxBound.float && f > Int.minBound.float) ==> (f.int.float == (f + 0.5f).floor) 
--   Special cases: If the argument is NaN, the result is 0. If the argument is negative infinity or any value less than or equal to the value of Bounded_Int.minBound, the result is equal to the value of Bounded_Int.minBound. If the argument is positive infinity or any value greater than or equal to the value of Bounded_Int.maxBound, the result is equal to the value of Bounded_Int.maxBound. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Float._int
int ∷ Float → Int 
pure native java.lang.Math.round

-- |Double values are Java's primitive double values. 
--   According to the Java Language Specification §4.2.3, double values are 64-bit-precision binary floating point values. The values and the operations on it behave as specified in the IEEE Standard for Binary Floating-Point Arithmetic. 
--   Member Functions
--  ----------------
--  float ∷ Double → Float 
--  pure native (float) 
--   Applies the java narrowing primitive conversion from double to float   
--  long ∷ Double → Long 
--  pure native java.lang.Math.round 
--   Returns the closest Long value to the argument. The result is rounded to an integer by adding 1/2, taking the floor of the result, and casting the result to type long. 
--   The following property holds: 
--   (d < Long.maxBound.double && d > Long.minBound.double) ==> (d.long.double == (d + 0.5d).floor) 
--   Special cases: If the argument is NaN, the result is 0. If the argument is negative infinity or any value less than or equal to the value of Bounded_Long.minBound, the result is equal to the value of Bounded_Long.minBound. If the argument is positive infinity or any value greater than or equal to the value of Bounded_Long.maxBound, the result is equal to the value of Bounded_Long.maxBound.  
--  longBits ∷ Double → Long 
--  pure native java.lang.Double.doubleToLongBits 
--   bit representation of a double    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Double
data Double 

-- | Applies the java narrowing primitive conversion from double to float  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Double._float
float ∷ Double → Float 
pure native (float)

-- | Returns the closest Long value to the argument. The result is rounded to an integer by adding 1/2, taking the floor of the result, and casting the result to type long. 
--   The following property holds: 
--   (d < Long.maxBound.double && d > Long.minBound.double) ==> (d.long.double == (d + 0.5d).floor) 
--   Special cases: If the argument is NaN, the result is 0. If the argument is negative infinity or any value less than or equal to the value of Bounded_Long.minBound, the result is equal to the value of Bounded_Long.minBound. If the argument is positive infinity or any value greater than or equal to the value of Bounded_Long.maxBound, the result is equal to the value of Bounded_Long.maxBound. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Double._long
long ∷ Double → Long 
pure native java.lang.Math.round

-- | bit representation of a double  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Double.longBits
longBits ∷ Double → Long 
pure native java.lang.Double.doubleToLongBits

-- | The Java Object type 
--   Member Functions
--  ----------------
--  getClass ∷ a → Class a 
--  pure native frege.runtime.Runtime.getClass 
--   for any value, we can get its Java class   
--  notify ∷ Object → IO () 
--  native frege.runtime.Concurrent.notifyOne 
--   notify a single thread waiting on the objects monitor   
--  notifyAll ∷ Object → IO () 
--  native frege.runtime.Concurrent.notifyAll 
--   notify all threads waiting on the objects monitor   
--  wait ∷ Object → IO () 
--  native frege.runtime.Concurrent.waitFor  throws InterruptedException 
--   wait on Objects monitor    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Object
data Object 

-- | for any value, we can get its Java class  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Object.getClass
getClass ∷ a → Class a 
pure native frege.runtime.Runtime.getClass

-- | notify a single thread waiting on the objects monitor  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Object.notify
notify ∷ Object → IO () 
native frege.runtime.Concurrent.notifyOne

-- | notify all threads waiting on the objects monitor  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Object.notifyAll
notifyAll ∷ Object → IO () 
native frege.runtime.Concurrent.notifyAll

-- | wait on Objects monitor  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Object.wait
wait ∷ Object → IO () 
native frege.runtime.Concurrent.waitFor  throws InterruptedException


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#InterruptedException
data InterruptedException 

-- | warning: probably catches more exceptions than you want to handle, use (Exception1|Exception2|Result) This is the principal return type for java methods that are expected to throw exceptions. 
--   It is strongly recommended to use more specific exception types. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#CatchAll
type CatchAll = Either Throwable

-- | We need to do some reflection from frege code. For example, when we catch a Throwable thrown from Java code. we might want to know what it is. 
--   Member Functions
--  ----------------
--  forName ∷ String → IO (ClassNotFoundException | Class a) 
--  native java.lang.Class.forName 
--  getName ∷ Class a → String 
--  pure native getName 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Class
data Class a 


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Class.forName
forName ∷ String → IO (ClassNotFoundException | Class a) 
native java.lang.Class.forName


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Class.getName
getName ∷ Class a → String 
pure native getName

-- | Frege wrapper for java Throwables.  
--   Member Functions
--  ----------------
--  caught ∷ Throwable → String 
--   give the class name of this exception   
--  getLocalizedMessage ∷ Throwable → String 
--  pure native getLocalizedMessage 
--  getMessage ∷ Throwable → String 
--  pure native getMessage 
--  printStackTrace ∷ Throwable → IO () 
--  native printStackTrace 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Throwable
data Throwable 

-- | give the class name of this exception  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Throwable.caught
caught ∷ Throwable → String


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Throwable.getLocalizedMessage
getLocalizedMessage ∷ Throwable → String 
pure native getLocalizedMessage


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Throwable.getMessage
getMessage ∷ Throwable → String 
pure native getMessage


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Throwable.printStackTrace
printStackTrace ∷ Throwable → IO () 
native printStackTrace

-- | Constructs a strict tuple. 
--   The difference to (,) is that both argument values will be evaluated before the tuple is constructed. Thus: 
--   fst (42; undefined) == undefined fst (42, undefined) == 42 
--  Implementation specific: The compiler will rewrite (a;b) as (PreludeBase.strictTuple2 a b). 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple2
strictTuple2 ∷ a → b → (a, b) 
pure native PreludeBase.TTuple2.mk

-- | Constructs a strict 3-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple3
strictTuple3 ∷ a → b → c → (a, b, c) 
pure native PreludeBase.TTuple3.mk

-- | Constructs a strict 4-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple4
strictTuple4 ∷ a → b → c → d → (a, b, c, d) 
pure native PreludeBase.TTuple4.mk

-- | Constructs a strict 5-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple5
strictTuple5 ∷ a → b → c → d → e → (a, b, c, d, e) 
pure native PreludeBase.TTuple5.mk

-- | Constructs a strict 6-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple6
strictTuple6 ∷ a → b → c → d → e → f → (a, b, c, d, e, f) 
pure native PreludeBase.TTuple6.mk

-- | Constructs a strict 7-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple7
strictTuple7 ∷ a → b → c → d → e → f → g → (a, b, c, d, e, f, g) 
pure native PreludeBase.TTuple7.mk

-- | Constructs a strict 8-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple8
strictTuple8 ∷ a → b → c → d → e → f → g → h → (a, b, c, d, e, f, g, h) 
pure native PreludeBase.TTuple8.mk

-- | Constructs a strict 9-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple9
strictTuple9 ∷ a → b → c → d → e → f → g → h → i → (a, b, c, d, e, f, g, h, i) 
pure native PreludeBase.TTuple9.mk

-- | Constructs a strict 10-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple10
strictTuple10 ∷ a → b → c → d → e → f → g → h → i → j → (a, b, c, d, e, f, g, h, i, j) 
pure native PreludeBase.TTuple10.mk

-- | Constructs a strict 11-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple11
strictTuple11 ∷ a → b → c → d → e → f → g → h → i → j → k → (a, b, c, d, e, f, g, h, i, j, k) 
pure native PreludeBase.TTuple11.mk

-- | Constructs a strict 12-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple12
strictTuple12 ∷ a → b → c → d → e → f → g → h → i → j → k → l → (a, b, c, d, e, f, g, h, i, j, k, l) 
pure native PreludeBase.TTuple12.mk

-- | Constructs a strict 13-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple13
strictTuple13 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → (a, b, c, d, e, f, g, h, i, j, k, l, m) 
pure native PreludeBase.TTuple13.mk

-- | Constructs a strict 14-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple14
strictTuple14 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → (a, b, c, d, e, f, g, h, i, j, k, l, m, n) 
pure native PreludeBase.TTuple14.mk

-- | Constructs a strict 15-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple15
strictTuple15 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) 
pure native PreludeBase.TTuple15.mk

-- | Constructs a strict 16-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple16
strictTuple16 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) 
pure native PreludeBase.TTuple16.mk

-- | Constructs a strict 17-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple17
strictTuple17 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) 
pure native PreludeBase.TTuple17.mk

-- | Constructs a strict 18-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple18
strictTuple18 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → r → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) 
pure native PreludeBase.TTuple18.mk

-- | Constructs a strict 19-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple19
strictTuple19 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → r → s → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) 
pure native PreludeBase.TTuple19.mk

-- | Constructs a strict 20-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple20
strictTuple20 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → r → s → t → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) 
pure native PreludeBase.TTuple20.mk

-- | Constructs a strict 21-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple21
strictTuple21 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → r → s → t → u → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) 
pure native PreludeBase.TTuple21.mk

-- | Constructs a strict 22-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple22
strictTuple22 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → r → s → t → u → v → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v) 
pure native PreludeBase.TTuple22.mk

-- | Constructs a strict 23-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple23
strictTuple23 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → r → s → t → u → v → w → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w) 
pure native PreludeBase.TTuple23.mk

-- | Constructs a strict 24-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple24
strictTuple24 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → r → s → t → u → v → w → x → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x) 
pure native PreludeBase.TTuple24.mk

-- | Constructs a strict 25-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple25
strictTuple25 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → r → s → t → u → v → w → x → y → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y) 
pure native PreludeBase.TTuple25.mk

-- | Constructs a strict 26-tuple. See remarks for strictTuple2.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#strictTuple26
strictTuple26 ∷ a → b → c → d → e → f → g → h → i → j → k → l → m → n → o → p → q → r → s → t → u → v → w → x → y → z → (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z) 
pure native PreludeBase.TTuple26.mk

-- |a `seq` b evaluates a before it returns b 
--   This is a right associative operator with precedence 15.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#seq
seq ∷ α → β → β 
infixr  2

-- | An unchecked subclass of java.lang.RuntimeException for the Frege Runtime 
--   An instance of Undefined will be thrown if undefined or (error msg) is evaluated.  
--   Member Functions
--  ----------------
--  die ∷ Undefined → Bool 
--  pure native die 
--   Throw this Undefined, this will abort the computation evaluating it. 
--   Actually, the return type is not correct, since it never returns.   
--  new ∷ String → Undefined 
--       | String → Throwable → Undefined 
--  pure native new 
--   create an Undefined value with a message (String) or with a message and a cause. The cause is another exception that caused this one.  
--  newX ∷ Throwable → Undefined 
--   create an Undefined value from a cause (Throwable). The message will be taken from the cause.  
--  newα ∷ String → Undefined 
--  pure native new  overloads new 
--   create an Undefined value with a message (String) or with a message and a cause. The cause is another exception that caused this one.  
--  newβ ∷ String → Throwable → Undefined 
--  pure native new  overloads new 
--   create an Undefined value with a message (String) or with a message and a cause. The cause is another exception that caused this one.   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Undefined
data Undefined 

-- | Throw this Undefined, this will abort the computation evaluating it. 
--   Actually, the return type is not correct, since it never returns.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Undefined.die
die ∷ Undefined → Bool 
pure native die

-- | create an Undefined value with a message (String) or with a message and a cause. The cause is another exception that caused this one. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Undefined._new
new ∷ String → Undefined 
     | String → Throwable → Undefined 
pure native new

-- | create an Undefined value from a cause (Throwable). The message will be taken from the cause. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Undefined.newX
newX ∷ Throwable → Undefined

-- | create an Undefined value with a message (String) or with a message and a cause. The cause is another exception that caused this one. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Undefined.newα
newα ∷ String → Undefined 
pure native new  overloads new

-- | create an Undefined value with a message (String) or with a message and a cause. The cause is another exception that caused this one. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Undefined.newβ
newβ ∷ String → Throwable → Undefined 
pure native new  overloads new

-- | A subclass of Undefined, used by the runtime to signal failed pattern matches  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#NoMatch
data NoMatch 

-- | A subclass of Undefined, used by the runtime to signal failed guards  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#GuardFailed
data GuardFailed 

-- |java.lang.NumberFormatException needed for string conversion operations 
--   declared protected to avoid name conflicts with NumberFormatException  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#NumberFormatException
data NumberFormatException 

-- | Forward declaration of ClassNotFoundException  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#ClassNotFoundException
data ClassNotFoundException 

-- | This is the standard undefined value.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#undefined
undefined ∷ u

-- | Construct an undefined value with an informative message. 
--   When evaluated, an Undefined exception will be thrown.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#error
error ∷ String → u

-- | Constructs an undefined value from a java exception and throws it.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_throw
throw ∷ Throwable → α

-- | The Java ! operator on booleans  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_excl
(!) ∷  Bool → Bool 
pure native !

-- | The Java && operator on booleans. Note that since this is a native function, the second argument appears strict to the compiler when in fact it is lazy at the Java level. This can lead to inconsistent results in some cases. For example, the following program correctly prints false in the first line of the output, but then aborts: 
--   main _ = do stdout << (false && undefined) << "\n" stdout << conj false undefined << "\n" where conj a b = a && b 
--   Note that the very same behaviour is seen in the following java program 
--   public class And { static boolean undef() { if (true) throw new Error("undefined"); return false; } static boolean conj(boolean a, boolean b) { return a&&b; } public static void main(String[] args) { System.out.println(false && undef()); System.out.println(conj(false, undef())); } } 
--   One could thus say that && behaves exactly like the Java operator including the fact that it cannot be replaced by a function without changing the semantics of a program. 
--   For an alternative see und 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_amp_amp
(&&) ∷  Bool → Bool → Bool 
pure native && 
infixr  6

-- | The Java || operator on booleans. 
--   Note that since this is a native function, the second argument appears strict to the compiler when in fact it is lazy at the Java level. 
--   This can lead to inconsistent results in cases where the wrong strictness of the second argument propagates to arguments of the function that contains an application of ||. (The documentation for && has an example.) 
--   See oder for an alternative 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_bar_bar
(||) ∷  Bool → Bool → Bool 
pure native || 
infixr  5

-- | Like &&, but second argument is lazy. The `und` operator has the same precedence and arity as &&. The definition is 
--   a `und` b = if a then b else false 
--   This should really be named and, but Haskell 2010 uses this already for lists. Hence we use the german word und. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#und
und ∷ Bool → Bool → Bool 
infixr  6

-- | Like ||, but second argument is lazy. The `oder` operator has the same precedence and arity as ||. The definition is 
--   a `oder` b = if a then true else b 
--   This should really be named or, but Haskell 2010 uses this already for lists. Hence we use the german word oder. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#oder
oder ∷ Bool → Bool → Bool 
infixr  5

-- |not b is true if b is false, otherwise true. Uses java's ! operator. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#not
not ∷ Bool → Bool 
pure native !

-- |a ^^ b is true if either a or b is true, but not both. 
--   a ^^ b = if a then not b else b 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_caret_caret
(^^) ∷  Bool → Bool → Bool 
infixr  5

-- | This checks for object identity or equality of primitive values using Java's == operator. It evaluates its arguments, so undefined values cannot be compared.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_eq_eq_eq
(===) ∷  a → a → Bool 
pure native == 
infix  7

-- | This checks for object identity or inequality of primitive values using Java's != operator. It evaluates its arguments, so undefined values cannot be compared.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_excl_eq_eq
(!==) ∷  a → a → Bool 
pure native != 
infix  7

-- |Ordering encodes the results of comparisons, see also Ord.<=>  
--   Constructors
--  ----------------
--  Eq 
--  Gt 
--  Lt 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ordering
data Ordering


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ordering.Eq
Eq


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ordering.Gt
Gt


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ordering.Lt
Lt

-- | The Ord class provides relational operators as well as the functions Ord.max and Ord.min. The default implementation defines them all in terms of the compare operator Ord.<=>. 
--   Making some type an instance of Ord makes it automatically an instance of Eq if it is not one already and if it has an implementation for Eq.hashCode. The operators Eq.== and Eq.!= will be defined in terms of Ord.<=>. 
--   Instances of Ord can be derived automatically for algebraic data types when all elements of the type are themselves instances of Ord and when the type is an instance of Eq. 
--   Known Instances
--  ----------------
--  Integer, Char, Bool, Float, Double, Int, StringJ, Long 
--   Member Functions
--  ----------------
--  != ∷ Ord ord ⇒ ord → ord → Bool 
--  infix  7 
--   This implementation for the (Eq.!=) operator is being used in instances of Ord when the instantiated type is not already an instance of Eq.  
--  < ∷ Ord ord ⇒ ord → ord → Bool 
--  infix  9 
--   Relational < operator. Obeys the following laws: 
--   if a < b && b < c then a < c a < b == b > a  
--  <= ∷ Ord ord ⇒ ord → ord → Bool 
--  infix  9 
--   Relational <= operator. Obeys the following laws: 
--   if a <= b && b <= c then a <= c a <= b == b >= a a <= b == !(a > b)  
--  <=> ∷ Ord ord ⇒ ord → ord → Ordering 
--  infix  8 
--   This operator must be defined in all instances. It compares its operands and returns Ordering.Lt if the first is lower than the second, Ordering.Gt if the first is greater than the second and Ordering.Eq otherwise. 
--   The following shall be invariantly true: 
--   case a <=> b of { Eq -> a == b; _ -> a != b }  
--  == ∷ Ord ord ⇒ ord → ord → Bool 
--  infix  7 
--   This implementation for the (Eq.==) operator is being used in instances of Ord when the instantiated type is not already an instance of Eq.  
--  > ∷ Ord ord ⇒ ord → ord → Bool 
--  infix  9 
--   Relational > operator. Obeys the following laws: 
--   if a > b && b > c then a > c a > b == b < a  
--  >= ∷ Ord ord ⇒ ord → ord → Bool 
--  infix  9 
--   Relational >= operator. Obeys the following laws: 
--   if a >= b && b >= c then a >= c a >= b == b <= a a >= b == !(a < b)  
--  compare ∷ Ord ord ⇒ ord → ord → Ordering 
--  infix  8 
--  max ∷ Ord ord ⇒ ord → ord → ord 
--   max a b = if a > b then a else b   
--  min ∷ Ord ord ⇒ ord → ord → ord 
--   min a b = if a < b then a else b    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord
class Eq ord ⇒ Ord ord

-- | This implementation for the (Eq.!=) operator is being used in instances of Ord when the instantiated type is not already an instance of Eq. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord._excl_eq
(!=) ∷  Ord ord ⇒ ord → ord → Bool 
infix  7

-- | Relational < operator. Obeys the following laws: 
--   if a < b && b < c then a < c a < b == b > a 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord._lt
(<) ∷  Ord ord ⇒ ord → ord → Bool 
infix  9

-- | Relational <= operator. Obeys the following laws: 
--   if a <= b && b <= c then a <= c a <= b == b >= a a <= b == !(a > b) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord._lt_eq
(<=) ∷  Ord ord ⇒ ord → ord → Bool 
infix  9

-- | This operator must be defined in all instances. It compares its operands and returns Ordering.Lt if the first is lower than the second, Ordering.Gt if the first is greater than the second and Ordering.Eq otherwise. 
--   The following shall be invariantly true: 
--   case a <=> b of { Eq -> a == b; _ -> a != b } 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord._lt_eq_gt
(<=>) ∷  Ord ord ⇒ ord → ord → Ordering 
infix  8

-- | This implementation for the (Eq.==) operator is being used in instances of Ord when the instantiated type is not already an instance of Eq. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord._eq_eq
(==) ∷  Ord ord ⇒ ord → ord → Bool 
infix  7

-- | Relational > operator. Obeys the following laws: 
--   if a > b && b > c then a > c a > b == b < a 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord._gt
(>) ∷  Ord ord ⇒ ord → ord → Bool 
infix  9

-- | Relational >= operator. Obeys the following laws: 
--   if a >= b && b >= c then a >= c a >= b == b <= a a >= b == !(a < b) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord._gt_eq
(>=) ∷  Ord ord ⇒ ord → ord → Bool 
infix  9


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord.compare
compare ∷ Ord ord ⇒ ord → ord → Ordering 
infix  8

-- | max a b = if a > b then a else b  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord.max
max ∷ Ord ord ⇒ ord → ord → ord

-- | min a b = if a < b then a else b  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Ord.min
min ∷ Ord ord ⇒ ord → ord → ord

-- | Class Enum defines operations on sequentially ordered types. 
--   A type that is an instance of Enum is also an instance of Ord (and, in turn, of Eq). 
--   Instances of Enum may be derived for any enumeration type (types whose constructors have no fields). If there is no Eq.hashCode provided, it will be the same as Enum.ord. 
--   Enumeration types have special syntactic support with the range list: 
--   [a .. b] [a ..] [a,b .. c] [a,b ..] 
--   Known Instances
--  ----------------
--  Int, Bool, Char, Integer, Long 
--   Member Functions
--  ----------------
--  <=> ∷ Enum e ⇒ e → e → Ordering 
--  infix  8 
--   This is the default implementation of the compare operator, that makes each Enum type an Ord type automatically. 
--   a <=> b = (ord a).<=> (ord b)  
--  enumFrom ∷ Enum e ⇒ e → [e] 
--   used in translating @[n..]   
--  enumFromThen ∷ Enum e ⇒ e → e → [e] 
--   used in translating @[n,n'..]   
--  enumFromThenTo ∷ Enum e ⇒ e → e → e → [e] 
--   used in translating @[n,n'..m]   
--  enumFromTo ∷ Enum e ⇒ e → e → [e] 
--   used in translating @[n..m]   
--  from ∷ Enum e ⇒ Int → e 
--  T.from i maps the Int value i to a value of T, such that 
--   ord (T.from i) == i 
--   unless there is no value e of T so that ord e == i. In the latter case, the result is undefined.  
--  hashCode ∷ Enum e ⇒ e → Int 
--   default implementation for Eq.hashCode is same as Enum.ord   
--  ord ∷ Enum e ⇒ e → Int 
--  ord e returns the ordinal number associated with the value e. For enumeration types, Enum.ord is the same as constructor, for Int, it is the identity function. Some types, like Long, cannot map all their values to Int, in such cases the result of applying Enum.ord may be meaningless.  
--  pred ∷ Enum e ⇒ e → e 
--  pred e is the predecessor of e or undefined if there is no predecessor.   
--  succ ∷ Enum e ⇒ e → e 
--  succ e is the successor of e or undefined if there is no such successor.    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum
class (Eq e, Ord e) ⇒ Enum e

-- | This is the default implementation of the compare operator, that makes each Enum type an Ord type automatically. 
--   a <=> b = (ord a).<=> (ord b) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum._lt_eq_gt
(<=>) ∷  Enum e ⇒ e → e → Ordering 
infix  8

-- | used in translating @[n..]  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum.enumFrom
enumFrom ∷ Enum e ⇒ e → [e]

-- | used in translating @[n,n'..]  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum.enumFromThen
enumFromThen ∷ Enum e ⇒ e → e → [e]

-- | used in translating @[n,n'..m]  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum.enumFromThenTo
enumFromThenTo ∷ Enum e ⇒ e → e → e → [e]

-- | used in translating @[n..m]  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum.enumFromTo
enumFromTo ∷ Enum e ⇒ e → e → [e]

-- |T.from i maps the Int value i to a value of T, such that 
--   ord (T.from i) == i 
--   unless there is no value e of T so that ord e == i. In the latter case, the result is undefined. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum.from
from ∷ Enum e ⇒ Int → e

-- | default implementation for Eq.hashCode is same as Enum.ord  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum.hashCode
hashCode ∷ Enum e ⇒ e → Int

-- |ord e returns the ordinal number associated with the value e. For enumeration types, Enum.ord is the same as constructor, for Int, it is the identity function. Some types, like Long, cannot map all their values to Int, in such cases the result of applying Enum.ord may be meaningless. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum.ord
ord ∷ Enum e ⇒ e → Int

-- |pred e is the predecessor of e or undefined if there is no predecessor.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum.pred
pred ∷ Enum e ⇒ e → e

-- |succ e is the successor of e or undefined if there is no such successor.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Enum.succ
succ ∷ Enum e ⇒ e → e

-- | The Num class provides the operators (Num.+), (Num.-) and (Num.*) as well as some functions that are common for all numeric types. 
--   Known Instances
--  ----------------
--  Integer, Float, Double, Int, Long 
--   Member Functions
--  ----------------
--  * ∷ Num n ⇒ n → n → n 
--  infixl  14 
--   Computes the product of two numbers   
--  + ∷ Num n ⇒ n → n → n 
--  infixl  13 
--   Computes the sum of two numbers   
--  - ∷ Num n ⇒ n → n → n 
--  infixl  13 
--   Computes the difference of two numbers   
--  abs ∷ Num n ⇒ n → n 
--   Computes the absolute value   
--  fromInt ∷ Num n ⇒ Int → n 
--   converts an Int value to the instantiated type   
--  fromInteger ∷ Num n ⇒ Integer → n 
--   converts an Integer value to the instantiated type   
--  isInfinite ∷ Num n ⇒ n → Bool 
--   Floating point number types may have special values for infinity and negative infinity. isFinite n yields true if n is an infinite value and false in all other cases. 
--   The default implementation always returns false so that implementors of instances for types without special values for infinity need not care. 
--   See also Num.isNumber.  
--  isNaN ∷ Num n ⇒ n → Bool 
--   Floating point number types may have a special values for not a number (NaN). For example, 0d / 0d is NaN. isNaN n yields true if n is the special value that indicates that n is not a number and false in all other cases. 
--   The default implementation always returns false so that implementors of instances for types without such a special values need not care. 
--   See also Num.isNumber.  
--  isNumber ∷ Num n ⇒ n → Bool 
--   Returns true if n is neither infinite (see Num.isInfinite) nor NaN (see Num.isNaN). 
--   Note that certain properties for functions on numbers are true only under the assumption that the argument values are numbers. 
--   The default implementation is 
--   isNumber n = !(isInfinite n) && !(isNaN n) 
--   so that the function should always compute the right answer as long as Num.isInfinite and Num.isNaN do.  
--  negate ∷ Num n ⇒ n → n 
--   Negates a number n such that if n is a number 
--   n + negate n == 0   
--  one ∷ Num n ⇒ n 
--   the number 1 in the instantiated type   
--  sign ∷ Num n ⇒ n → Int 
--  sign n is -1 if n<0, 1 if n>0 and 0 otherwise   
--  subtract ∷ Num n ⇒ n → n → n 
--   use (subtract a) instead of \\b -> b-a in sections   
--  zero ∷ Num n ⇒ n 
--   the number 0 in the instantiated type    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num
class (Eq n, Ord n) ⇒ Num n

-- | Computes the product of two numbers  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num._star
(*) ∷  Num n ⇒ n → n → n 
infixl  14

-- | Computes the sum of two numbers  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num._plus
(+) ∷  Num n ⇒ n → n → n 
infixl  13

-- | Computes the difference of two numbers  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num._minus
(-) ∷  Num n ⇒ n → n → n 
infixl  13

-- | Computes the absolute value  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.abs
abs ∷ Num n ⇒ n → n

-- | converts an Int value to the instantiated type  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.fromInt
fromInt ∷ Num n ⇒ Int → n

-- | converts an Integer value to the instantiated type  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.fromInteger
fromInteger ∷ Num n ⇒ Integer → n

-- | Floating point number types may have special values for infinity and negative infinity. isFinite n yields true if n is an infinite value and false in all other cases. 
--   The default implementation always returns false so that implementors of instances for types without special values for infinity need not care. 
--   See also Num.isNumber. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.isInfinite
isInfinite ∷ Num n ⇒ n → Bool

-- | Floating point number types may have a special values for not a number (NaN). For example, 0d / 0d is NaN. isNaN n yields true if n is the special value that indicates that n is not a number and false in all other cases. 
--   The default implementation always returns false so that implementors of instances for types without such a special values need not care. 
--   See also Num.isNumber. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.isNaN
isNaN ∷ Num n ⇒ n → Bool

-- | Returns true if n is neither infinite (see Num.isInfinite) nor NaN (see Num.isNaN). 
--   Note that certain properties for functions on numbers are true only under the assumption that the argument values are numbers. 
--   The default implementation is 
--   isNumber n = !(isInfinite n) && !(isNaN n) 
--   so that the function should always compute the right answer as long as Num.isInfinite and Num.isNaN do. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.isNumber
isNumber ∷ Num n ⇒ n → Bool

-- | Negates a number n such that if n is a number 
--   n + negate n == 0  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.negate
negate ∷ Num n ⇒ n → n

-- | the number 1 in the instantiated type  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.one
one ∷ Num n ⇒ n

-- |sign n is -1 if n<0, 1 if n>0 and 0 otherwise  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.sign
sign ∷ Num n ⇒ n → Int

-- | use (subtract a) instead of \\b -> b-a in sections  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.subtract
subtract ∷ Num n ⇒ n → n → n

-- | the number 0 in the instantiated type  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Num.zero
zero ∷ Num n ⇒ n

-- | The Real class provides the division operator (Real./). 
--   Known Instances
--  ----------------
--  Float, Double 
--   Member Functions
--  ----------------
--  / ∷ Real r ⇒ r → r → r 
--  infixl  14 
--   the division operator   
--  fromDouble ∷ Real r ⇒ Double → r 
--   convert a Double to any Real value    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Real
class (Eq r, Ord r, Num r) ⇒ Real r

-- | the division operator  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Real._div
(/) ∷  Real r ⇒ r → r → r 
infixl  14

-- | convert a Double to any Real value  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Real.fromDouble
fromDouble ∷ Real r ⇒ Double → r

-- | Class Integral provides division and remainder operations for integral numbers.  
--   Known Instances
--  ----------------
--  Integer, Int, Long 
--   Member Functions
--  ----------------
--  ^ ∷ (Integral integ, Num a) ⇒ a → integ → a 
--  infixr  15 
--  x ^ n raise x to the n-th power 
--   The exponent must be positive.   
--  big ∷ Integral integ ⇒ integ → Integer 
--   every integral number can be converted to a big Integer   
--  div ∷ Integral integ ⇒ integ → integ → integ 
--  infixl  14 
--   integer division   
--  divMod ∷ Integral integ ⇒ integ → integ → (integ, integ) 
--  even ∷ Integral integ ⇒ integ → Bool 
--  fromIntegral ∷ (Integral integ, Num b) ⇒ integ → b 
--   every Num can be made from an Integral   
--  gcd ∷ Integral integ ⇒ integ → integ → integ 
--  Integral.gcd x y is the non-negative factor of both x and y of which every common factor of x and y is also a factor; for example Integral.gcd 4 2 = 2, Integral.gcd (-4) 6 = 2, Integral.gcd 0 4 = 4. Integral.gcd 0 0 = 0. (That is, the common divisor that is \"greatest\" in the divisibility preordering.) 
--   Note: Since for signed fixed-width integer types, Num.abs Bounded.minBound < 0, the result may be negative if one of the arguments is Bounded.minBound (and necessarily is if the other is 0 or Bounded.minBound) for such types.  
--  gcdHelper ∷ Integral integ ⇒ integ → integ → integ 
--   worker function for Integral.gcd, needs not pollute the namespace   
--  lcm ∷ Integral integ ⇒ integ → integ → integ 
--  Integral.lcm x y is the smallest positive integer that both x and y divide.   
--  mod ∷ Integral integ ⇒ integ → integ → integ 
--  infixl  14 
--   This modulo operator works so that 
--   forAll arbitrary (\a -> forAll arbitrary (\b -> (a `div` b) * b + (a `mod` b) = a)) 
--   In addition, it is the case that 
--   forAll arbitrary (\a -> forAll arbitrary (\b -> @(a `quot` b) == (a `div` b) || (a `quot` b) == (a `div` b)-1))   
--  odd ∷ Integral integ ⇒ integ → Bool 
--  powf ∷ (Integral integ, Num a) ⇒ a → integ → a 
--   helper for Integral.^   
--  powg ∷ (Integral integ, Num a) ⇒ a → integ → a → a 
--   helper for Integral.^   
--  quot ∷ Integral integ ⇒ integ → integ → integ 
--  infixl  14 
--  quotRem ∷ Integral integ ⇒ integ → integ → (integ, integ) 
--   Haskell compatibility   
--  rem ∷ Integral integ ⇒ integ → integ → integ 
--  infixl  14 
--   The remainder á la Java operator % - a `rem` b has same sign as a 
--   forAll arbitrary (\a -> forAll arbitrary (\b -> (a `quot` b) * b + (a `rem` b) = a 
--   This behaviour is the same as in Haskell    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral
class (Eq integ, Ord integ, Num integ) ⇒ Integral integ

-- |x ^ n raise x to the n-th power 
--   The exponent must be positive.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral._caret
(^) ∷  (Integral integ, Num a) ⇒ a → integ → a 
infixr  15

-- | every integral number can be converted to a big Integer  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.big
big ∷ Integral integ ⇒ integ → Integer

-- | integer division  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.div
div ∷ Integral integ ⇒ integ → integ → integ 
infixl  14


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.divMod
divMod ∷ Integral integ ⇒ integ → integ → (integ, integ)


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.even
even ∷ Integral integ ⇒ integ → Bool

-- | every Num can be made from an Integral  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.fromIntegral
fromIntegral ∷ (Integral integ, Num b) ⇒ integ → b

-- |Integral.gcd x y is the non-negative factor of both x and y of which every common factor of x and y is also a factor; for example Integral.gcd 4 2 = 2, Integral.gcd (-4) 6 = 2, Integral.gcd 0 4 = 4. Integral.gcd 0 0 = 0. (That is, the common divisor that is \"greatest\" in the divisibility preordering.) 
--   Note: Since for signed fixed-width integer types, Num.abs Bounded.minBound < 0, the result may be negative if one of the arguments is Bounded.minBound (and necessarily is if the other is 0 or Bounded.minBound) for such types. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.gcd
gcd ∷ Integral integ ⇒ integ → integ → integ

-- | worker function for Integral.gcd, needs not pollute the namespace  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.gcdHelper
gcdHelper ∷ Integral integ ⇒ integ → integ → integ

-- |Integral.lcm x y is the smallest positive integer that both x and y divide.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.lcm
lcm ∷ Integral integ ⇒ integ → integ → integ

-- | This modulo operator works so that 
--   forAll arbitrary (\a -> forAll arbitrary (\b -> (a `div` b) * b + (a `mod` b) = a)) 
--   In addition, it is the case that 
--   forAll arbitrary (\a -> forAll arbitrary (\b -> @(a `quot` b) == (a `div` b) || (a `quot` b) == (a `div` b)-1))  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.mod
mod ∷ Integral integ ⇒ integ → integ → integ 
infixl  14


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.odd
odd ∷ Integral integ ⇒ integ → Bool

-- | helper for Integral.^  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.powf
powf ∷ (Integral integ, Num a) ⇒ a → integ → a

-- | helper for Integral.^  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.powg
powg ∷ (Integral integ, Num a) ⇒ a → integ → a → a


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.quot
quot ∷ Integral integ ⇒ integ → integ → integ 
infixl  14

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.quotRem
quotRem ∷ Integral integ ⇒ integ → integ → (integ, integ)

-- | The remainder á la Java operator % - a `rem` b has same sign as a 
--   forAll arbitrary (\a -> forAll arbitrary (\b -> (a `quot` b) * b + (a `rem` b) = a 
--   This behaviour is the same as in Haskell  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Integral.rem
rem ∷ Integral integ ⇒ integ → integ → integ 
infixl  14

-- | A class for data types that have a lower and an upper bound. 
--   Instances of Bounded can be derived automatically for enumeration types. 
--   Known Instances
--  ----------------
--  Int, Bool, Char, Long 
--   Member Functions
--  ----------------
--  maxBound ∷ Bounded b ⇒ b 
--   the upper bound   
--  minBound ∷ Bounded b ⇒ b 
--   the lower bound    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Bounded
class Bounded b

-- | the upper bound  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Bounded.maxBound
maxBound ∷ Bounded b ⇒ b

-- | the lower bound  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Bounded.minBound
minBound ∷ Bounded b ⇒ b


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#chr
chr ∷ Int → Char

-- | make a String from a single Char  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#ctos
ctos ∷ Char → String 
pure native java.lang.Character.toString

-- | Constructors
--  ----------------
--  Just a 
--  Nothing 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Maybe
data Maybe a


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Maybe.Just
Just :: a → Maybe a


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Maybe.Nothing
Nothing :: Maybe a

-- | The maybe function takes a default value, a function, and a Maybe value. If the Maybe value is Maybe.Nothing, the function returns the default value. Otherwise, it applies the function to the value inside the Maybe.Just and returns the result. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#maybe
maybe ∷ α → (β→α) → Maybe β → α

-- | Constructors
--  ----------------
--  Left a 
--  Right b 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Either
data Either a b


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Either.Left
Left :: a → Either a b


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#Either.Right
Right :: b → Either a b

-- | apply first function to value in Either.Left or second function to value in Either.Right  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#either
either ∷ (α→γ) → (β→γ) → (α | β) → γ 
infixl  2

-- | return the first element of a 2-tuple  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#fst
fst ∷ (α, β) → α

-- | return the second element of a 2-tuple  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#snd
snd ∷ (β, α) → α

-- | A head strict variant of (:) 
--   This will be used in list comprehensions  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_excl_colon
(!:) ∷  α → [α] → [α] 
infixr  4


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#id
id ∷ α → α

-- |a $ b is the same as a b, but because of $'s low precedence one can write f $ x+y instead of f (x+y). Also, because $ is right associative, f $ g $ h y is f (g (h y)) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#$
($) ∷  (β→α) → β → α 
infixr  1

-- | Same as `$` but argument is strict  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#$_excl
($!) ∷  (β→α) → β → α 
infixr  1

-- |const a is a function that returns a regardless of its argument.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_const
const ∷ β → α → β

-- |asTypeOf a b is a with the type of b. 
--   This is a type restricted version of const.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#asTypeOf
asTypeOf ∷ a → a → a

-- | Exchange first and second argument of a function, i.e. 
--   flip f a b = f b a  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#flip
flip ∷ (α→β→γ) → β → α → γ

-- | Passes the elements of a 2-tuple as arguments to a function.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#uncurry
uncurry ∷ (β→γ→α) → (β, γ) → α

-- |curry f passes the next two arguments as 2-tuple to f  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#curry
curry ∷ ((γ, β)→α) → γ → β → α

-- | In patterns, the @-operator is used to bind a name to a complex pattern 
--   f (x@a:as) = e 
--   is the same as 
--   f arg = case arg of { x -> case x of { a:as -> e }}  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#_at
(@) ∷  β → α → () 
infixr  2

-- |using f applies a projection function f on both sides of Eq.==. Example usage: 
--   uniqBy (using fst) [(1, 1), (2, 2), (2, 3), (3,4), (2,5)] 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#using
using ∷ Eq α ⇒ (β→α) → β → β → Bool

-- |comparing f applies a projection function on both sides of Ord.<=>. Example usage: 
--   sortBy (comparing snd) [(1, "z"), (2, "b")] == [(2, "b"), (1, "z")] 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#comparing
comparing ∷ Ord α ⇒ (β→α) → β → β → Ordering

-- | Alias for comparing 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#ascending
ascending ∷ Ord α ⇒ (β→α) → β → β → Ordering

-- |descending f applies a projection function on both sides of Ord.<=>, but flips arguments. Example usage: 
--   sortBy (descending fst) [(1, "z"), (2, "b")] == [(2, "b"), (1, "z")] 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#descending
descending ∷ Ord α ⇒ (β→α) → β → β → Ordering

-- | g `on` f 
--   Apply a projection function f on both operands of g 
--   comparing f = (<=>) `on` f  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#on
on ∷ (α→α→γ) → (β→α) → β → β → γ 
infixl  1

-- |(ST s a) is an abstract data type and is a computation that encapsulates side effects in state thread s and returns a value of type a. 
--   The type s can be understood as a compiler generated unique index for state threads. Every state thread is independent of each other and keeps track of mutable variables created in it. For detailed information, read the paper Lazy Functional State Threads. 
--   Every mutable native data type shall be wrapped in a Mutable with phantom type parameter s. that tells to what state thread the value belongs. For example, the new method of the java class java.util.Date could be accessed like this: 
--   data Date s 
 
--   Inside ST actions, Date values can be created and manipulated with impure native methods at will. However, such a value can never escape its ST thread. 
--   Because ST s is an instance of Monad, ST actions can be combined, which ensures sequenced execution. For example, we could add another method to the Date type that converts the date to a string: 
--   native toString :: Mutable s Date -> ST s String 
--   and a computation which yields the current time in string form: 
--   epoch = do date <- Date.new 0L return date.toString 
--   This looks almost like java already! epoch has type ST s String and we can run the computation with epoch.run (see ST.run below), which gives us a nice, pure, immutable, functional, correct String value. 
--   The IO type is just an alias for ST RealWorld, and can be thought of as indexing a unique global state thread. Values of type IO a are also called IO actions. 
--   Any ST value can also be used in the IO thread. 
--   This guarantees that any computation with side effect is sequenced through the ST-Monad any function whose return type is not IO something does not have side effects, as long as no impure native function or value is deliberately declared to be pure. 
--   Constructors
--  ----------------
--  private ST (s → a) 
--   Member Functions
--  ----------------
--  >>= ∷ ST γ α → (α→ST γ β) → ST γ β 
--  infixl  3 
--  performUnsafe ∷ IO α → α 
--   warning: You are breaking the rules. Expect an arbitrary result and program crashes.   
--  return ∷ α → ST β α 
--  run ∷ (∀ ß.ST ß a) → a 
--   Run a stateful action with type ST r a and return a result of type a. The overall computation ST.run st is pure, though inside the ST action local mutable state can be employed. 
--   This is possible only if the result type a of the state action does not mention r and if r is a type variable. Hence, it is not possible to ST.run an IO action.   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#ST
data ST s a


@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#ST.ST
private ST (s → a)

-- | This abstract data type identifies the global state (disk, network, you name it). Values of type ST RealWorld a are likely to perform input/output, manipulate global data and so on. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#RealWorld
data RealWorld 

-- |IO a is an abbreviation for ST RealWorld a  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#IO
type IO = ST RealWorld

-- | warning: use stderr.print instead 
--   print a String to the standard error stream  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#traceStr
traceStr ∷ String → IO () 
native java.lang.System.err.print

-- | warning: use stderr.println instead 
--   print a String to the standard error stream and append a new line.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#traceStrLn
traceStrLn ∷ String → IO () 
native java.lang.System.err.println

-- | warning: use stdout.print instead 
--   print a String to the standard output stream  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#printStr
printStr ∷ String → IO () 
native java.lang.System.out.print

-- | warning: use stdout.println instead 
--   print a String to the standard output stream and append a new line.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeBase#printStrLn
printStrLn ∷ String → IO () 
native java.lang.System.out.println

-- | Make the java.lang.Class object corresponding to the instantiated type available. 
--   An instance for this type class is needed for the element type of JArrays (which are based on reflective true Java arrays) one needs to create. 
--   A subclass of this is Exceptional which adds no additional functionality and behaves basically just as a marker interface for exceptions. 
--  JavaType instances are derivable for all data types. 
--   Known Instances
--  ----------------
--  NoMatch, GuardFailed, Exception, Undefined 
--   Member Functions
--  ----------------
--  javaClass ∷ JavaType e ⇒ Class e 
--   The java.lang.Class object of the instantiated type    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#JavaType
class JavaType e

-- | The java.lang.Class object of the instantiated type  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#JavaType.javaClass
javaClass ∷ JavaType e ⇒ Class e

-- | Function catch requires that the argument of a handler function is an instance of Exceptional. 
--   This is derivable for pure native data types. 
--   Known Instances
--  ----------------
--  NoMatch, GuardFailed, Exception, Undefined 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Exceptional
class JavaType e ⇒ Exceptional e


@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Exception
data Exception 

-- | nowarn: argument of type (ST s a) 
--   Runtime method for implementation of catch  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#doCatch
doCatch ∷ Class b → ST s a → (b → ST s a) → ST s a 
native frege.runtime.WrappedCheckedException.doCatch

-- | The construct 
--   action `catch` handler 
--   is a ST action with the same type as action. 
--   If action yields a result, this will be the result of the overall action. However, if, during execution of action the JVM raises an exception e with java type E, and E is a subtype of java type H, and H is the java type associated with the argument of handler, the return value will be: 
--   handler e 
--   Otherwise, if the type of e does not allow to pass it to handler it will be propagated upwards and a `catch` b will not return to its caller. 
--   Because catch is left associative, it is possible to catch different exceptions, like in: 
--   action `catch` handler1 `catch` handler2 
--   Care must be taken to check for the most specific exception first. In the example above, if the exception handled by handler1 is less specific than the one handled by handler2, then handler2 will never get a chance to execute. 
--   Another way to put this is to say that if E1 and E2 are distinct exception types handled in a chain of catches, and E1 is (from the point of view of Java!) a subtype of E2, then the handler for E1 must appear further left than the handler for E2. If it is a super type of E2, however, its handler must appear further right. And finally, if the types do not stand in a sub-type relationship, the order of the handlers is immaterial. 
--  Note If action is of the form: 
--   doSomething arg 
--   then, depending on the strictness of doSomething the argument arg may be evaluated before the action is returned. Exceptions (i.e. undefined values) that occur in the construction of the action do not count as exceptions thrown during execution of it, and hence cannot be catched. 
--   Example: 
--   println (head []) `catch` .... 
--   will not catch the exception that will be thrown when println evaluates 
--   For a remedy, see try. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#_catch
catch ∷ JavaType γ ⇒ ST β α → (γ→ST β α) → ST β α 
infixl  2

-- | nowarn: argument of type (ST s a) 
--   The construct 
--   action `finally` always 
--   returns the same value as action, when executed. 
--   However, no matter if action produces a value or diverges (for example, by throwing an exception), in any case will always be executed, and its return value dismissed. 
--   Note that finally only returns to its caller if action would have done so. 
--  finally has the same fixity as catch, hence it is possible to have 
--   action `catch` handler1 `catch` handler2 `finally` always 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#_finally
finally ∷ IO a → IO b → IO a 
native frege.runtime.WrappedCheckedException.doFinally 
infixl  2

-- | Deliberately throw an exception in the ST monad.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#throwST
throwST ∷ Throwable → ST s a

-- | Deliberately throw an exception in the IO monad.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#throwIO
throwIO ∷ Throwable → IO a

-- | Make sure that exceptions thrown during construction of an action can be catched. See catch for an explanation. 
--   Example: 
--   try println (head []) `catch` (\u::Undefined -> println u.catched) 
--   should print: 
--   frege.runtime.Undefined: Prelude.head [] 
--  try does work for unary functions only. To be safe with functions taking more actions, use: 
--   return a >>= (\a -> return b >>= (\b -> f a b)) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#_try
try ∷ Monad γ ⇒ (β→γ α) → β → γ α

-- | The catchAll function runs a ST action and returns either the result or the exception thrown. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#catchAll
catchAll ∷ ST α β → ST α (Exception | β)

-- |Mutable is a wrapper for native data types. A value of type Mutable s x is really an x, but it is tied to the ST thread s, from which it cannot escape. 
--   The compiler will enforce the following rules: When type checking x.m and (x::Mutable s T), m will be searched in the namespace T An impure native method must only take and return Mutable s T, unless T is itself pure (of course, all algebraic data types are pure) A pure type T must not appear as Mutable s T in native functions. Pure native functions may not return Mutable s t for any t. Pure native functions must not normally get arguments of type Mutable s T. (see below) In a type of the form ST x (Mutable y d), it will be enforced that x is the same type as y. Furthermore, all phantom types of all Mutable types must be the same in a type signature. 
--   To understand the motivation for rule 5, observe that the Mutable.Mutable data constructor cannot be applied in Frege code, hence the only possibility to obtain a value of type Mutable s t is through a native function. But by rule 4 above, this could only happen in the ST or IO monad, from whence those values cannot escape. The ST monad is a context where the sequence of actions matters. If we allowed passing mutable data to pure functions, their results would depend on whether ST actions modified the value before the result is actually evaluated. 
--   Although in a strict sense, no pure function should get mutable data, rule 5 is only enforced for native pure functions, as normal frege functions couldn't do anything with the native value, except passing them on to native functions eventually. 
--   There will be means to get a read-only copy (Freezable.freeze) of a mutable value through class Freezable. 
--   There is also the possibility that, although a value is mutable, there are certain properties that cannot change (such as the length of an array). It will be possible to bypass rule 5 in such cases. 
--   To summarize: Mutable data live in the ST or IO monad, from which they cannot escape. They can be passed only to other ST actions that operate in the same state thread, as indicated by the phantom type, that is either a type variable or RealWorld. Read only copies of mutable values and mutable copies of read-only values can be obtained. Rule 5 can be bypassed in exceptional cases. 
--   Constructors
--  ----------------
--  private Mutable m 
--   Member Functions
--  ----------------
--  freeze ∷ Freezable m ⇒ Mutable s m → ST s m 
--   obtain a read-only copy of a mutable value through cloning or serialization.   
--  readonly ∷ (m → b) → Mutable s m → ST s b 
--   Apply a pure function to a mutable value that pretends to be read-only. 
--   The function must not rely on anything that could change in the mutable data!   
--  thaw ∷ Freezable m ⇒ m → STMutable s m 
--   obtain a mutable copy of a read only value through cloning or serialization.    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Mutable
data Mutable s m


@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Mutable.Mutable
private Mutable m

-- | Alias for Mutable.readonly 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#readonly
readonly ∷ (m → b) → Mutable s m → ST s b

-- | Obtain a read only native value (temporarily) typed as Mutable 
--   For example, this could be needed when running a native ST method that uses the value as read-only, but we can't declare it, like: 
--   private native copyOf java.util.Arrays.copyOf :: ArrayOf s HashMap -> Int -> ST s (ArrayOf s HashMap) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#mutable
mutable ∷ β → Mutable α β

-- | They type for mostly mutable values that are tied to the IO monad. 
--   For java types that are mutable only so that they always would occur wrapped into MutableIO, the convention is to declare them as 
--   data Thing 
 
--   and just write Thing everywhere. The type checker will check the rules for native functions as if Thing was MutableIO Thing. 
--   However, normal type unification does not take the mutable status into account, so Mutable a m will never unify with Thing. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#MutableIO
type MutableIO = Mutable RealWorld

-- | They type of IO actions that return a mutable value of type d 
--   This is an abbreviation for ST RealWorld (Mutable RealWorld d)  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#IOMutable
type IOMutable d = ST RealWorld (Mutable RealWorld d)

-- | They type of ST actions that return a mutable value of type d 
--   This is an abbreviation for ST s (Mutable s d)  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#STMutable
type STMutable s d = ST s (Mutable s d)

-- | Type class for mutable values that support making read-only copies. To be implemented with care. 
--   Member Functions
--  ----------------
--  freeze ∷ Freezable f ⇒ f → f 
--   "Freeze" a mutable native value. The result is supposed to be immutable or at least not reachable from other parts of the code, especially from java code. 
--   The most prominent way to freeze a value is by Cloneable.clone-ing it, if that is supported. But note that sometimes a deep copy would be needed, and that clone does not do that.  
--  thaw ∷ Freezable f ⇒ f → f 
--   The inverse of Freezable.freeze creates a value (an object) which can be passed to impure functions without compromising the frozen object passed as argument. 
--   One possibility to thaw an object is by cloning it. 
--   If Freezable.thaw is not implemented correctly, bad things may happen.   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Freezable
class Freezable f

-- | "Freeze" a mutable native value. The result is supposed to be immutable or at least not reachable from other parts of the code, especially from java code. 
--   The most prominent way to freeze a value is by Cloneable.clone-ing it, if that is supported. But note that sometimes a deep copy would be needed, and that clone does not do that. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Freezable.freeze
freeze ∷ Freezable f ⇒ f → f

-- | The inverse of Freezable.freeze creates a value (an object) which can be passed to impure functions without compromising the frozen object passed as argument. 
--   One possibility to thaw an object is by cloning it. 
--   If Freezable.thaw is not implemented correctly, bad things may happen. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Freezable.thaw
thaw ∷ Freezable f ⇒ f → f

-- | For a data type declared like 
--   data D 
 
--   where Javatype implements the java.lang.Cloneable interface, one can get implementations for Freezable.freeze and Freezable.thaw by just stating 
--   instance Cloneable D 
--   The Freezable.freeze and Freezable.thaw operations are implemented in terms of Cloneable.clone. 
--   Note: Cloning does not produce safe copies if the cloned object contains references to mutable objects. In such cases, sort of a deep cloning would be required. 
--   Member Functions
--  ----------------
--  clone ∷ Cloneable f ⇒ f → f 
--  pure native clone 
--  clone v must be a native method that works like java.lang.Object#clone.  
--  freeze ∷ Cloneable f ⇒ f → f 
--  thaw ∷ Cloneable f ⇒ f → f 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Cloneable
class Freezable f ⇒ Cloneable f

-- |clone v must be a native method that works like java.lang.Object#clone. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Cloneable.clone
clone ∷ Cloneable f ⇒ f → f 
pure native clone


@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Cloneable.freeze
freeze ∷ Cloneable f ⇒ f → f


@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Cloneable.thaw
thaw ∷ Cloneable f ⇒ f → f

-- | For a data type declared like 
--   data D 
 
--   where Javatype implements the java.io.Serializable interface, one can get implementations for Freezable.freeze and Freezable.thaw by just stating 
--   instance Serializable D 
--   The Freezable.freeze and Freezable.thaw operations are implemented in terms of Serializable.copySerializable, which serializes its argument to a byte array and creates a new copy by deserializing it from the byte array. 
--   Member Functions
--  ----------------
--  copySerializable ∷ Serializable f ⇒ f → f 
--  pure native frege.runtime.Runtime.copySerializable 
--  copySerializable v is supposed to be a native function that is implemented by frege.runtime.Runtime.copySerializable at the instantiated type.  
--  freeze ∷ Serializable f ⇒ f → f 
--   make a safe copy through serialization/deserialization   
--  thaw ∷ Serializable f ⇒ f → f 
--   make a safe copy through serialization/deserialization    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Serializable
class Freezable f ⇒ Serializable f

-- |copySerializable v is supposed to be a native function that is implemented by frege.runtime.Runtime.copySerializable at the instantiated type. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Serializable.copySerializable
copySerializable ∷ Serializable f ⇒ f → f 
pure native frege.runtime.Runtime.copySerializable

-- | make a safe copy through serialization/deserialization  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Serializable.freeze
freeze ∷ Serializable f ⇒ f → f

-- | make a safe copy through serialization/deserialization  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Serializable.thaw
thaw ∷ Serializable f ⇒ f → f

-- | A mutable reference, suitable for use in the ST monad.  
--   Member Functions
--  ----------------
--  get ∷ Mutable s (Ref a) → ST s a 
--  native get 
--   get the value the reference is pointing to   
--  modify ∷ Mutable β (Ref α) → (α→α) → ST β () 
--   modify the referenced value with a function   
--  new ∷ a → STMutable s (Ref a) 
--  native new 
--   create a reference that is initially set to the argument value   
--  put ∷ Mutable s (Ref a) → a → ST s () 
--  native put 
--   assign another value to the reference    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Ref
data Ref a 

-- | get the value the reference is pointing to  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Ref.get
get ∷ Mutable s (Ref a) → ST s a 
native get

-- | modify the referenced value with a function  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Ref.modify
modify ∷ Mutable β (Ref α) → (α→α) → ST β ()

-- | create a reference that is initially set to the argument value  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Ref._new
new ∷ a → STMutable s (Ref a) 
native new

-- | assign another value to the reference  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#Ref.put
put ∷ Mutable s (Ref a) → a → ST s () 
native put

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#IORef
type IORef a = Mutable RealWorld (Ref a)

-- | Alias for Ref.get 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#readIORef
readIORef ∷ Mutable s (Ref a) → ST s a 
native get

-- | Alias for Ref.put 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#writeIORef
writeIORef ∷ Mutable s (Ref a) → a → ST s () 
native put

-- | Alias for Ref.modify 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#modifyIORef
modifyIORef ∷ Mutable β (Ref α) → (α→α) → ST β ()

-- | Alias for Ref.new 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeIO#newIORef
newIORef ∷ a → STMutable s (Ref a) 
native new

-- | A class for containers/collections that have an empty value. 
--   Known Instances
--  ----------------
--  StringJ, [] 
--   Member Functions
--  ----------------
--  empty ∷ ListEmpty α ⇒ α β 
--   the empty container   
--  null ∷ ListEmpty α ⇒ α β → Bool 
--  true if and only if the container is ListEmpty.empty    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListEmpty
class ListEmpty α

-- | the empty container  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListEmpty.empty
empty ∷ ListEmpty α ⇒ α β

-- |true if and only if the container is ListEmpty.empty  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListEmpty._null
null ∷ ListEmpty α ⇒ α β → Bool

-- | A class for types that support the (++) operator.  
--   Known Instances
--  ----------------
--  [], StringJ 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListMonoid
class (ListSemigroup α, ListEmpty α) ⇒ ListMonoid α

-- | A class for types that support concat  
--   Known Instances
--  ----------------
--  [], StringJ 
--   Member Functions
--  ----------------
--  ++ ∷ ListSemigroup α ⇒ α β → α β → α β 
--  infixr  13 
--   concatenate two lists, strings or whatever 
--   empty ++ x == x && x ++ empty == x    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListSemigroup
class ListSemigroup α

-- | concatenate two lists, strings or whatever 
--   empty ++ x == x && x ++ empty == x  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListSemigroup._plus_plus
(++) ∷  ListSemigroup α ⇒ α β → α β → α β 
infixr  13

-- | A class for things we can view as a list 
--   Such data types are instances of ListMonoid and support ListView.head, ListView.tail, ListView.length and concatenation (ListSemigroup.++) 
--   This class provides no means to construct a list. 
--   Known Instances
--  ----------------
--  StringJ, [] 
--   Member Functions
--  ----------------
--  drop ∷ ListView α ⇒ Int → α β → α β 
--   drop a number of initial elements   
--  head ∷ ListView α ⇒ α β → β 
--   The first element of a list-view, or undefined if ListEmpty.empty   
--  length ∷ ListView α ⇒ α β → Int 
--   computes the length of the container in a type dependent way   
--  tail ∷ ListView α ⇒ α β → α β 
--   The tail of a list-view, or undefined if ListEmpty.empty   
--  take ∷ ListView α ⇒ Int → α β → α β 
--   take a number of initial elements   
--  toList ∷ ListView α ⇒ α β → [β] 
--   converts a list-view to a list   
--  uncons ∷ ListView α ⇒ α β → Maybe (β, α β) 
--   split the input stream in head and tail    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListView
class (ListSource α, ListEmpty α) ⇒ ListView α

-- | drop a number of initial elements  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListView.drop
drop ∷ ListView α ⇒ Int → α β → α β

-- | The first element of a list-view, or undefined if ListEmpty.empty  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListView.head
head ∷ ListView α ⇒ α β → β

-- | computes the length of the container in a type dependent way  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListView.length
length ∷ ListView α ⇒ α β → Int

-- | The tail of a list-view, or undefined if ListEmpty.empty  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListView.tail
tail ∷ ListView α ⇒ α β → α β

-- | take a number of initial elements  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListView.take
take ∷ ListView α ⇒ Int → α β → α β

-- | converts a list-view to a list  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListView.toList
toList ∷ ListView α ⇒ α β → [β]

-- | split the input stream in head and tail  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListView.uncons
uncons ∷ ListView α ⇒ α β → Maybe (β, α β)

-- | A class of things we can make a list from 
--   Known Instances
--  ----------------
--  StringJ, [], Maybe, Either 
--   Member Functions
--  ----------------
--  toList ∷ ListSource α ⇒ α β → [β] 
--   converts the value to a list    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListSource
class ListSource α

-- | converts the value to a list  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#ListSource.toList
toList ∷ ListSource α ⇒ α β → [β]

-- | Eagerly converts a String to a list.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#unpacked
unpacked ∷ String → [Char]

-- | convert a list of characters to a string 
--   packed ['a', 'b', 'c' ] == "abc" 
--   Not very efficient, may be replaced by a java function that does it with a string buffer later. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#packed
packed ∷ [Char] → String

-- |strhead s n returns the initial portion of s with at most n characters. if s.ListView.length is lower than n, only so much characters are returned. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#strhead
strhead ∷ StringJ α → Int → StringJ α

-- |and returns the conjunction of a Boolean list. For the result to be true, the list must be finite; false, however, results from a false value at a finite index of a finite or infinite list. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#and
and ∷ [Bool] → Bool

-- |or returns the disjunction of a Boolean list. For the result to be false, the list must be finite; true, however, results from a true value at a finite index of a finite or infinite list. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#or
or ∷ [Bool] → Bool

-- |any p xs tells if any element of xs has property p. This is equivalent to 
--   fold (||) false (map p xs) 
--   except that any stops at the first element that has property p. 
--   Note that, according to the identity above, any p [] is always false. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#any
any ∷ (α→Bool) → [α] → Bool

-- |all p xs tells if all elements of xs have property p. This is equivalent to 
--   fold (&&) true (map p xs) 
--   except that all stops at the first element that hasn't property p. 
--   Note that, according to the identity above, all p [] is always true. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#all
all ∷ (α→Bool) → [α] → Bool

-- |concat concatenates the subitems of the argument which is a list of list or a list of strings. 
--   It is ok if the argument is an infinite list or any of the sublists is infinite. In either case, the result will also be infinite. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#concat
concat ∷ (ListEmpty β, ListSemigroup β) ⇒ [β α] → β α

-- | Map a function over a list and concatenate the list or string results. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#concatMap
concatMap ∷ (ListEmpty α, ListSemigroup α) ⇒ (γ→α β) → [γ] → α β

-- |cycle xs builds a value that is an infinite repetition of xs, which must not be empty. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#cycle
cycle ∷ [α] → [α]

-- |filter p xs returns the list of elements x from xs where (p x) holds. 
--  filter will not stop to evaluate its argument list until the first/next element with the property asked for is found. For example 
--   filter (==true) (repeat false) 
--   will loop forever, whereas 
--   filter even [1..] 
--   will faithfully deliver the list of positive integers that are divisible by 2, one by one. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#filter
filter ∷ (α→Bool) → [α] → [α]

-- | warning: It is strongly advised to use fold instead - beware of stack overflow! 
--  foldl, applied to a binary operator, a starting value (typically the left identity of the operator), and a list, reduces the list using the binary operator, from left to right: 
--   fold f z [x1, x2, ..., xn] = (((z `f` x1) `f` x2) `f` ...) `f` xn 
--   Because the operator is applied lazily, foldl typically builds up large thunks which, when finally evaluated, may overflow the stack space. Therefore, the use of fold instead of foldl is strongly suggested. 
--   This function exists merely for compatibility with Haskell. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#foldl
foldl ∷ (β→α→β) → β → [α] → β

-- |fold, applied to a binary operator, a starting value (typically the left identity of the operator), and a list, reduces the list using the binary operator, from left to right: 
--   fold f z [x1, x2, ..., xn] = (((z `f` x1) `f` x2) `f` ...) `f` xn 
--  fold runs in constant stack space, but consumes the entire list before returning a result, so it must not be applied to infinite lists. 
--   This function is known as foldl' in Haskell where there is a bias in favour of using foldr. 
--   In the environment of the JVM stack space is precious, hence one should prefer fold when one has the choice. 
--  fold is strict in the accumulator, hence in every recursion the intermediate result is evaluated, thus preventing build up of possibly huge thunks that result in stack overflows on evaluation. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#fold
fold ∷ (β→α→β) → β → [α] → β

-- | The sum of the numbers in a list, same as (fold (Num.+) Num.zero)  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#sum
sum ∷ Num α ⇒ [α] → α

-- | The product of the numbers in a list, same as (fold (Num.*) Num.one)  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#product
product ∷ Num α ⇒ [α] → α

-- | The minimal value of a non empty list, same as (foldl1 Ord.min)  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#minimum
minimum ∷ Ord α ⇒ [α] → α

-- | The maximal value of a non empty list, same as (foldl1 Ord.max)  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#maximum
maximum ∷ Ord α ⇒ [α] → α

-- |foldl1 is a variant of fold that has no starting value argument and thus must be applied to nonempty lists only. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#foldl1
foldl1 ∷ (α→α→α) → [α] → α

-- |scanl is similar to fold but returns a list of successive reduced values from the left: 
--   scanl f z [x1, x2, ...] = [z, z `f` x1, (z `f` x1) `f` x2, ... ] 
--   The following property holds for all finite lists xs: 
--   last (scanl f z xs) == fold f z xs 
--   In contrast to fold, scanl can operate on infinite lists. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#scanl
scanl ∷ (α→β→α) → α → [β] → [α]

-- |scanl1 is similar to scanl, but takes the ListView.head of the list as starting element and is thus only applicable to non-empty lists. 
--   scanl1 f [x1, x2, ...] = [x1, x1 `f` x2, (x1 `f` x2) `f` ...] 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#scanl1
scanl1 ∷ (α→α→α) → [α] → [α]

-- |scanr is the right-to-left dual of scanl. 
--   Note that 
--   head (scanr f z xs) == foldr f z xs.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#scanr
scanr ∷ (α → β → β) → β → [α] → [β]

-- |scanr1 is a variant of scanr that has no starting value argument.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#scanr1
scanr1 ∷ (α→α→α) → [α] → [α]

-- | Fold over a list from right to left. 
--   foldr f a (x1:x2:x3:[]) 
--   is the same as 
--   x1 `f` (x2 `f` (x3 `f` a)) 
--   Note that, if f is strict in the second argument, foldr f will need stack space proportional to the length of the list. But if f is lazy in it's second argument, foldr works on infinite lists. 
--   If f is commutative, the list finite and laziness not an issue, fold may be the better choice since it runs with constant stack space. Otherwise, if f is not commutative, foldrs will trade time and heap space for stack space by folding the flipped f over the reversed list. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#foldr
foldr ∷ (α→β→β) → β → [α] → β

-- |foldr1 is a variant of foldr that has no starting argument, and thus must be applied to a non-empty list  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#foldr1
foldr1 ∷ (α→α→α) → [α] → α

-- | This function may be used in place of 
--   foldr f z xs 
--   if f is strict in its right operand and xs is a finite list, in cases where foldr exceeds the stack size, which is usually quite limited in the JVM. 
--  foldrs will need extra CPU cycles and maybe (temporary) heap space for reverse-ing its list argument, before folding the flipped f over it. 
--   If f is commutative, you may simply use fold instead. 
--   The following property holds for all finite lists xs: 
--   foldr f z xs == foldrs f z xs 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#foldrs
foldrs ∷ (β→α→α) → α → [β] → α

-- | Returns all but the last element from a list. 
--   The following property holds for all non-empty finite lists /xs/: 
--   init xs ++ [last xs] == xs  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#init
init ∷ [α] → [α]

-- | Returns the last element of a list by taking the ListView.head of the reversed list. 
--   See also init  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#last
last ∷ [α] → α

-- |map f xs applies f to each element of xs and builds a new list from the results. 
--   Usage of map is safe on infinite lists, it delivers the result list one by one as it is demanded. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#map
map ∷ (β→α) → [β] → [α]

-- | reverses a list 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#reverse
reverse ∷ [α] → [α]

-- |splitAt n xs returns a tuple where first element is xs prefix of length n and the second element is the remainder of the list. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#splitAt
splitAt ∷ ListView α ⇒ Int → α β → (α β, α β)

-- |chunked n xs makes a list of chunks of xs with size n 
--  n must be positive, otherwise an infinite list of [] is returned. 
--   The following should hold: 
--   n > 0 ==> concat (chunked n xs) == xs  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#chunked
chunked ∷ Int → [α] → [[α]]

-- |takeWhile p xs takes leading elements from /xs/ while they satisfy the predicate /p/. 
--   Example: 
--   takeWhile (<7) [1,2,3,9,4] == [1,2,3] 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#takeWhile
takeWhile ∷ (α→Bool) → [α] → [α]

-- |dropWhile p xs drops leading elements from xs that satisfy the predicate p. 
--   The following holds for all lists xs 
--   takeWhile p xs ++ dropWhile p xs == xs 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#dropWhile
dropWhile ∷ (α→Bool) → [α] → [α]

-- |span p xs returns a tuple whose first element is the longest prefix of xs elements that satisfy p and whose second element is the remainder of the list. 
--   span p xs == (takeWhile p xs, dropWhile p xs) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#span
span ∷ (α→Bool) → [α] → ([α], [α])

-- |break, applied to a predicate /p/ and a list /xs/, returns a tuple where the first element is the longest prefix (possibly empty) of /xs/ elements that do not satisfy /p/ and the second element is the remainder of the list. 
--  break p is equivalent to span (not • p). 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#_break
break ∷ (α→Bool) → [α] → ([α], [α])

-- |e `elem` xs is true if and only if at least one of the elements of xs equals e. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#elem
elem ∷ Eq α ⇒ α → [α] → Bool 
infix  9

-- | opposite of elem  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#notElem
notElem ∷ Eq α ⇒ α → [α] → Bool 
infix  9

-- |repeat a builds an infinite list where all elements are a. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#repeat
repeat ∷ α → [α]


@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#replicate
replicate ∷ Int → α → [α]

-- |iterate f a builds the infinite list [a, f a, f (f a), ...] 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#iterate
iterate ∷ (α→α) → α → [α]

-- |zip as bs builds a list of tuples of corresponding elements of /as/ and /bs/. Trailing elements of the longer list are ignored. 
--   zip (1,2,3) "ab" = [(1, "a"), (2, "b")] 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#zip
zip ∷ [β] → [α] → [(β, α)]

-- |unzip turns a list of tuples into a tuple of lists. It is the opposite of zip and the following holds for genuine lists 
--   (curry zip @ unzip) xs == xs 
--   But note that 
--   (unzip @ curry zip) (as, bs) == (as,bs) 
--   will only hold if length as == length bs 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#unzip
unzip ∷ [(β, α)] → ([β], [α])

-- |zipWith f xs ys zips two lists with function f instead of the standard (,) that is used by zip 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#zipWith
zipWith ∷ (β→γ→α) → [β] → [γ] → [α]

-- |zip3 zips 3 lists in the same way as zip does it.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#zip3
zip3 ∷ [γ] → [β] → [α] → [(γ, β, α)]

-- |unzip3 unzips a list of triples and returns a triple of lists.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#unzip3
unzip3 ∷ [(γ, β, α)] → ([γ], [β], [α])

-- |zipWith3 f zips 3 lists with function f instead of the standard (,,) that is used by zip3  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#zipWith3
zipWith3 ∷ (α→β→δ→γ) → [α] → [β] → [δ] → [γ]

-- |intersperse a xs inserts a between every two elements of xs 
--   intersperse 0 (1..3) == [1,0,2,0,3] 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeList#intersperse
intersperse ∷ α → [α] → [α]

-- | The Functor class is used for types that can be mapped over. Instances of Functor should satisfy the following laws: 
--   fmap id == id fmap (f . g) == fmap f . fmap g 
--   Known Instances
--  ----------------
--  Either, ST, ->, (,), [], (,,) 
--   Member Functions
--  ----------------
--  fmap ∷ Functor f ⇒ (a → b) → f a → f b 
--  infixl  4 
--   Map a function over a Functor    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Functor
class Functor f

-- | Map a function over a Functor  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Functor.fmap
fmap ∷ Functor f ⇒ (a → b) → f a → f b 
infixl  4

-- | Known Instances
--  ----------------
--  Either, ST, [], -> 
--   Member Functions
--  ----------------
--  <*> ∷ Apply f ⇒ f (a→b) → f a → f b 
--  infixl  4 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Apply
class Functor f ⇒ Apply f


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Apply._lt_star_gt
(<*>) ∷  Apply f ⇒ f (a→b) → f a → f b 
infixl  4

-- | An infix synonym for Functor.fmap. Left associative with precedence 4.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#_lt$_gt
(<$>) ∷  Functor f ⇒ (a → b) → f a → f b 
infixl  4

-- | A functor with application, providing operations to embed pure expressions (Applicative.pure), and sequence computations and combine their results (Apply.<*>). 
--   A minimal complete definition must include implementations of these functions satisfying the following laws:  
--  identity 
--  pure id <*> v = v  
--  composition 
--  pure (•) <> u <> v <> w = u <> (v <*> w)  
--  homomorphism 
--  pure f <*> pure x = pure (f x)  
--  interchange 
--  u <> pure y = pure ($ y) <> u   
--   The other methods have the following default definitions, which may be overridden with equivalent specialized implementations: 
--   u *> v = pure (const id) <*> u <*> v u <* v = pure const <*> u <*> v 
--   As a consequence of these laws, the Functor instance for f will satisfy 
--   fmap f x = pure f <*> x 
--   If f is also a Monad, it should satisfy 
--   (<*>) = ap 
--   (which implies that Applicative.pure and Apply.<*> satisfy the applicative functor laws). 
--   Minimal complete definition: Applicative.pure and Apply.<*>. 
--   Known Instances
--  ----------------
--  Either, ST, [], -> 
--   Member Functions
--  ----------------
--  *> ∷ Applicative p ⇒ p a → p b → p b 
--  infixl  4 
--   Sequence actions, discarding the value of the first argument.   
--  <* ∷ Applicative p ⇒ p a → p b → p a 
--  infixl  4 
--   Sequence actions, discarding the value of the second argument.   
--  pure ∷ Applicative p ⇒ a → p a 
--   Lift a value    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Applicative
class (Functor p, Apply p) ⇒ Applicative p

-- | Sequence actions, discarding the value of the first argument.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Applicative._star_gt
(*>) ∷  Applicative p ⇒ p a → p b → p b 
infixl  4

-- | Sequence actions, discarding the value of the second argument.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Applicative._lt_star
(<*) ∷  Applicative p ⇒ p a → p b → p a 
infixl  4

-- | Lift a value  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Applicative.pure
pure ∷ Applicative p ⇒ a → p a


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#apply
apply ∷ Apply p ⇒ p (a→b) → p a → p b


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftA
liftA ∷ Applicative f ⇒ (a → b) → f a → f b


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftA2
liftA2 ∷ Applicative f ⇒ (a → b → c) → f a → f b → f c


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftA3
liftA3 ∷ Applicative f ⇒ (a → b → c → d) → f a → f b → f c → f d


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftA4
liftA4 ∷ Applicative f ⇒ (a → b → c → d → e) → f a → f b → f c → f d → f e


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftA5
liftA5 ∷ Applicative f ⇒ (a → b → c → d → e → g) → f a → f b → f c → f d → f e → f g

-- | Known Instances
--  ----------------
--  Either, ->, ST, [] 
--   Member Functions
--  ----------------
--  >>= ∷ Bind f ⇒ f a → (a → f b) → f b 
--  infixl  3 
--   Sequentially compose two actions, passing any value produced by the first as an argument to the second.    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Bind
class (Functor f, Apply f) ⇒ Bind f

-- | Sequentially compose two actions, passing any value produced by the first as an argument to the second.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Bind._gt_gt_eq
(>>=) ∷  Bind f ⇒ f a → (a → f b) → f b 
infixl  3

-- | Member Functions
--  ----------------
--  <|> ∷ Alt f ⇒ f a → f a → f a 
--  infixl  3 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Alt
class Functor f ⇒ Alt f


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Alt._lt_bar_gt
(<|>) ∷  Alt f ⇒ f a → f a → f a 
infixl  3

-- | Member Functions
--  ----------------
--  pzero ∷ Plus f ⇒ f a 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Plus
class (Functor f, Alt f) ⇒ Plus f


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Plus.pzero
pzero ∷ Plus f ⇒ f a

-- | Member Functions
--  ----------------
--  <+> ∷ MonadAlt f ⇒ f a → f a → f a 
--  infixr  13 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadAlt
class (Functor f, Apply f, Bind f, Applicative f, Monad f, Alt f, Plus f) ⇒ MonadAlt f


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadAlt._lt_plus_gt
(<+>) ∷  MonadAlt f ⇒ f a → f a → f a 
infixr  13

-- | The Monad class defines the basic operations over a monad, a concept from a branch of mathematics known as category theory. From the perspective of a Frege programmer, however, it is best to think of a monad as an abstract datatype of actions. 
--   Frege’s do expressions provide a convenient syntax for writing monadic expressions. 
--   Instances of Monad should satisfy the following laws: 
--   return a >>= k == k a m >>= return == m m >>= (\x -> k x >>= h) == (m >>= k) >>= h 
--   Since instances of Monad are also instances of Functor, they additionally shall satisfy the law: 
--   fmap f xs == xs >>= return • f 
--   which is also the default implementation of Functor.fmap. 
--   The instances of Monad for lists, Maybe and ST defined in the Prelude satisfy these laws. 
--   Minimal complete definition: Bind.>>= and (Applicative.pure or Monad.return) 
--   Known Instances
--  ----------------
--  Either, ->, ST, [] 
--   Member Functions
--  ----------------
--  <*> ∷ Monad m ⇒ m (a→b) → m a → m b 
--  infixl  4 
--  >> ∷ Monad m ⇒ m a → m b → m b 
--  infixl  3 
--   Sequentially compose two actions, discarding any value produced by the first, this works like sequencing operators (such as the semicolon) in imperative languages.  
--  fmap ∷ Monad m ⇒ (a → b) → m a → m b 
--  infixl  4 
--  join ∷ Monad m ⇒ m (m a) → m a 
--   The Monad.join function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.  
--  pure ∷ Monad m ⇒ a → m a 
--  return ∷ Monad m ⇒ a → m a 
--   Inject a value into the Monad. This is the same as Applicative.pure.   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Monad
class (Functor m, Apply m, Bind m, Applicative m) ⇒ Monad m


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Monad._lt_star_gt
(<*>) ∷  Monad m ⇒ m (a→b) → m a → m b 
infixl  4

-- | Sequentially compose two actions, discarding any value produced by the first, this works like sequencing operators (such as the semicolon) in imperative languages. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Monad._gt_gt
(>>) ∷  Monad m ⇒ m a → m b → m b 
infixl  3


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Monad.fmap
fmap ∷ Monad m ⇒ (a → b) → m a → m b 
infixl  4

-- | The Monad.join function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Monad.join
join ∷ Monad m ⇒ m (m a) → m a


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Monad.pure
pure ∷ Monad m ⇒ a → m a

-- | Inject a value into the Monad. This is the same as Applicative.pure. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Monad._return
return ∷ Monad m ⇒ a → m a

-- | The MonadFail class augments Monad by adding the MonadFail.fail operation. This operation is not part of the mathematical definition of a monad. 
--   Known Instances
--  ----------------
--  [], Either, ST 
--   Member Functions
--  ----------------
--  fail ∷ MonadFail m ⇒ String → m a 
--   Fail with a message.    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadFail
class (Functor m, Apply m, Bind m, Applicative m, Monad m) ⇒ MonadFail m

-- | Fail with a message.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadFail.fail
fail ∷ MonadFail m ⇒ String → m a

-- | A Monad with a left identity. 
--   Known Instances
--  ----------------
--  [] 
--   Member Functions
--  ----------------
--  mzero ∷ MonadZero mz ⇒ mz a 
--   This value should satisfy left zero: 
--   mzero >>= f = mzero    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadZero
class (Functor mz, Apply mz, Bind mz, Applicative mz, Monad mz) ⇒ MonadZero mz

-- | This value should satisfy left zero: 
--   mzero >>= f = mzero  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadZero.mzero
mzero ∷ MonadZero mz ⇒ mz a

-- | A Monad that also supports choice and failure and observes the following laws: 
--   mzero `mplus` v = v v `mplus` mzero = v (a `mplus` b) `mplus` c = a `mplus` (b `mplus` c) (a `mplus` b) >>= f = (a >>= f) `mplus` (b >>= f) 
--   Known Instances
--  ----------------
--  [] 
--   Member Functions
--  ----------------
--  mplus ∷ MonadPlus mp ⇒ mp a → mp a → mp a 
--  infixr  13 
--   an associative operation    
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadPlus
class (Functor mp, Apply mp, Bind mp, Applicative mp, Monad mp, MonadZero mp) ⇒ MonadPlus mp

-- | an associative operation  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadPlus.mplus
mplus ∷ MonadPlus mp ⇒ mp a → mp a → mp a 
infixr  13

-- | Member Functions
--  ----------------
--  orElse ∷ MonadOr mo ⇒ mo a → mo a → mo a 

@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadOr
class (Functor mo, Apply mo, Bind mo, Applicative mo, Monad mo, MonadZero mo) ⇒ MonadOr mo


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#MonadOr.orElse
orElse ∷ MonadOr mo ⇒ mo a → mo a → mo a

-- |=<< is the same as Bind.>>= with the arguments flipped  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#_eq_lt_lt
(=<<) ∷  Bind β ⇒ (α→β γ) → β α → β γ 
infixr  2

-- | left to right Kleisli composition of monads  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#_gt_eq_gt
(>=>) ∷  Bind δ ⇒ (α→δ β) → (β→δ γ) → α → δ γ 
infixr  3

-- | Right-to-left Kleisli composition of monads. (>=>), with the arguments flipped  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#_lt_eq_lt
(<=<) ∷  Bind δ ⇒ (γ→δ β) → (α→δ γ) → α → δ β 
infixr  3

-- | nowarn: deep recursion possible 
--   repeat action forever  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#forever
forever ∷ Monad α ⇒ α γ → α β

-- | discard or ignore result of evaluation, such as the return value of an IO action.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#_void
void ∷ Functor α ⇒ α β → α ()

-- |msum generalizes the list-based concat function.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#msum
msum ∷ MonadPlus α ⇒ [α β] → α β

-- |filterM generalizes the list-based filter function.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#filterM
filterM ∷ Monad α ⇒ (β→α Bool) → [β] → α [β]

-- | Version of filterM that works on small lists with length < 1000 only. 
--   Beware of stack overflow, and use filterM, when in doubt.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#shortFilterM
shortFilterM ∷ Monad α ⇒ (β→α Bool) → [β] → α [β]

-- |replicateM n act performs the action n times, gathering the results.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#replicateM
replicateM ∷ Monad m ⇒ Int → m a → m [a]

-- | Like replicateM, but discards the result.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#replicateM_
replicateM_ ∷ Monad m ⇒ Int → m a → m ()

-- | In many situations, the liftM operations can be replaced by uses of ap, which promotes function application. 
--   return f `ap` x1 `ap` ... `ap` xn 
--   is equivalent to 
--   liftMn f x1 x2 ... xn 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#ap
ap ∷ Monad α ⇒ α (γ→β) → α γ → α β

-- | Promote a function to a monad.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftM
liftM ∷ Monad m ⇒ (a → b) → m a → m b

-- | Promote a function to a monad, scanning the monadic arguments from left to right. For example, 
--   liftM2 (+) [0,1] [0,2] = [0,2,1,3] 
--   liftM2 (+) (Just 1) Nothing = Nothing  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftM2
liftM2 ∷ Monad β ⇒ (δ→γ→α) → β δ → β γ → β α

-- | Promote a function to a monad, scanning the monadic arguments from left to right (cf. liftM2).  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftM3
liftM3 ∷ Monad δ ⇒ (γ→α→β→ε) → δ γ → δ α → δ β → δ ε

-- | Promote a function to a monad, scanning the monadic arguments from left to right (cf. liftM2).  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftM4
liftM4 ∷ Monad α ⇒ (ε→ζ→γ→δ→β) → α ε → α ζ → α γ → α δ → α β

-- | Promote a function to a monad, scanning the monadic arguments from left to right (cf. liftM2).  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#liftM5
liftM5 ∷ Monad η ⇒ (α→β→δ→ε→γ→ζ) → η α → η β → η δ → η ε → η γ → η ζ

-- | The mapAndUnzipM function maps its first argument over a list, returning the result as a pair of lists. This function is mainly used with complicated data structures or a state-transforming monad. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#mapAndUnzipM
mapAndUnzipM ∷ Monad α ⇒ (β→α (δ, γ)) → [β] → α ([δ], [γ])

-- | The zipWithM function generalizes zipWith to arbitrary monads.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#zipWithM
zipWithM ∷ Monad γ ⇒ (α→β→γ δ) → [α] → [β] → γ [δ]

-- |zipWithM_ is the extension of zipWithM which ignores the final result.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#zipWithM_
zipWithM_ ∷ Monad δ ⇒ (β→α→δ γ) → [β] → [α] → δ ()

-- | Turn a list of monadic values [m a] into a monadic value with a list m [a] 
--   sequence [Just 1, Just 3, Just 2] = Just [1,2,3] 
--   This version of sequence runs in constant stack space, but needs heap space proportional to the size of the input list. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#sequence
sequence ∷ Monad β ⇒ [β α] → β [α]

-- | A version of sequence that uses the stack and may overflow with longer lists. 
--   A length of about 500 should be ok in most cases. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#shortSequence
shortSequence ∷ Monad α ⇒ [α β] → α [β]

-- | fold (Monad.>>) over a list of monadic values for side effects  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#sequence_
sequence_ ∷ Monad α ⇒ [α β] → α ()

-- |mapM f is equivalent to sequence • map f  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#mapM
mapM ∷ Monad β ⇒ (γ→β α) → [γ] → β [α]

-- |mapM_ f is equivalent to sequence_ • map f  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#mapM_
mapM_ ∷ Monad β ⇒ (γ→β α) → [γ] → β ()

-- |forM xs f = mapM_ f xs  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#forM
forM ∷ Monad β ⇒ [α] → (α→β γ) → β [γ]


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#forM_
forM_ ∷ Monad α ⇒ [β] → (β→α γ) → α ()

-- |for listSource f is a Java-friendly alias for forM_ that works on any list source  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#_for
for ∷ (Monad m, ListSource listSource) ⇒ listSource e → (e → m a) → m ()

-- |foldM f a xs folds a monadic function f over the list xs.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#foldM
foldM ∷ Monad α ⇒ (β→γ→α β) → β → [γ] → α β

-- |shortFoldM is suitable only for lists with a length way below 1000. 
--   Beware of stack overflow and use foldM instead.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#shortFoldM
shortFoldM ∷ Monad β ⇒ (γ→α→β γ) → γ → [α] → β γ

-- |foldM_ is the same as foldM, but discards the result  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#foldM_
foldM_ ∷ Monad β ⇒ (γ→α→β γ) → γ → [α] → β ()

-- |guard b is return () if b is true, and MonadZero.mzero otherwise.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#guard
guard ∷ MonadZero α ⇒ Bool → α ()

-- |when condition monadic returns /action/ of type Monad m => m () if /condition/ is true, otherwise Monad.return (). 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#when
when ∷ Monad α ⇒ Bool → α () → α ()

-- | opposite of when  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#unless
unless ∷ Monad α ⇒ Bool → α () → α ()


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#Reader
type Reader = ->


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#runReader
runReader ∷ (r → a) → r → a


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#mapReader
mapReader ∷ (a → b) → (r → a) → r → b


@url http://www.frege-lang.org/doc/frege/prelude/PreludeMonad#withReader
withReader ∷ (e → r) → (r → a) → e → a

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#ShowS
type ShowS = StringJ Char → StringJ Char

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#ReadS
type ReadS a = StringJ Char → [(a, StringJ Char)]

-- | Class Show provides operations to convert values to Strings. 
--   This class can be derived for all algebraic data types whose constituents are themselves instances of Show. 
--   Known Instances
--  ----------------
--  Bool, (), (,), (,,), Int, Char, Lang.Byte, Either, Double, Float, StringJ, Ordering, Long, Integer, Maybe, Lang.Short, Regex, [], Throwable 
--   Member Functions
--  ----------------
--  display ∷ Show show ⇒ show → String 
--  Show.display computes an alternate string representation of a value and is used in the Char and String instances of Show to produce an unquoted string. 
--   The default implementation is to do the same as Show.show.  
--  show ∷ Show show ⇒ show → String 
--   Computes the string representation of a value. 
--   Every instance must implement Show.show.   
--  showChars ∷ Show show ⇒ show → [Char] 
--  Show.showChars addresses the problem of Show.showing infinite values. Because Show.show has type String and String is atomic, this would try to create a string with infinite length, and hence is doomed to fail. 
--   The default definition is 
--   showChars = String.toList . show 
--   This is ok for all finite values. But instances for recursive types should implement it in a way that produces a lazy list of characters. 
--   Here is an example for the list instance: 
--   showChars [] = ['[', ']'] showChars xs = '[' : ( tail [ c | x <- xs, c <- ',' : showChars x ] ++ [']'] )  
--  showList ∷ Show show ⇒ [show] → String → String 
--   Haskell compatibility   
--  showsPrec ∷ Show show ⇒ Int → show → String → String 
--   Haskell compatibility   
--  showsub ∷ Show show ⇒ show → String 
--  Show.showsub is used for Show.showing elements of a value of an algebraic data type in derived instances of Show. 
--   The generated code in derived instances for types that are not enumerations is 
--   showsub x = "(" ++ show x ++ ")" 
--   so that values are enclosed in parentheses. Certain types like records, lists, tuples and many primitive types do not need extra parentheses, and thus Show.showsub is the same as Show.show, which is also the default implementation. 
--   In short, in derived instances, Show.showsub will do the right thing. in all other instances, Show.showsub will do the same as Show.show if not implemented differently. 
--   Example: 
--   derive Show ( Maybe b) 
--   implements the following: 
--   show Nothing = "Nothing" show (Just x) = "Just " ++ x.showsub showsub x = "(" ++ show x ++ ")" 
--   so that 
--   show (Just (Just 42)) == "Just (Just 42)"   
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#Show
class Show show

-- |Show.display computes an alternate string representation of a value and is used in the Char and String instances of Show to produce an unquoted string. 
--   The default implementation is to do the same as Show.show. 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#Show.display
display ∷ Show show ⇒ show → String

-- | Computes the string representation of a value. 
--   Every instance must implement Show.show.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#Show.show
show ∷ Show show ⇒ show → String

-- |Show.showChars addresses the problem of Show.showing infinite values. Because Show.show has type String and String is atomic, this would try to create a string with infinite length, and hence is doomed to fail. 
--   The default definition is 
--   showChars = String.toList . show 
--   This is ok for all finite values. But instances for recursive types should implement it in a way that produces a lazy list of characters. 
--   Here is an example for the list instance: 
--   showChars [] = ['[', ']'] showChars xs = '[' : ( tail [ c | x <- xs, c <- ',' : showChars x ] ++ [']'] ) 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#Show.showChars
showChars ∷ Show show ⇒ show → [Char]

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#Show.showList
showList ∷ Show show ⇒ [show] → String → String

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#Show.showsPrec
showsPrec ∷ Show show ⇒ Int → show → String → String

-- |Show.showsub is used for Show.showing elements of a value of an algebraic data type in derived instances of Show. 
--   The generated code in derived instances for types that are not enumerations is 
--   showsub x = "(" ++ show x ++ ")" 
--   so that values are enclosed in parentheses. Certain types like records, lists, tuples and many primitive types do not need extra parentheses, and thus Show.showsub is the same as Show.show, which is also the default implementation. 
--   In short, in derived instances, Show.showsub will do the right thing. in all other instances, Show.showsub will do the same as Show.show if not implemented differently. 
--   Example: 
--   derive Show ( Maybe b) 
--   implements the following: 
--   show Nothing = "Nothing" show (Just x) = "Just " ++ x.showsub showsub x = "(" ++ show x ++ ")" 
--   so that 
--   show (Just (Just 42)) == "Just (Just 42)" 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#Show.showsub
showsub ∷ Show show ⇒ show → String

-- |joined sep xs concatenates all strings in /xs/, and inserts /sep/ between any two elements of /xs/. 
--   If /xs/ is empty, the result is an empty string. If /sep/ is an empty string, then the result is just the concatenation of the strings in /xs/. 
--   Example: 
--   joined ", " ["aaa", "bbb", "ccc"] == "aaa, bbb, ccc" 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#joined
joined ∷ String → [String] → String

-- | convert a list of characters to a string 
--   packed ['a', 'b', 'c' ] == "abc" 
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#packed
packed ∷ [Char] → String

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#shows
shows ∷ Show a ⇒ a → String → String

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#showChar
showChar ∷ Char → String → String

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#showString
showString ∷ String → String → String

-- | Haskell compatibility  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#showParen
showParen ∷ Bool → (String → String) → String → String

-- | splits a String on end-of-line and returns a list of Strings 
--   The last line may or may not be terminated by newline. 
--   End-of-line is signaled by a number of carriage returns followed by a new line. 
--   This should work for UNIX and Windows.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#lines
lines ∷ String → [String]

-- | The line separator suitable for the platform the program is running on.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#lineSeparator
lineSeparator ∷ String

-- |unlines is an inverse operation to lines. 
--   It joins lines, after appending a terminating newline to each.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#unlines
unlines ∷ [String] → String

-- | strip trailing spaces, tabs, newline and carriage return characters from a string  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#chomp
chomp ∷ String → String

-- | splits a String on non empty sequences of spaces and returns a list of Strings  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#words
words ∷ String → [String]

-- |unwords is an inverse operation to words. 
--   It joins words with separating spaces.  
@url http://www.frege-lang.org/doc/frege/prelude/PreludeText#unwords
unwords ∷ [String] → String

-- | class Arbitrary
--   Random generation and shrinking of values.
--   Minimal complete definition: Arbitrary.arbitrary
--   Known Instances
--  ----------------
--  ->, (,,), (), (,), (,,,), (,,,,), Maybe, Either, Lang.Byte, Bool, Char, Double, Integer, Int, Float, JArray, Long, TM.TreeMap, Lang.Short, Ordering, StringJ, []
--   Member Functions
--  ----------------
--  arbitrary ∷ Arbitrary a ⇒ Gen a
--   A generator for values of the given type.
--  shrink ∷ Arbitrary a ⇒ a → [a]
--   Produces a (possibly) empty list of all the possible immediate shrinks of the given value.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#Arbitrary
class Arbitrary a

-- | A generator for values of the given type.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#Arbitrary.arbitrary
arbitrary ∷ Arbitrary a ⇒ Gen a

-- | Produces a (possibly) empty list of all the possible immediate shrinks of the given value.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#Arbitrary.shrink
shrink ∷ Arbitrary a ⇒ a → [a]


@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#shrinkList
shrinkList ∷ (a → [a]) → [a] → [[a]]

-- | Generates an integral number. The number can be positive or negative and its maximum absolute value depends on the size parameter.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#arbitrarySizedIntegral
arbitrarySizedIntegral ∷ Num a ⇒ Gen a

-- | Generates a fractional number. The number can be positive or negative and its maximum absolute value depends on the size parameter.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#arbitrarySizedFloating
arbitrarySizedFloating ∷ Floating a ⇒ Gen a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#arbitraryBoundedIntegral
arbitraryBoundedIntegral ∷ (Bounded a, Integral a) ⇒ Gen a

-- | Generates an element of a bounded type. The element is chosen from the entire range of the type.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#arbitraryBoundedRandom
arbitraryBoundedRandom ∷ (Bounded a, Random a) ⇒ Gen a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#arbitraryBoundedEnum
arbitraryBoundedEnum ∷ (Bounded a, Enum a) ⇒ Gen a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#arbitrarySizedBoundedIntegral
arbitrarySizedBoundedIntegral ∷ (Bounded a, Integral a) ⇒ Gen a

-- | Returns no shrinking alternatives.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#shrinkNothing
shrinkNothing ∷ a → [a]

-- | Shrink an integral number.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#shrinkIntegral
shrinkIntegral ∷ Integral a ⇒ a → [a]

-- | Shrink a fraction.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#shrinkFloating
shrinkFloating ∷ Floating a ⇒ a → [a]

-- | CoArbitrary
--   Used for random generation of functions.
--   Known Instances
--  ----------------
--  ->, (,), (), (,,,), (,,), (,,,,), Ordering, Integer, Either, Char, Bool, Double, Int, Float, Maybe, Long, TM.TreeMap, StringJ, []
--   Member Functions
--  ----------------
--  coarbitrary ∷ CoArbitrary a ⇒ a → Gen c → Gen c
--   Used to generate a function of type a -> c. The implementation should use the first argument to perturb the random generator given as the second argument. The returned generator is then used to generate the function result.
--   You can often use QuickCheckGen.variant and >< to implement CoArbitrary.coarbitrary.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#CoArbitrary
class CoArbitrary a

-- | Used to generate a function of type a -> c. The implementation should use the first argument to perturb the random generator given as the second argument. The returned generator is then used to generate the function result.
--   You can often use QuickCheckGen.variant and >< to implement CoArbitrary.coarbitrary.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#CoArbitrary.coarbitrary
coarbitrary ∷ CoArbitrary a ⇒ a → Gen c → Gen c


@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#_gt_lt
(><) ∷  (Gen a → Gen a) → (Gen a → Gen a) → Gen a → Gen a
infixr  1


@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#coarbitraryIntegral
coarbitraryIntegral ∷ Integral a ⇒ a → Gen b → Gen b

-- |CoArbitrary.coarbitrary helper for lazy people :-).
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#coarbitraryShow
coarbitraryShow ∷ Show a ⇒ a → Gen b → Gen b

-- | A CoArbitrary.coarbitrary implementation for enums.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#coarbitraryEnum
coarbitraryEnum ∷ Enum a ⇒ a → Gen b → Gen b

-- |----------------------------------------------------------------------
--   Generates a list of a given length.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#vector
vector ∷ Arbitrary a ⇒ Int → Gen [a]

-- | Generates an ordered list of a given length.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckArbitrary#orderedList
orderedList ∷ (Ord a, Arbitrary a) ⇒ Gen [a]


@url http://www.frege-lang.org/doc/frege/test/QuickCheckException#AnException
type AnException = Exception

-- |----------------------------------------------------------------------
@url http://www.frege-lang.org/doc/frege/test/QuickCheckException#tryEvaluate
tryEvaluate ∷ a → IO (Exception | a)


@url http://www.frege-lang.org/doc/frege/test/QuickCheckException#tryEvaluateIO
tryEvaluateIO ∷ IO a → IO (Exception | a)


@url http://www.frege-lang.org/doc/frege/test/QuickCheckException#isInterrupt
isInterrupt ∷ Exception → Bool


@url http://www.frege-lang.org/doc/frege/test/QuickCheckException#discard
discard ∷ a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckException#isDiscard
isDiscard ∷ Exception → Bool

-- | Generator type
--   Constructors
--  ----------------
--  MkGen {unGen ∷ StdGen → Int → a}
--   Member Functions
--  ----------------
--  unGen ∷ Gen α → StdGen → Int → α
--   access field unGen
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#Gen
data Gen a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#Gen.MkGen
MkGen {unGen ∷ StdGen → Int → a}


@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#variant
variant ∷ Integral n ⇒ n → Gen a → Gen a

-- | Used to construct generators that depend on the size parameter.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#sized
sized ∷ (Int → Gen a) → Gen a

-- | Overrides the size parameter. Returns a generator which uses the given size instead of the runtime-size parameter.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#resize
resize ∷ Int → Gen a → Gen a

-- | Generates a random element in the given inclusive range.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#choose
choose ∷ Random a ⇒ (a, a) → Gen a

-- | Promotes a monadic generator to a generator of monadic values.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#promote
promote ∷ Monad m ⇒ m (Gen a) → Gen (m a)

-- | Generates some example values.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#sample_tick
sample' ∷ Gen a → IO [a]

-- | Generates some example values and prints them to IO.stdout.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#sample
sample ∷ Show a ⇒ Gen a → IO ()

-- | Generates a value that satisfies a predicate.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#suchThat
suchThat ∷ Gen a → (a → Bool) → Gen a

-- | Tries to generate a value that satisfies a predicate.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#suchThatMaybe
suchThatMaybe ∷ Gen a → (a → Bool) → Gen (Maybe a)

-- | Randomly uses one of the given generators. The input list must be non-empty.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#oneof
oneof ∷ [Gen a] → Gen a

-- | Chooses one of the given generators, with a weighted random distribution. The input list must be non-empty.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#frequency
frequency ∷ [(Int, Gen a)] → Gen a

-- | Generates one of the given values. The input list must be non-empty.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#elements
elements ∷ [a] → Gen a

-- | Takes a list of elements of increasing size, and chooses among an initial segment of the list. The size of this initial segment increases with the size parameter. The input list must be non-empty.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#growingElements
growingElements ∷ [a] → Gen a

-- | Generates a list of random length.
--   The maximum length depends on the size parameter.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#listOf
listOf ∷ Gen a → Gen [a]

-- | Generates a non-empty list of random length.
--   The maximum length depends on the size parameter.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#listOf1
listOf1 ∷ Gen a → Gen [a]

-- | Generates a list of the given length.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckGen#vectorOf
vectorOf ∷ Int → Gen a → Gen [a]

-- |Blind x: as x, but x does not have to be in the Show class.
--   Constructors
--  ----------------
--  Blind a

@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Blind
data Blind a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Blind.Blind
Blind a

-- |Fixed x: as x, but will not be shrunk.
--   Constructors
--  ----------------
--  Fixed a

@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Fixed
data Fixed a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Fixed.Fixed
Fixed a

-- |Ordered xs: guarantees that xs is ordered.
--   Constructors
--  ----------------
--  Ordered {getOrdered ∷ [a]}
--   Member Functions
--  ----------------
--  getOrdered ∷ OrderedList α → [α]
--   access field getOrdered
@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#OrderedList
data OrderedList a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#OrderedList.Ordered
Ordered {getOrdered ∷ [a]}

-- |NonEmpty xs: guarantees that xs is non-empty.
--   Constructors
--  ----------------
--  NonEmpty {getNonEmpty ∷ [a]}
--   Member Functions
--  ----------------
--  getNonEmpty ∷ NonEmptyList α → [α]
--   access field getNonEmpty
@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#NonEmptyList
data NonEmptyList a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#NonEmptyList.NonEmpty
NonEmpty {getNonEmpty ∷ [a]}

-- |Positive x: guarantees that x > 0.
--   Constructors
--  ----------------
--  Positive {getPositive ∷ a}
--   Member Functions
--  ----------------
--  getPositive ∷ Positive α → α
--   access field getPositive
@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Positive
data Positive a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Positive.Positive
Positive {getPositive ∷ a}

-- |NonZero x: guarantees that x != 0.
--   Constructors
--  ----------------
--  NonZero {getNonZero ∷ a}
--   Member Functions
--  ----------------
--  getNonZero ∷ NonZero α → α
--   access field getNonZero
@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#NonZero
data NonZero a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#NonZero.NonZero
NonZero {getNonZero ∷ a}

-- |NonNegative x: guarantees that x >= 0.
--   Constructors
--  ----------------
--  NonNegative {getNonNegative ∷ a}
--   Member Functions
--  ----------------
--  getNonNegative ∷ NonNegative α → α
--   access field getNonNegative
@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#NonNegative
data NonNegative a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#NonNegative.NonNegative
NonNegative {getNonNegative ∷ a}

-- |Shrink2 x: allows 2 shrinking steps at the same time when shrinking x
--   Constructors
--  ----------------
--  Shrink2 a

@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Shrink2
data Shrink2 a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Shrink2.Shrink2
Shrink2 a

-- |Smart _ x: tries a different order when shrinking.
--   Constructors
--  ----------------
--  Smart Int   a

@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Smart
data Smart a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckModifiers#Smart.Smart
Smart Int   a

-- | The things quick check is testing
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Property
type Property = Gen Prop

-- | The class of things which can be tested, i.e. turned into a property.
--   Known Instances
--  ----------------
--  Bool, ->, Result, Prop, QuickCheckGen.Gen
--   Member Functions
--  ----------------
--  exhaustive ∷ Testable prop ⇒ prop → Bool
--  property ∷ Testable prop ⇒ prop → Property

@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Testable
class Testable prop


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Testable.exhaustive
exhaustive ∷ Testable prop ⇒ prop → Bool


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Testable.property
property ∷ Testable prop ⇒ prop → Property

-- | Do I/O inside a property. This can obviously lead to unrepeatable testcases, so use with care.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#morallyDubiousIOProperty
morallyDubiousIOProperty ∷ Testable prop ⇒ IO prop → Property


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#protect
protect ∷ (Exception → a) → IO a → IO a

-- |----------------------------------------------------------------------
--   Constructors
--  ----------------
--  MkProp {unProp ∷ Rose Result}
--   Member Functions
--  ----------------
--  unProp ∷ Prop → Rose Result
--   access field unProp
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Prop
data Prop


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Prop.MkProp
MkProp {unProp ∷ Rose Result}

-- | Constructors
--  ----------------
--  IORose (IO (Rose a))
--  MkRose a   [Rose a]

@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Rose
data Rose a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Rose.IORose
IORose (IO (Rose a))


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Rose.MkRose
MkRose a   [Rose a]


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#ioRose
ioRose ∷ IO (Rose Result) → Rose Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#joinRose
joinRose ∷ Rose (Rose a) → Rose a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#reduceRose
reduceRose ∷ Rose Result → IO (Rose Result)


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#onRose
onRose ∷ (a → [Rose a] → Rose a) → Rose a → Rose a

-- | Wrap a rose tree in an exception handler.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#protectRose
protectRose ∷ IO (Rose Result) → IO (Rose Result)

-- | Wrap all the Results in a rose tree in exception handlers.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#protectResults
protectResults ∷ Rose Result → Rose Result

-- | Different kinds of callbacks
--   Constructors
--  ----------------
--  PostFinalFailure CallbackKind   (State → Result → IO ())
--   Called with the final failing test-case
--  PostTest CallbackKind   (State → Result → IO ())
--   Called just after a test
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Callback
data Callback

-- | Called with the final failing test-case
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Callback.PostFinalFailure
PostFinalFailure CallbackKind   (State → Result → IO ())

-- | Called just after a test
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Callback.PostTest
PostTest CallbackKind   (State → Result → IO ())

-- | Constructors
--  ----------------
--  Counterexample
--   Affected by the verbose combinator
--  NotCounterexample
--   Not affected by the verbose combinator
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#CallbackKind
data CallbackKind

-- | Affected by the verbose combinator
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#CallbackKind.Counterexample
Counterexample

-- | Not affected by the verbose combinator
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#CallbackKind.NotCounterexample
NotCounterexample

-- | Constructors
--  ----------------
--  MkResult {ok ∷ Maybe Bool, expect ∷ Bool, reason ∷ String, interrupted ∷ Bool, abort ∷ Bool, stamp ∷ [(String, Int)], callbacks ∷ [Callback]}
--   Member Functions
--  ----------------
--  abort ∷ Result → Bool
--   access field abort
--  callbacks ∷ Result → [Callback]
--   access field callbacks
--  expect ∷ Result → Bool
--   access field expect
--  interrupted ∷ Result → Bool
--   access field interrupted
--  ok ∷ Result → Maybe Bool
--   access field ok
--  reason ∷ Result → String
--   access field reason
--  stamp ∷ Result → [(String, Int)]
--   access field stamp
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Result
data Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#Result.MkResult
MkResult {ok ∷ Maybe Bool, expect ∷ Bool, reason ∷ String, interrupted ∷ Bool, abort ∷ Bool, stamp ∷ [(String, Int)], callbacks ∷ [Callback]}


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#result
result ∷ Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#exception
exception ∷ String → Exception → Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#formatException
formatException ∷ String → Exception → String


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#protectResult
protectResult ∷ IO Result → IO Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#succeeded
succeeded ∷ Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#failed
failed ∷ Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#rejected
rejected ∷ Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#liftBool
liftBool ∷ Bool → Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#mapResult
mapResult ∷ Testable prop ⇒ (Result → Result) → prop → Property


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#mapTotalResult
mapTotalResult ∷ Testable prop ⇒ (Result → Result) → prop → Property


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#mapRoseResult
mapRoseResult ∷ Testable prop ⇒ (Rose Result → Rose Result) → prop → Property


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#mapProp
mapProp ∷ Testable prop ⇒ (Prop → Prop) → prop → Property

-- | Changes the maximum test case size for a property.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#mapSize
mapSize ∷ Testable prop ⇒ (Int → Int) → prop → Property

-- | Shrinks the argument to property if it fails. Shrinking is done automatically for most types. This is only needed when you want to override the default behavior.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#shrinking
shrinking ∷ Testable prop ⇒ (a → [a]) → a → (a → prop) → Property

-- | Disables shrinking for a property altogether.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#noShrinking
noShrinking ∷ Testable prop ⇒ prop → Property

-- | Adds a callback
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#callback
callback ∷ Testable prop ⇒ Callback → prop → Property

-- | Prints a message to the terminal as part of the counterexample.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#printTestCase
printTestCase ∷ Testable prop ⇒ String → prop → Property

-- | Performs an IO action after the last failure of a property.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#whenFail
whenFail ∷ Testable prop ⇒ IO () → prop → Property


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#whenFail_tick
whenFail' ∷ Testable prop ⇒ IO () → prop → Property

-- | Prints out the generated testcase every time the property is tested, like "verboseCheck" from QuickCheck 1. Only variables quantified over inside the verbose are printed.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#verbose
verbose ∷ Testable prop ⇒ prop → Property

-- | Modifies a property so that it is expected to fail for some test cases.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#expectFailure
expectFailure ∷ Testable prop ⇒ prop → Property

-- | Modifies a property so that it only will be tested once.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#once
once ∷ Testable prop ⇒ prop → Property

-- | Attaches a label to a property.
--   This is used for reporting test case distribution.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#label
label ∷ Testable prop ⇒ String → prop → Property

-- | Labels a property with a value:
--   collect x = label (show x)
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#collect
collect ∷ (Show a, Testable prop) ⇒ a → prop → Property

-- | Conditionally labels test case.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#classify
classify ∷ Testable prop ⇒ Bool → String → prop → Property

-- | Checks that at least the given proportion of the test cases belong to the given class.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#cover
cover ∷ Testable prop ⇒ Bool → Int → String → prop → Property

-- | Implication for properties: The resulting property holds if the first argument is false (in which case the test case is discarded), or if the given property holds.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#_eq_eq_gt
(==>) ∷  Testable prop ⇒ Bool → prop → Property
infixr  1


@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#within
within ∷ Testable prop ⇒ Int → prop → Property

-- | Explicit universal quantification: uses an explicitly given test case generator.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#forAll
forAll ∷ (Show a, Testable prop) ⇒ Gen a → (a → prop) → Property

-- | Like forAll, but tries to shrink the argument for failing test cases.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#forAllShrink
forAllShrink ∷ (Show a, Testable prop) ⇒ Gen a → (a → [a]) → (a → prop) → Property

-- | Nondeterministic choice: p1 .&. p2 picks randomly one of p1 and p2 to test. If you test the property 100 times it makes 100 random choices.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#_dot_amp_dot
(.&.) ∷  (Testable prop1, Testable prop2) ⇒ prop1 → prop2 → Property
infixr  2

-- | Conjunction: p1 .&&. p2 passes if both p1 and p2 pass.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#_dot_amp_amp_dot
(.&&.) ∷  (Testable prop1, Testable prop2) ⇒ prop1 → prop2 → Property
infixr  2

-- | Take the conjunction of several properties.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#conjoin
conjoin ∷ Testable prop ⇒ [prop] → Property

-- | Disjunction: p1 .||. p2 passes unless p1 and p2 simultaneously fail.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#_dot_bar_bar_dot
(.||.) ∷  (Testable prop1, Testable prop2) ⇒ prop1 → prop2 → Property
infixr  2

-- | Take the disjunction of several properties.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckProperty#disjoin
disjoin ∷ Testable prop ⇒ [prop] → Property

-- | Constructors
--  ----------------
--  MkState {terminal ∷ Terminal, maxSuccessTests ∷ Int, maxDiscardedTests ∷ Int, computeSize ∷ Int → Int → Int, numSuccessTests ∷ Int, numDiscardedTests ∷ Int, numRecentlyDiscardedTests ∷ Int, collected ∷ [[(String, Int)]], expectedFailure ∷ Bool, randomSeed ∷ StdGen, numSuccessShrinks ∷ Int, numTryShrinks ∷ Int, numTotTryShrinks ∷ Int}
--   Member Functions
--  ----------------
--  collected ∷ State → [[(String, Int)]]
--   access field collected
--  computeSize ∷ State → Int → Int → Int
--   access field computeSize
--  expectedFailure ∷ State → Bool
--   access field expectedFailure
--  maxDiscardedTests ∷ State → Int
--   access field maxDiscardedTests
--  maxSuccessTests ∷ State → Int
--   access field maxSuccessTests
--  numDiscardedTests ∷ State → Int
--   access field numDiscardedTests
--  numRecentlyDiscardedTests ∷ State → Int
--   access field numRecentlyDiscardedTests
--  numSuccessShrinks ∷ State → Int
--   access field numSuccessShrinks
--  numSuccessTests ∷ State → Int
--   access field numSuccessTests
--  numTotTryShrinks ∷ State → Int
--   access field numTotTryShrinks
--  numTryShrinks ∷ State → Int
--   access field numTryShrinks
--  randomSeed ∷ State → StdGen
--   access field randomSeed
--  terminal ∷ State → Terminal
--   access field terminal
@url http://www.frege-lang.org/doc/frege/test/QuickCheckState#State
data State


@url http://www.frege-lang.org/doc/frege/test/QuickCheckState#State.MkState
MkState {terminal ∷ Terminal, maxSuccessTests ∷ Int, maxDiscardedTests ∷ Int, computeSize ∷ Int → Int → Int, numSuccessTests ∷ Int, numDiscardedTests ∷ Int, numRecentlyDiscardedTests ∷ Int, collected ∷ [[(String, Int)]], expectedFailure ∷ Bool, randomSeed ∷ StdGen, numSuccessShrinks ∷ Int, numTryShrinks ∷ Int, numTotTryShrinks ∷ Int}

-- |----------------------------------------------------------------------
--   Constructors
--  ----------------
--  Args {replay ∷ Maybe (StdGen, Int), maxSuccess ∷ Int, maxDiscardRatio ∷ Int, maxSize ∷ Int, chatty ∷ Bool}
--   Member Functions
--  ----------------
--  chatty ∷ Args → Bool
--   whether to print anything
--  maxDiscardRatio ∷ Args → Int
--   maximum number of discarded tests per successful test before giving up
--  maxSize ∷ Args → Int
--   size to use for the biggest test cases
--  maxSuccess ∷ Args → Int
--   maximum number of successful tests before succeeding
--  replay ∷ Args → Maybe (StdGen, Int)
--   should we replay a previous test?
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#Args
data Args


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#Args.Args
Args {replay ∷ Maybe (StdGen, Int), maxSuccess ∷ Int, maxDiscardRatio ∷ Int, maxSize ∷ Int, chatty ∷ Bool}

-- | Result represents the test result
--   Constructors
--  ----------------
--  Failure {numTests ∷ Int, numShrinks ∷ Int, usedSeed ∷ StdGen, usedSize ∷ Int, reason ∷ String, interrupted ∷ Bool, labels ∷ [(String, Int)], output ∷ String}
--  GaveUp {numTests ∷ Int, labels ∷ [(String, Int)], output ∷ String}
--  NoExpectedFailure {numTests ∷ Int, labels ∷ [(String, Int)], output ∷ String}
--  Success {numTests ∷ Int, labels ∷ [(String, Int)], output ∷ String}
--   a successful test run
--   Member Functions
--  ----------------
--  interrupted ∷ Result → Bool
--   access field interrupted
--  labels ∷ Result → [(String, Int)]
--   labels and frequencies found during all tests
--  numShrinks ∷ Result → Int
--   access field numShrinks
--  numTests ∷ Result → Int
--   number of successful tests performed
--  output ∷ Result → String
--   printed output
--  reason ∷ Result → String
--   access field reason
--  usedSeed ∷ Result → StdGen
--   access field usedSeed
--  usedSize ∷ Result → Int
--   access field usedSize
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#Result
data Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#Result.Failure
Failure {numTests ∷ Int, numShrinks ∷ Int, usedSeed ∷ StdGen, usedSize ∷ Int, reason ∷ String, interrupted ∷ Bool, labels ∷ [(String, Int)], output ∷ String}


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#Result.GaveUp
GaveUp {numTests ∷ Int, labels ∷ [(String, Int)], output ∷ String}


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#Result.NoExpectedFailure
NoExpectedFailure {numTests ∷ Int, labels ∷ [(String, Int)], output ∷ String}

-- | a successful test run
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#Result.Success
Success {numTests ∷ Int, labels ∷ [(String, Int)], output ∷ String}

-- | isSuccess checks if the test run result was a success
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#isSuccess
isSuccess ∷ Result → Bool

-- | stdArgs are the default test arguments used
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#stdArgs
stdArgs ∷ Args

-- | Tests a property and prints the results to IO.stdout.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#quickCheck
quickCheck ∷ Testable prop ⇒ prop → IO ()

-- | Tests a property, using test arguments, and prints the results to IO.stdout.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#quickCheckWith
quickCheckWith ∷ Testable prop ⇒ Args → prop → IO ()

-- | Tests a property, produces a test result, and prints the results to IO.stdout.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#quickCheckResult
quickCheckResult ∷ Testable prop ⇒ prop → IO Result

-- | Tests a property, using test arguments, produces a test result, and prints the results to IO.stdout.
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#quickCheckWithResult
quickCheckWithResult ∷ Testable prop ⇒ Args → prop → IO Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#verboseCheck
verboseCheck ∷ Testable prop ⇒ prop → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#verboseCheckWith
verboseCheckWith ∷ Testable prop ⇒ Args → prop → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#verboseCheckResult
verboseCheckResult ∷ Testable prop ⇒ prop → IO Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#verboseCheckWithResult
verboseCheckWithResult ∷ Testable prop ⇒ Args → prop → IO Result

-- |----------------------------------------------------------------------
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#test
test ∷ State → (StdGen → Int → Prop) → IO Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#doneTesting
doneTesting ∷ State → (StdGen → Int → Prop) → IO Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#giveUp
giveUp ∷ State → (StdGen → Int → Prop) → IO Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#runATest
runATest ∷ State → (StdGen → Int → Prop) → IO Result


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#summary
summary ∷ State → [(String, Int)]


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#success
success ∷ State → IO ()

-- |----------------------------------------------------------------------
@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#foundFailure
foundFailure ∷ State → P.Result → [Rose P.Result] → IO Int


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#localMin
localMin ∷ State → P.Result → [Rose P.Result] → IO Int


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#localMin_tick
localMin' ∷ State → P.Result → [Rose P.Result] → IO Int


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#localMinFound
localMinFound ∷ State → P.Result → IO Int


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#callbackPostTest
callbackPostTest ∷ State → P.Result → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#callbackPostFinalFailure
callbackPostFinalFailure ∷ State → P.Result → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckTest#safely
safely ∷ State → IO () → IO ()

-- |----------------------------------------------------------------------
--   Constructors
--  ----------------
--  MkStr (String)

@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#Str
data Str


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#Str.MkStr
MkStr (String)


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#ranges
ranges ∷ (Show a, Integral a) ⇒ a → a → Str

-- |----------------------------------------------------------------------
@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#number
number ∷ Int → String → String


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#kurz
kurz ∷ Int → String → String


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#showErr
showErr ∷ Show a ⇒ a → String


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#oneLine
oneLine ∷ String → String


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#isOneLine
isOneLine ∷ String → Bool


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#bold
bold ∷ String → String

-- | Constructors
--  ----------------
--  MkTerminal (IORef (IO ()))   Output   Output

@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#Terminal
data Terminal


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#Terminal.MkTerminal
MkTerminal (IORef (IO ()))   Output   Output

-- | Constructors
--  ----------------
--  Output (String → IO ())   (IORef String)

@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#Output
data Output


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#Output.Output
Output (String → IO ())   (IORef String)


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#newTerminal
newTerminal ∷ Output → Output → IO Terminal


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#withBuffering
withBuffering ∷ IO a → IO a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#withStdioTerminal
withStdioTerminal ∷ (Terminal → IO a) → IO a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#withNullTerminal
withNullTerminal ∷ (Terminal → IO a) → IO a


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#terminalOutput
terminalOutput ∷ Terminal → IO String


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#Handle
type Handle = PrintWriter


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#handle
handle ∷ PrintWriter → String → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#output
output ∷ (String → IO ()) → IO Output


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#put
put ∷ Output → String → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#get
get ∷ Output → IO String


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#flush
flush ∷ Terminal → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#postpone
postpone ∷ Terminal → IO () → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#putPart
putPart ∷ Terminal → String → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#putTemp
putTemp ∷ Terminal → String → IO ()


@url http://www.frege-lang.org/doc/frege/test/QuickCheckText#putLine
putLine ∷ Terminal → String → IO ()

-- | Constructors
--  ----------------
--  DOpt {verbose ∷ Bool, docdir ∷ String, except ∷ [String], path ∷ [String]}
--   Member Functions
--  ----------------
--  docdir ∷ DocOpts → String
--   path name of documentation root, must exist
--  except ∷ DocOpts → [String]
--   excluded modules
--  path ∷ DocOpts → [String]
--   class path
--  verbose ∷ DocOpts → Bool
--   print a line for each documentation file
@url http://www.frege-lang.org/doc/frege/tools/Doc#DocOpts
data DocOpts


@url http://www.frege-lang.org/doc/frege/tools/Doc#DocOpts.DOpt
DOpt {verbose ∷ Bool, docdir ∷ String, except ∷ [String], path ∷ [String]}


@url http://www.frege-lang.org/doc/frege/tools/Doc#options
options ∷ DocOpts


@url http://www.frege-lang.org/doc/frege/tools/Doc#_main
main ∷ [String] → IO ()


@url http://www.frege-lang.org/doc/frege/tools/Doc#scanOpts
scanOpts ∷ DocOpts → [String] → IO (Maybe (DocOpts, [String]))


@url http://www.frege-lang.org/doc/frege/tools/Doc#usage
usage ∷ IO ()


@url http://www.frege-lang.org/doc/frege/tools/Doc#docThing
docThing ∷ Global → String → IO [Global]


@url http://www.frege-lang.org/doc/frege/tools/Doc#docArch
docArch ∷ Global → MutableIO File → IO [Global]


@url http://www.frege-lang.org/doc/frege/tools/Doc#docDir
docDir ∷ Global → MutableIO File → [String] → IO [Global]


@url http://www.frege-lang.org/doc/frege/tools/Doc#docDirEntry
docDirEntry ∷ Global → MutableIO File → [String] → String → IO [Global]

-- | make 1 documentation file
@url http://www.frege-lang.org/doc/frege/tools/Doc#work
work ∷ String → StIO ()


@url http://www.frege-lang.org/doc/frege/tools/Doc#mkLinks
mkLinks ∷ NSName → Pack → StG ()


@url http://www.frege-lang.org/doc/frege/tools/Doc#continueImport
continueImport ∷ StIO ()

-- | Member Functions
--  ----------------
--  new ∷ Long → STMutable s Date
--  native new
--  toString ∷ Mutable s Date → ST s String
--  native toString

@url http://www.frege-lang.org/doc/frege/tools/Doc#Date
data Date


@url http://www.frege-lang.org/doc/frege/tools/Doc#Date._new
new ∷ Long → STMutable s Date
native new


@url http://www.frege-lang.org/doc/frege/tools/Doc#Date.toString
toString ∷ Mutable s Date → ST s String
native toString


@url http://www.frege-lang.org/doc/frege/tools/Doc#stime
stime ∷ Long → String


@url http://www.frege-lang.org/doc/frege/tools/Doc#continueNamespaces
continueNamespaces ∷ FregePackage → StIO ()

-- | regular expression to split path names on File.separator
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#separatorRE
separatorRE ∷ Regex

-- | regular expression to detect "*.html" files
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#htmlAtEnd
htmlAtEnd ∷ Regex

-- | drop ".html" from the end of a name
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#unHtml
unHtml ∷ String → String

-- | tell if this is the name of a meta file
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#isMeta
isMeta ∷ String → Bool

-- | walk a directory and get all HTML files
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#findHtml
findHtml ∷ String → IO [(String, String)]

-- | We will make the following files:
--  fregedoc.html defines 3 frames: left upper, left lower and right.
--  prefix-frame.html contains a list of the module prefixes, which are shown in the left upper frame. Each entry causes the left lower frame to display the modules with that prefix.
--   For each module prefix a file that lists the actual modules. This one is displayed in the left lower frame, and clicking on one of the names causes the module documentation to appear in the right frame. For example, frame-frege.prelude.html would contain PreludeBase, PreludeMonad and so on.
--   There will be a pseudo module prefix "All Modules" and a corresponding frame-All-Modules.html that contains links to all the modules.
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#_main
main ∷ [String] → IO Bool

-- | Print the top file with the frameset
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#printFregeDoc
printFregeDoc ∷ String → IO ()

-- | compute the path of a file in a certain directory
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#fileIn
fileIn ∷ String → String → IO String

-- | make the prefix-frame.html file
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#makePrefixFrame
makePrefixFrame ∷ String → [String] → IO ()


@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#makeFrame
makeFrame ∷ String → String → [(String, String)] → IO ()

-- | wrap in html tags, i.e. <xx>foo</xx>
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#wrap
wrap ∷ String → String → String

-- | make link from a relative path and a HTML file name
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#linkElem
linkElem ∷ String → String → String

-- | make link to frame
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#frameElem
frameElem ∷ String → String

-- | display name of a module prefix
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#prefixName
prefixName ∷ String → String

-- | file name of a module prefix
@url http://www.frege-lang.org/doc/frege/tools/MakeDocIndex#prefixFrame
prefixFrame ∷ String → String

-- | functionality relies on the absolute name of type Gen
@url http://www.frege-lang.org/doc/frege/tools/Quick#propName
propName ∷ QName


@url http://www.frege-lang.org/doc/frege/tools/Quick#genName
genName ∷ QName

-- | Constructors
--  ----------------
--  Opt {list ∷ Bool, verbose ∷ Bool, excluded ∷ Bool, ntimes ∷ Int, props ∷ [String], global ∷ Global}
--   Member Functions
--  ----------------
--  excluded ∷ Options → Bool
--   access field excluded
--  global ∷ Options → Global
--   access field global
--  list ∷ Options → Bool
--   access field list
--  ntimes ∷ Options → Int
--   access field ntimes
--  props ∷ Options → [String]
--   access field props
--  verbose ∷ Options → Bool
--   access field verbose
@url http://www.frege-lang.org/doc/frege/tools/Quick#Options
data Options


@url http://www.frege-lang.org/doc/frege/tools/Quick#Options.Opt
Opt {list ∷ Bool, verbose ∷ Bool, excluded ∷ Bool, ntimes ∷ Int, props ∷ [String], global ∷ Global}


@url http://www.frege-lang.org/doc/frege/tools/Quick#defaultOptions
defaultOptions ∷ Options

-- | Constructors
--  ----------------
--  Counter {passed ∷ Int, failed ∷ Int, aborted ∷ Bool}
--   Member Functions
--  ----------------
--  aborted ∷ Counter → Bool
--   access field aborted
--  failed ∷ Counter → Int
--   access field failed
--  passed ∷ Counter → Int
--   access field passed
@url http://www.frege-lang.org/doc/frege/tools/Quick#Counter
data Counter


@url http://www.frege-lang.org/doc/frege/tools/Quick#Counter.Counter
Counter {passed ∷ Int, failed ∷ Int, aborted ∷ Bool}


@url http://www.frege-lang.org/doc/frege/tools/Quick#counterMconcat
counterMconcat ∷ Property


@url http://www.frege-lang.org/doc/frege/tools/Quick#testFailed
testFailed ∷ Counter


@url http://www.frege-lang.org/doc/frege/tools/Quick#testPassed
testPassed ∷ Counter


@url http://www.frege-lang.org/doc/frege/tools/Quick#testAborted
testAborted ∷ Counter


@url http://www.frege-lang.org/doc/frege/tools/Quick#unAborted
unAborted ∷ Counter → Counter


@url http://www.frege-lang.org/doc/frege/tools/Quick#_main
main ∷ [String] → IO Bool


@url http://www.frege-lang.org/doc/frege/tools/Quick#getOpt
getOpt ∷ Options → [String] → IO (Options, [String])


@url http://www.frege-lang.org/doc/frege/tools/Quick#checkThing
checkThing ∷ Options → String → IO Counter


@url http://www.frege-lang.org/doc/frege/tools/Quick#checkModule
checkModule ∷ Options → String → IO Counter

-- | import a package and extract all toplevel properties
@url http://www.frege-lang.org/doc/frege/tools/Quick#getProps
getProps ∷ String → StIO [String]


@url http://www.frege-lang.org/doc/frege/tools/Quick#checkProps
checkProps ∷ Options → String → [String] → IO Counter

-- | This does the magic.
--   We know that the type of the item is Property on the Frege level. This will be compiled to something that is a Lambda in Java terms.
--   Hence the cast is a no-op, and the native interface will believe our claim that the Lambda is a Property and will allow us to use it just like any other Property.
@url http://www.frege-lang.org/doc/frege/tools/Quick#toLambda
toLambda ∷ Object → IO Property
native (frege.runtime.Lambda)


@url http://www.frege-lang.org/doc/frege/tools/Quick#checkField
checkField ∷ Options → String → Class a → String → IO Counter


@url http://www.frege-lang.org/doc/frege/tools/Splitter#usage
usage ∷ IO ()


@url http://www.frege-lang.org/doc/frege/tools/Splitter#_main
main ∷ [String] → IO ()


@url http://www.frege-lang.org/doc/frege/tools/Splitter#ideoff
ideoff ∷ StIO (String, Int)


@url http://www.frege-lang.org/doc/frege/tools/Splitter#ours
ours ∷ Global → [Symbol]


@url http://www.frege-lang.org/doc/frege/tools/Splitter#ascending
ascending ∷ Global → [Symbol]


@url http://www.frege-lang.org/doc/frege/tools/Splitter#split
split ∷ [String] → StIO (String, Int)


@url http://www.frege-lang.org/doc/frege/tools/Splitter#printMods
printMods ∷ Global → String → Maybe String → [QName] → [QName] → [Symbol] → IO ()

-- | make filename from package name x.y.z.Packet => dest/x/y/z/Packet.suffix
@url http://www.frege-lang.org/doc/frege/tools/Splitter#targetPath
targetPath ∷ Global → String → String → String

-- | Create a new package and return a PrintWriter for it.
@url http://www.frege-lang.org/doc/frege/tools/Splitter#newMod
newMod ∷ Global → String → IO PrintWriter


@url http://www.frege-lang.org/doc/frege/tools/Splitter#appMod
appMod ∷ Global → String → IO PrintWriter


@url http://www.frege-lang.org/doc/frege/tools/Splitter#printHeader
printHeader ∷ PrintWriter → String → IO ()


@url http://www.frege-lang.org/doc/frege/tools/Splitter#printImports
printImports ∷ Global → PrintWriter → IO ()


@url http://www.frege-lang.org/doc/frege/tools/Splitter#printImpDcl
printImpDcl ∷ Global → PrintWriter → DefinitionS → IO ()


@url http://www.frege-lang.org/doc/frege/tools/Splitter#dotDep
dotDep ∷ PrintWriter → Global → TreeMap QName [QName] → [QName] → IO ()

-- | items dot doesn't like as bare word
@url http://www.frege-lang.org/doc/frege/tools/Splitter#dotkeys
dotkeys ∷ [String]


@url http://www.frege-lang.org/doc/frege/tools/Splitter#printDep
printDep ∷ (Nice β, Ord α, Eq β, Nice α) ⇒ Global → TreeMap α [β] → [α] → IO ()


@url http://www.frege-lang.org/doc/frege/tools/Splitter#printRange
printRange ∷ Global → Symbol → IO ()

-- | The full range goes from the lower range to the upper range, inclusive.
--   The lower range is determined by going from the original position backwards as long as there are comments or documentation.
--   The upper range is the last non comment or documentation token before the next definition in the ascending list of definitions, or, if there is no next, the last token in the file.
@url http://www.frege-lang.org/doc/frege/tools/Splitter#fullRange
fullRange ∷ Symbol → Maybe Symbol → StIO Position


@url http://www.frege-lang.org/doc/frege/tools/Splitter#dclintro
dclintro ∷ [TokenID]

-- | find the index of a given token
@url http://www.frege-lang.org/doc/frege/tools/Splitter#indexIn
indexIn ∷ (ArrayElem α, Eq α) ⇒ α → JArray α → Maybe Int

-- | Update symbol positions with their full range computed by fullRange.
@url http://www.frege-lang.org/doc/frege/tools/Splitter#makeRanges
makeRanges ∷ [Symbol] → StIO ()


@url http://www.frege-lang.org/doc/frege/tools/Splitter#symDep
symDep ∷ Global → Symbol → TreeSet QName


@url http://www.frege-lang.org/doc/frege/tools/Splitter#nameDep
nameDep ∷ Global → TreeSet QName → QName → TreeSet QName


@url http://www.frege-lang.org/doc/frege/tools/Splitter#exprDep
exprDep ∷ Global → ExprT → TreeSet QName


@url http://www.frege-lang.org/doc/frege/tools/Splitter#sigmaDep
sigmaDep ∷ Global → Sigma → TreeSet QName


@url http://www.frege-lang.org/doc/frege/tools/Splitter#rhoDep
rhoDep ∷ Global → TreeSet QName → Rho → TreeSet QName


@url http://www.frege-lang.org/doc/frege/tools/Splitter#ctxDep
ctxDep ∷ Global → TreeSet QName → Context → TreeSet QName


@url http://www.frege-lang.org/doc/frege/tools/Splitter#tauDep
tauDep ∷ Global → TreeSet QName → Tau → TreeSet QName


@url http://www.frege-lang.org/doc/frege/tools/YYgen#ressource
ressource ∷ Maybe α → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#yygenpar
yygenpar ∷ Maybe a → IO [String]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#loadRessource
loadRessource ∷ Maybe a → URLClassLoader → IO [String]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#loadUrl
loadUrl ∷ URL → IO [String]

-- | remove carriage returns from strings
@url http://www.frege-lang.org/doc/frege/tools/YYgen#uncr
uncr ∷ String → String

-- | give back file content as list of lines
@url http://www.frege-lang.org/doc/frege/tools/YYgen#fileContent
fileContent ∷ String → IO [String]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#scanlines
scanlines ∷ [String] → ([String], [(Int, [String])])


@url http://www.frege-lang.org/doc/frege/tools/YYgen#scanytablines
scanytablines ∷ [String] → ([String], [String], [(Int, String)], [(String, String)], TreeMap String String)


@url http://www.frege-lang.org/doc/frege/tools/YYgen#compiletypes
compiletypes ∷ TreeMap String String → [String] → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#genshowsi
genshowsi ∷ [String] → String

-- | Constructors
--  ----------------
--  Acc
--  Def
--  End
--  Lit (String)
--  NT (String)
--  T (String)

@url http://www.frege-lang.org/doc/frege/tools/YYgen#Item
data Item


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Item.Acc
Acc


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Item.Def
Def


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Item.End
End


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Item.Lit
Lit (String)


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Item.NT
NT (String)


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Item.T
T (String)

-- | Constructors
--  ----------------
--  Prod Int   Item   [Item]

@url http://www.frege-lang.org/doc/frege/tools/YYgen#Prod
data Prod


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Prod.Prod
Prod Int   Item   [Item]

-- | Constructors
--  ----------------
--  Accept
--  Error
--  Goto
--  Reduce
--  Shift

@url http://www.frege-lang.org/doc/frege/tools/YYgen#Todo
data Todo


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Todo.Accept
Accept


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Todo.Error
Error


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Todo.Goto
Goto


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Todo.Reduce
Reduce


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Todo.Shift
Shift

-- | Constructors
--  ----------------
--  A Todo   Item   Int

@url http://www.frege-lang.org/doc/frege/tools/YYgen#Action
data Action


@url http://www.frege-lang.org/doc/frege/tools/YYgen#Action.A
A Todo   Item   Int

-- | Constructors
--  ----------------
--  St Int   [Prod]   [Action]   [Action]

@url http://www.frege-lang.org/doc/frege/tools/YYgen#YYState
data YYState


@url http://www.frege-lang.org/doc/frege/tools/YYgen#YYState.St
St Int   [Prod]   [Action]   [Action]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#mkState
mkState ∷ (Int, [String]) → YYState


@url http://www.frege-lang.org/doc/frege/tools/YYgen#genitems
genitems ∷ [Item] → [String]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#genitem
genitem ∷ Int → Item → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#niceitem
niceitem ∷ Item → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#genst
genst ∷ YYState → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#printstates
printstates ∷ [YYState] → PrintWriter → IO ()


@url http://www.frege-lang.org/doc/frege/tools/YYgen#extrrule
extrrule ∷ YYState → [Prod]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#extrrules
extrrules ∷ [YYState] → [Prod]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#printpr
printpr ∷ Maybe α → [YYState] → [(Int, String)] → PrintWriter → IO ()


@url http://www.frege-lang.org/doc/frege/tools/YYgen#genacc
genacc ∷ Show α ⇒ α → Prod → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#genrule
genrule ∷ Prod → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#genprod
genprod ∷ Maybe α → Prod → [(Int, String)] → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#genstate
genstate ∷ Show α ⇒ α → [Prod] → Action → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#gengoto1
gengoto1 ∷ α → Action → [Prod] → [(α, Int, Int)]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#gengotos1
gengotos1 ∷ [Prod] → YYState → [(Int, Int, Int)]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#gengoto2
gengoto2 ∷ Action → [Prod] → [(Int, Int)] → [(Int, Int)]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#gengotos2
gengotos2 ∷ [Prod] → YYState → (Int, [(Int, Int)])


@url http://www.frege-lang.org/doc/frege/tools/YYgen#sortfst
sortfst ∷ Ord β ⇒ (β, γ) → (β, α) → Bool


@url http://www.frege-lang.org/doc/frege/tools/YYgen#sortgos
sortgos ∷ (Ord α, Ord β) ⇒ (α, γ, β) → (α, δ, β) → Ordering


@url http://www.frege-lang.org/doc/frege/tools/YYgen#altgotos
altgotos ∷ [Prod] → [YYState] → [(Int, Int, Int)] → [(Int, Int, Int)]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#altgotos2
altgotos2 ∷ [Prod] → [YYState] → [(Int, [(Int, Int)])]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#listmax
listmax ∷ Int


@url http://www.frege-lang.org/doc/frege/tools/YYgen#pracase
pracase ∷ Show a ⇒ String → [(Int, a)] → PrintWriter → IO ()


@url http://www.frege-lang.org/doc/frege/tools/YYgen#collecteactions
collecteactions ∷ YYState → Bool


@url http://www.frege-lang.org/doc/frege/tools/YYgen#collectacceptactions
collectacceptactions ∷ YYState → Bool


@url http://www.frege-lang.org/doc/frege/tools/YYgen#actions
actions ∷ [YYState] → [(Int, String)]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#recoveries
recoveries ∷ TreeMap String String → [YYState] → [(Int, String)]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#eactions
eactions ∷ [YYState] → [(Int, String)]


@url http://www.frege-lang.org/doc/frege/tools/YYgen#numbertypes
numbertypes ∷ Ord α ⇒ Int → [α] → TreeMap α Int → TreeMap α Int


@url http://www.frege-lang.org/doc/frege/tools/YYgen#numprod
numprod ∷ Prod → (Int, String)


@url http://www.frege-lang.org/doc/frege/tools/YYgen#listred
listred ∷ Show α ⇒ (α, String) → String


@url http://www.frege-lang.org/doc/frege/tools/YYgen#printreds
printreds ∷ Show α ⇒ [(α, String)] → PrintWriter → IO ()


@url http://www.frege-lang.org/doc/frege/tools/YYgen#gengos
gengos ∷ (Show β, Show α, Show δ, ListSource γ, Ord δ, Ord α, Ord β) ⇒ γ (δ, α, β) → String

-- | create frege code for go tabs
@url http://www.frege-lang.org/doc/frege/tools/YYgen#printgos
printgos ∷ [(Int, [(Int, Int)])] → PrintWriter → IO ()


@url http://www.frege-lang.org/doc/frege/tools/YYgen#format1
format1 ∷ String → Int → String
pure native java.lang.String.format


@url http://www.frege-lang.org/doc/frege/tools/YYgen#_main
main ∷ [String] → IO ()


@url http://www.frege-lang.org/doc/frege/tools/YYgen#cantwrite
cantwrite ∷ String → FileNotFoundException → IO ()


@url http://www.frege-lang.org/doc/frege/tools/YYgen#mainIO
mainIO ∷ Maybe String → String → IO ()

-- | Represents an abstract HTML document.
--   Constructors
--  ----------------
--  Doc [Paragraph]

@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Docu
data Docu


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Docu.Doc
Doc [Paragraph]

-- | Represents an abstract paragraph.
--   Constructors
--  ----------------
--  DL (Maybe String)   [(Text, [Paragraph])]
--  LI [Paragraph]
--  OUL Bool   (Maybe String)   [Paragraph]
--  Par (String)   Text

@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Paragraph
data Paragraph


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Paragraph.DL
DL (Maybe String)   [(Text, [Paragraph])]


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Paragraph.LI
LI [Paragraph]


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Paragraph.OUL
OUL Bool   (Maybe String)   [Paragraph]


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Paragraph.Par
Par (String)   Text

-- | convenience function to create a heading of level 1
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#h1
h1 ∷ Text → Paragraph

-- | convenience function to create a heading of level 2
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#h2
h2 ∷ Text → Paragraph

-- | convenience function to create a heading of level 3
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#h3
h3 ∷ Text → Paragraph

-- | convenience function to create a heading of level 4
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#h4
h4 ∷ Text → Paragraph

-- | convenience function to create an ordinary paragraph
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#par
par ∷ Text → Paragraph

-- | convenience function to create a pseudo paragraph
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#div
div ∷ Text → Paragraph

-- | convenience function to create an itemized list
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#ul
ul ∷ Maybe String → [Paragraph] → Paragraph

-- | convenience function to create a numbered list
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#ol
ol ∷ Maybe String → [Paragraph] → Paragraph

-- | Represents an abstract text sequence
--   Constructors
--  ----------------
--  E (String)
--   symbols like &forall; &rarr; ...
--  Label QName   Text
--   <a name="#label">text<\/a>
--  P (String)
--   plain text
--  PRef Pack   (Maybe String)   Text
--   reference to a package with optional item
--  Ref QName   Text
--   <a href="...">N.n<\/a>
--  Seq Text   Text
--   concatenation of 2 texts
--  T Attr   Text
--   text with character attributes
--  XLbl (String)   Text
--   generic label
--  XRef (String)   Text
--   generic ref
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text
data Text

-- | symbols like &forall; &rarr; ...
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text.E
E (String)

-- | <a name="#label">text<\/a>
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text.Label
Label QName   Text

-- | plain text
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text.P
P (String)

-- | reference to a package with optional item
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text.PRef
PRef Pack   (Maybe String)   Text

-- | <a href="...">N.n<\/a>
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text.Ref
Ref QName   Text

-- | concatenation of 2 texts
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text.Seq
Seq Text   Text

-- | text with character attributes
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text.T
T Attr   Text

-- | generic label
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text.XLbl
XLbl (String)   Text

-- | generic ref
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Text.XRef
XRef (String)   Text

-- | transform a text to bold text
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#bold
bold ∷ Text → Text

-- | transform a text to emphasized text
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#emph
emph ∷ Text → Text

-- | transform a text to text in monospaced font
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#code
code ∷ Text → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#code1
code1 ∷ Text → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#code2
code2 ∷ Text → Text

-- | a unresolved reference
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#badref
badref ∷ String → Text

-- | a reference to a type name
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#tref
tref ∷ QName → Global → Text

-- | a reference to a symbol
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#sref
sref ∷ SymbolT α → Global → Text

-- | a reference to a function or constructor name
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#fref
fref ∷ QName → Global → Text

-- | makes a single text from a list of texts
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#seq
seq ∷ [Text] → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#_colon_minus
(:-) ∷  Text → Text → Text
infixr  13


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#eForall
eForall ∷ Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#eArrow
eArrow ∷ Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#spc
spc ∷ Text

-- | remove Text.Label from Text
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#unlabel
unlabel ∷ Text → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#spaces
spaces ∷ Int → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#_break
break ∷ Text

-- | attribute values for use in Text
--   Constructors
--  ----------------
--  A (String)
--  Bold
--  Code
--  Italic
--  Normal

@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Attr
data Attr


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Attr.A
A (String)


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Attr.Bold
Bold


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Attr.Code
Code


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Attr.Italic
Italic


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#Attr.Normal
Normal

-- | a double colon in spaces, could be ∷ symbol if options allow
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#symDcolon
symDcolon ∷ Global → String


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#symForall
symForall ∷ Global → String


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#symArrow
symArrow ∷ Global → String


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#symDarrow
symDarrow ∷ Global → String


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#joint
joint ∷ String → (α→Text) → [α] → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#joins
joins ∷ Int → (α→Text) → [α] → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#docSym
docSym ∷ Global → Symbol → (Text, [Paragraph])


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#docop
docop ∷ TokenID → Text

-- | Give the function that is overloaded with this one.
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#overloadOf
overloadOf ∷ Global → Symbol → [Symbol]

-- | Give a list of sigmas and throws clauses of the overloads for this one
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#overSig
overSig ∷ Global → SymbolT α → [(Sigma, [Tau])]

-- | create a label for a variable or a constructor
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#label
label ∷ QName → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#altcode
altcode ∷ [(Text, α)] → [(Text, α)]

-- | compile a doc comment to a list of paragraphs
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#docit
docit ∷ Global → Maybe String → [Paragraph]

-- | we have the following parapgraph kinds: plain headers unordered list item ordered list item definition list item preformatted
--   Constructors
--  ----------------
--  DItem
--  Header
--  OItem
--  Plain
--  Pre
--  UItem

@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#PKind
data PKind


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#PKind.DItem
DItem


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#PKind.Header
Header


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#PKind.OItem
OItem


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#PKind.Plain
Plain


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#PKind.Pre
Pre


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#PKind.UItem
UItem

-- | tag paragraph with kind, each paragraph must have at least one line
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#tagP
tagP ∷ [String] → (PKind, [String])

-- | create doc paragraphs from tagged paragraphs
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#docpars
docpars ∷ Global → [(PKind, [String])] → [Paragraph]


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#ungt
ungt ∷ StringJ α → StringJ α

-- | compile a string with markup to Text
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#markup
markup ∷ Global → String → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#resolves
resolves ∷ Global → String → Text

-- | break up a long string into individual lines
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#unnl
unnl ∷ String → [String]

-- | remove leading \" * \" or just leading spaces from a string
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#unws
unws ∷ String → String

-- | drop empty strings from the front of a list
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#dropEmpty
dropEmpty ∷ [String] → [String]

-- | check if a list contains only empty lines
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#isEnd
isEnd ∷ [String] → Bool

-- | convert a list of lines to a list of paragraphs
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#lsToPs
lsToPs ∷ [String] → [[String]]

-- | check for paragraph type
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#pres
pres ∷ String → Bool


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#uitem
uitem ∷ String → Bool


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#oitem
oitem ∷ String → Bool


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#orex
orex ∷ Regex


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#ditem
ditem ∷ String → Bool


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#drex
drex ∷ Regex


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#header
header ∷ String → Bool

-- | check if this is the start of a list item
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#litem
litem ∷ String → Bool

-- | check if this is a normal paragraph line
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#item
item ∷ String → Bool

-- | Checks the property that, after applying unws, a string is either empty or it contains at least a non space character
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#prop_unws
prop_unws ∷ Property

-- | Check whether file1 is newer than file2
--   If both files are modified at the same time, file1 is considered newer thus File.new "X.class" `newer` File.new "X.java" works as expected.
--   If file1 does not exist, it is not newer than any file.
--   newer :: File -> File -> Bool newer file1 file2 | file1.exists = file1.lastModified >= file2.lastModified | otherwise = false
--   given a package name and an extension, create a file name e.g.
--   packToFile "frege.system.IO" ".fr" == frege/system/IO.fr
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#packToFile
packToFile ∷ String → String → String


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#packToFileRef
packToFileRef ∷ Pack → Global → IO String

-- | given a directory name and a file or directory name, compute the name of the directory relative to that filename, e.g.
--   relPath "foo" "foo" == "." relPath "foo" "foo/x.html" == "." relPath "foo" "bar/z.html" == "../foo"
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#relPath
relPath ∷ Maybe (MutableIO File) → Maybe (MutableIO File) → IO String

-- | create a full HTML page with CSS and documentation
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#htmlDoc
htmlDoc ∷ Docu → StIO ()


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#emitHtml
emitHtml ∷ Bool → Docu → StIO ()


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#emitCss
emitCss ∷ StIO ()

-- | emit a HTML structure
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#htmlParagraph
htmlParagraph ∷ Paragraph → StIO ()


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#amper
amper ∷ Regex


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#lt
lt ∷ Regex


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#gt
gt ∷ Regex


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#htmlText
htmlText ∷ Text → StIO ()

-- | document a Sigma type
@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#dSigma
dSigma ∷ Global → Sigma → [Bool] → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#dRho
dRho ∷ Global → Rho → [Bool] → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#dRho2
dRho2 ∷ Global → Rho → [Bool] → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#dCtx
dCtx ∷ QNameMatcher.QNameMatcher α ⇒ Global → [ContextT α] → Text


@url http://www.frege-lang.org/doc/frege/tools/doc/Utilities#dTau
dTau ∷ QNameMatcher.QNameMatcher α ⇒ Global → TauT α → Text
