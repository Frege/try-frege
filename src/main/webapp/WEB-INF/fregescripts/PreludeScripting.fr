module scripting.PreludeScripting where
import frege.IO

native getEnv System.getProperty :: String -> IO String
newLine = getEnv "line.separator" 

stdoutWriter :: StringWriter
stdoutWriter = IO.performUnsafe $ StringWriter.new ()

stderrWriter :: StringWriter
stderrWriter = IO.performUnsafe $ StringWriter.new ()
    
stdout = IO.performUnsafe $ stdoutWriter.printer
    
stderr = IO.performUnsafe $ stderrWriter.printer

print :: Show a => a -> IO ()
print str = printStr $ display str

println :: Show a => a -> IO ()
println str = printStrLn $ display str

trace :: String -> Bool
trace str = IO.performUnsafe (traceStr str >> IO.return false)

traceLn :: String -> Bool
traceLn str = IO.performUnsafe (traceStrLn str >> IO.return false)
  
printStr :: String -> IO ()
printStr str = (stdout.append $ display str) >> return ()
  
printStrLn :: String -> IO ()
printStrLn str = do
  newLine <- newLine
  printStr str
  printStr newLine
  return ()
  
traceStr :: String -> IO ()
traceStr str = stderr.append str >> return ()
  
traceStrLn :: String -> IO ()
traceStrLn str = do
  newLine <- newLine
  traceStr str
  traceStr newLine
  return ()
  
stdoutStr = IO.performUnsafe $ stdoutWriter.toString
stderrStr = IO.performUnsafe $ stderrWriter.toString
